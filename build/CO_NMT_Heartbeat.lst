ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"CO_NMT_Heartbeat.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CO_NMT_receive,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	CO_NMT_receive:
  26              	.LVL0:
  27              	.LFB160:
  28              		.file 1 "Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c"
   1:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** /*
   2:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  * CANopen NMT and Heartbeat producer object.
   3:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  *
   4:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  * @file        CO_NMT_Heartbeat.c
   5:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  * @ingroup     CO_NMT_Heartbeat
   6:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  * @author      Janez Paternoster
   7:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  * @copyright   2004 - 2020 Janez Paternoster
   8:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  *
   9:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  * This file is part of CANopenNode, an opensource CANopen Stack.
  10:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  * Project home page is <https://github.com/CANopenNode/CANopenNode>.
  11:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  * For more information on CANopen see <http://www.can-cia.org/>.
  12:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  *
  13:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  * Licensed under the Apache License, Version 2.0 (the "License");
  14:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  * you may not use this file except in compliance with the License.
  15:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  * You may obtain a copy of the License at
  16:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  *
  17:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  *     http://www.apache.org/licenses/LICENSE-2.0
  18:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  *
  19:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  * Unless required by applicable law or agreed to in writing, software
  20:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  * distributed under the License is distributed on an "AS IS" BASIS,
  21:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  * See the License for the specific language governing permissions and
  23:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  * limitations under the License.
  24:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  */
  25:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
  26:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** #include "301/CO_NMT_Heartbeat.h"
  27:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
  28:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
  29:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** /*
  30:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  * Read received message from CAN module.
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 2


  31:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  *
  32:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  * Function will be called (by CAN receive interrupt) every time, when CAN
  33:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  * message with correct identifier will be received. For more information and
  34:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  * description of parameters see file CO_driver.h.
  35:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  */
  36:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** static void CO_NMT_receive(void *object, void *msg) {
  29              		.loc 1 36 53 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  37:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     uint8_t DLC = CO_CANrxMsg_readDLC(msg);
  34              		.loc 1 37 5 view .LVU1
  35              		.loc 1 37 13 is_stmt 0 view .LVU2
  36 0000 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2
  37              	.LVL1:
  38:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     uint8_t *data = CO_CANrxMsg_readData(msg);
  38              		.loc 1 38 5 is_stmt 1 view .LVU3
  39:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     CO_NMT_command_t command = (CO_NMT_command_t)data[0];
  39              		.loc 1 39 5 view .LVU4
  40              		.loc 1 39 22 is_stmt 0 view .LVU5
  41 0002 91F805C0 		ldrb	ip, [r1, #5]	@ zero_extendqisi2
  42              	.LVL2:
  40:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     uint8_t nodeId = data[1];
  43              		.loc 1 40 5 is_stmt 1 view .LVU6
  44              		.loc 1 40 13 is_stmt 0 view .LVU7
  45 0006 8A79     		ldrb	r2, [r1, #6]	@ zero_extendqisi2
  46              	.LVL3:
  41:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
  42:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     CO_NMT_t *NMT = (CO_NMT_t*)object;
  47              		.loc 1 42 5 is_stmt 1 view .LVU8
  43:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
  44:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     if (DLC == 2 && (nodeId == 0 || nodeId == NMT->nodeId)) {
  48              		.loc 1 44 5 view .LVU9
  49              		.loc 1 44 8 is_stmt 0 view .LVU10
  50 0008 022B     		cmp	r3, #2
  51 000a 00D0     		beq	.L4
  52              	.LVL4:
  53              	.L1:
  45:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         NMT->internalCommand = command;
  46:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
  47:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** #if (CO_CONFIG_NMT) & CO_CONFIG_FLAG_CALLBACK_PRE
  48:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         /* Optional signal to RTOS, which can resume task, which handles NMT. */
  49:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         if (NMT->pFunctSignalPre != NULL) {
  50:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             NMT->pFunctSignalPre(NMT->functSignalObjectPre);
  51:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         }
  52:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** #endif
  53:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
  54:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** }
  54              		.loc 1 54 1 view .LVU11
  55 000c 7047     		bx	lr
  56              	.LVL5:
  57              	.L4:
  44:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         NMT->internalCommand = command;
  58              		.loc 1 44 18 discriminator 1 view .LVU12
  59 000e 12B1     		cbz	r2, .L3
  44:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         NMT->internalCommand = command;
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 3


  60              		.loc 1 44 50 discriminator 2 view .LVU13
  61 0010 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
  62              	.LVL6:
  44:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         NMT->internalCommand = command;
  63              		.loc 1 44 34 discriminator 2 view .LVU14
  64 0012 9342     		cmp	r3, r2
  65 0014 FAD1     		bne	.L1
  66              	.L3:
  45:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         NMT->internalCommand = command;
  67              		.loc 1 45 9 is_stmt 1 view .LVU15
  45:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         NMT->internalCommand = command;
  68              		.loc 1 45 30 is_stmt 0 view .LVU16
  69 0016 80F802C0 		strb	ip, [r0, #2]
  70              	.LVL7:
  71              		.loc 1 54 1 view .LVU17
  72 001a F7E7     		b	.L1
  73              		.cfi_endproc
  74              	.LFE160:
  76              		.section	.text.OD_write_1017,"ax",%progbits
  77              		.align	1
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  82              	OD_write_1017:
  83              	.LVL8:
  84              	.LFB161:
  55:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
  56:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
  57:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** /*
  58:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  * Custom function for writing OD object "Producer heartbeat time"
  59:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  *
  60:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  * For more information see file CO_ODinterface.h, OD_IO_t.
  61:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****  */
  62:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** static ODR_t OD_write_1017(OD_stream_t *stream, const void *buf,
  63:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                            OD_size_t count, OD_size_t *countWritten)
  64:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** {
  85              		.loc 1 64 1 is_stmt 1 view -0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  65:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     if (stream == NULL || stream->subIndex != 0 || buf == NULL
  89              		.loc 1 65 5 view .LVU19
  90              		.loc 1 65 8 is_stmt 0 view .LVU20
  91 0000 A8B1     		cbz	r0, .L7
  92 0002 8446     		mov	ip, r0
  93              		.loc 1 65 33 discriminator 1 view .LVU21
  94 0004 407C     		ldrb	r0, [r0, #17]	@ zero_extendqisi2
  95              	.LVL9:
  96              		.loc 1 65 24 discriminator 1 view .LVU22
  97 0006 A0B9     		cbnz	r0, .L8
  98              		.loc 1 65 49 discriminator 2 view .LVU23
  99 0008 A9B1     		cbz	r1, .L9
  66:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         || count != sizeof(uint16_t) || countWritten == NULL
 100              		.loc 1 66 9 view .LVU24
 101 000a 022A     		cmp	r2, #2
 102 000c 15D1     		bne	.L10
 103              		.loc 1 66 38 discriminator 1 view .LVU25
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 4


 104 000e B3B1     		cbz	r3, .L11
  64:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     if (stream == NULL || stream->subIndex != 0 || buf == NULL
 105              		.loc 1 64 1 view .LVU26
 106 0010 10B5     		push	{r4, lr}
 107              	.LCFI0:
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 4, -8
 110              		.cfi_offset 14, -4
  67:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     ) {
  68:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         return ODR_DEV_INCOMPAT;
  69:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
  70:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
  71:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     CO_NMT_t *NMT = (CO_NMT_t *)stream->object;
 111              		.loc 1 71 5 is_stmt 1 view .LVU27
 112              		.loc 1 71 15 is_stmt 0 view .LVU28
 113 0012 DCF80440 		ldr	r4, [ip, #4]
 114              	.LVL10:
  72:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
  73:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     /* update object, send Heartbeat immediately */
  74:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     NMT->HBproducerTime_us = (uint32_t)CO_getUint16(buf) * 1000;
 115              		.loc 1 74 5 is_stmt 1 view .LVU29
 116              		.file 2 "Middlewares/Third_Party/CANopenNode/301/CO_driver.h"
   1:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /**
   2:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Interface between CAN hardware and CANopenNode.
   3:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
   4:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @file        CO_driver.h
   5:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @ingroup     CO_driver
   6:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @author      Janez Paternoster
   7:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @copyright   2004 - 2020 Janez Paternoster
   8:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
   9:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * This file is part of CANopenNode, an opensource CANopen Stack.
  10:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Project home page is <https://github.com/CANopenNode/CANopenNode>.
  11:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * For more information on CANopen see <http://www.can-cia.org/>.
  12:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
  13:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Licensed under the Apache License, Version 2.0 (the "License");
  14:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * you may not use this file except in compliance with the License.
  15:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * You may obtain a copy of the License at
  16:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
  17:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *     http://www.apache.org/licenses/LICENSE-2.0
  18:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
  19:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Unless required by applicable law or agreed to in writing, software
  20:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * distributed under the License is distributed on an "AS IS" BASIS,
  21:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * See the License for the specific language governing permissions and
  23:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * limitations under the License.
  24:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  */
  25:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
  26:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #ifndef CO_DRIVER_H
  27:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #define CO_DRIVER_H
  28:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
  29:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #include <string.h>
  30:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
  31:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #include "CO_config.h"
  32:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #include "CO_driver_target.h"
  33:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
  34:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #ifdef __cplusplus
  35:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** extern "C" {
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 5


  36:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #endif
  37:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
  38:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /* Stack configuration default global values.
  39:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * For more information see file CO_config.h. */
  40:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #ifndef CO_CONFIG_GLOBAL_FLAG_CALLBACK_PRE
  41:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  #define CO_CONFIG_GLOBAL_FLAG_CALLBACK_PRE (0)
  42:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #endif
  43:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #ifndef CO_CONFIG_GLOBAL_RT_FLAG_CALLBACK_PRE
  44:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  #define CO_CONFIG_GLOBAL_RT_FLAG_CALLBACK_PRE (0)
  45:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #endif
  46:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #ifndef CO_CONFIG_GLOBAL_FLAG_TIMERNEXT
  47:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  #define CO_CONFIG_GLOBAL_FLAG_TIMERNEXT (0)
  48:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #endif
  49:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #ifndef CO_CONFIG_GLOBAL_FLAG_OD_DYNAMIC
  50:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  #define CO_CONFIG_GLOBAL_FLAG_OD_DYNAMIC CO_CONFIG_FLAG_OD_DYNAMIC
  51:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #endif
  52:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #ifdef CO_DEBUG_COMMON
  53:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  #if (CO_CONFIG_DEBUG) & CO_CONFIG_DEBUG_SDO_CLIENT
  54:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****   #define CO_DEBUG_SDO_CLIENT(msg) CO_DEBUG_COMMON(msg)
  55:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  #endif
  56:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  #if (CO_CONFIG_DEBUG) & CO_CONFIG_DEBUG_SDO_SERVER
  57:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****   #define CO_DEBUG_SDO_SERVER(msg) CO_DEBUG_COMMON(msg)
  58:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  #endif
  59:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #endif
  60:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
  61:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /**
  62:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @defgroup CO_driver Driver
  63:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Interface between CAN hardware and CANopenNode.
  64:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
  65:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @ingroup CO_CANopen_301
  66:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @{
  67:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * CANopenNode is designed for speed and portability. It runs efficiently on
  68:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * devices from simple 16-bit microcontrollers to PC computers. It can run in
  69:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * multiple threads. Reception of CAN messages is pre-processed with very fast
  70:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * functions. Time critical objects, such as PDO or SYNC are processed in
  71:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * real-time thread and other objects are processed in normal thread. See
  72:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Flowchart in [README.md](index.html) for more information.
  73:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
  74:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @anchor CO_obj
  75:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * #### CANopenNode Object
  76:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * CANopenNode is implemented as a collection of different objects, for example
  77:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * SDO, SYNC, Emergency, PDO, NMT, Heartbeat, etc. Code is written in C language
  78:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * and tries to be object oriented. So each CANopenNode Object is implemented in
  79:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * a pair of .h/.c files. It basically contains a structure with all necessary
  80:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * variables and some functions which operates on it. CANopenNode Object is
  81:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * usually connected with one or more CAN receive or transmit Message Objects.
  82:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * (CAN message Object is a CAN message with specific 11-bit CAN identifier
  83:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * (usually one fixed or a range).)
  84:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
  85:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * #### Hardware interface of CANopenNode
  86:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * It consists of minimum three files:
  87:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * - **CO_driver.h** file declares common functions. This file is part of the
  88:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * CANopenNode. It is included from each .c file from CANopenNode.
  89:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * - **CO_driver_target.h** file declares microcontroller specific type
  90:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * declarations and defines some macros, which are necessary for CANopenNode.
  91:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * This file is included from CO_driver.h.
  92:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * - **CO_driver.c** file defines functions declared in CO_driver.h.
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 6


  93:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
  94:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * **CO_driver_target.h** and **CO_driver.c** files are specific for each
  95:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * different microcontroller and are not part of CANopenNode. There are separate
  96:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * projects for different microcontrollers, which usually include CANopenNode as
  97:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * a git submodule. CANopenNode only includes those two files in the `example`
  98:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * directory and they are basically empty. It should be possible to compile the
  99:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * `CANopenNode/example` on any system, however compiled program is not usable.
 100:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * CO_driver.h contains documentation for all necessary macros, types and
 101:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * functions.
 102:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 103:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * See [CANopenNode/Wiki](https://github.com/CANopenNode/CANopenNode/wiki) for a
 104:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * known list of available implementations of CANopenNode on different systems
 105:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * and microcontrollers. Everybody is welcome to extend the list with a link to
 106:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * his own implementation.
 107:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 108:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Implementation of the hardware interface for specific microcontroller is not
 109:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * always an easy task. For reliable and efficient operation it is necessary to
 110:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * know some parts of the target microcontroller in detail (for example threads
 111:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * (or interrupts), CAN module, etc.).
 112:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  */
 113:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 114:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** Major version number of CANopenNode */
 115:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #define CO_VERSION_MAJOR 4
 116:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** Minor version number of CANopenNode */
 117:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #define CO_VERSION_MINOR 0
 118:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 119:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 120:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /* Macros and declarations in following part are only used for documentation. */
 121:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #ifdef CO_DOXYGEN
 122:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /**
 123:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @defgroup CO_dataTypes Basic definitions
 124:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @{
 125:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 126:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Target specific basic definitions and data types.
 127:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 128:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Must be defined in the **CO_driver_target.h** file.
 129:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 130:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Depending on processor or compiler architecture, one of the two macros must
 131:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * be defined: CO_LITTLE_ENDIAN or CO_BIG_ENDIAN. CANopen itself is little
 132:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * endian.
 133:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 134:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Basic data types may be specified differently on different architectures.
 135:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Usually `true` and `false` are defined in `<stdbool.h>`, `NULL` is defined in
 136:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * `<stddef.h>`, `int8_t` to `uint64_t` are defined in `<stdint.h>`.
 137:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  */
 138:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** CO_LITTLE_ENDIAN or CO_BIG_ENDIAN must be defined */
 139:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #define CO_LITTLE_ENDIAN
 140:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** Macro must swap bytes, if CO_BIG_ENDIAN is defined */
 141:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #define CO_SWAP_16(x) x
 142:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** Macro must swap bytes, if CO_BIG_ENDIAN is defined */
 143:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #define CO_SWAP_32(x) x
 144:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** Macro must swap bytes, if CO_BIG_ENDIAN is defined */
 145:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #define CO_SWAP_64(x) x
 146:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** NULL, for general usage */
 147:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #define NULL (0)
 148:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** Logical true, for general use */
 149:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #define true 1
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 7


 150:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** Logical false, for general use */
 151:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #define false 0
 152:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** Boolean data type for general use */
 153:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** typedef uint_fast8_t bool_t;
 154:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** INTEGER8 in CANopen (0002h), 8-bit signed integer */
 155:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** typedef signed char int8_t;
 156:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** INTEGER16 in CANopen (0003h), 16-bit signed integer */
 157:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** typedef signed int int16_t;
 158:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** INTEGER32 in CANopen (0004h), 32-bit signed integer */
 159:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** typedef signed long int int32_t;
 160:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** INTEGER64 in CANopen (0015h), 64-bit signed integer */
 161:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** typedef signed long long int int64_t;
 162:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** UNSIGNED8 in CANopen (0005h), 8-bit unsigned integer */
 163:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** typedef unsigned char uint8_t;
 164:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** UNSIGNED16 in CANopen (0006h), 16-bit unsigned integer */
 165:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** typedef unsigned int uint16_t;
 166:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** UNSIGNED32 in CANopen (0007h), 32-bit unsigned integer */
 167:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** typedef unsigned long int uint32_t;
 168:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** UNSIGNED64 in CANopen (001Bh), 64-bit unsigned integer */
 169:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** typedef unsigned long long int uint64_t;
 170:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** REAL32 in CANopen (0008h), single precision floating point value, 32-bit */
 171:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** typedef float float32_t;
 172:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** REAL64 in CANopen (0011h), double precision floating point value, 64-bit */
 173:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** typedef double float64_t;
 174:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** @} */
 175:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 176:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 177:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /**
 178:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @defgroup CO_CAN_Message_reception Reception of CAN messages
 179:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @{
 180:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 181:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Target specific definitions and description of CAN message reception
 182:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 183:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * CAN messages in CANopenNode are usually received by its own thread or higher
 184:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * priority interrupt. Received CAN messages are first filtered by hardware or
 185:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * by software. Thread then examines its 11-bit CAN-id and mask and determines,
 186:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * to which \ref CO_obj "CANopenNode Object" it belongs to. After that it calls
 187:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * predefined CANrx_callback() function, which quickly pre-processes the message
 188:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * and fetches the relevant data. CANrx_callback() function is defined by each
 189:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * \ref CO_obj "CANopenNode Object" separately. Pre-processed fetched data are
 190:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * later processed in another thread.
 191:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 192:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * If \ref CO_obj "CANopenNode Object" reception of specific CAN message, it
 193:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * must first configure its own CO_CANrx_t object with the CO_CANrxBufferInit()
 194:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * function.
 195:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  */
 196:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 197:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /**
 198:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * CAN receive callback function which pre-processes received CAN message
 199:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 200:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * It is called by fast CAN receive thread. Each \ref CO_obj "CANopenNode
 201:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Object" defines its own and registers it with CO_CANrxBufferInit(), by
 202:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * passing function pointer.
 203:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 204:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param object pointer to specific \ref CO_obj "CANopenNode Object",
 205:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * registered with CO_CANrxBufferInit()
 206:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param rxMsg pointer to received CAN message
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 8


 207:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  */
 208:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** void CANrx_callback(void *object, void *rxMsg);
 209:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 210:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /**
 211:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * CANrx_callback() can read CAN identifier from received CAN message
 212:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 213:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Must be defined in the **CO_driver_target.h** file.
 214:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 215:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * This is target specific function and is specific for specific
 216:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * microcontroller. It is best to implement it by using inline function or
 217:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * macro. `rxMsg` parameter should cast to a pointer to structure. For best
 218:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * efficiency structure may have the same alignment as CAN registers inside CAN
 219:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * module.
 220:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 221:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param rxMsg Pointer to received message
 222:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @return 11-bit CAN standard identifier.
 223:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  */
 224:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** static inline uint16_t CO_CANrxMsg_readIdent(void *rxMsg) {
 225:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     return 0;
 226:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** }
 227:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 228:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /**
 229:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * CANrx_callback() can read Data Length Code from received CAN message
 230:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 231:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * See also CO_CANrxMsg_readIdent():
 232:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 233:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param rxMsg Pointer to received message
 234:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @return data length in bytes (0 to 8)
 235:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  */
 236:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** static inline uint8_t CO_CANrxMsg_readDLC(void *rxMsg) {
 237:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     return 0;
 238:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** }
 239:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 240:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /**
 241:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * CANrx_callback() can read pointer to data from received CAN message
 242:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 243:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * See also CO_CANrxMsg_readIdent():
 244:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 245:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param rxMsg Pointer to received message
 246:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @return pointer to data buffer
 247:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  */
 248:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** static inline uint8_t *CO_CANrxMsg_readData(void *rxMsg) {
 249:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     return NULL;
 250:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** }
 251:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 252:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /**
 253:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Configuration object for CAN received message for specific \ref CO_obj
 254:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * "CANopenNode Object".
 255:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 256:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Must be defined in the **CO_driver_target.h** file.
 257:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 258:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Data fields of this structure are used exclusively by the driver. Usually it
 259:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * has the following data fields, but they may differ for different
 260:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * microcontrollers. Array of multiple CO_CANrx_t objects is included inside
 261:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * CO_CANmodule_t.
 262:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  */
 263:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** typedef struct {
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 9


 264:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     uint16_t ident; /**< Standard CAN Identifier (bits 0..10) + RTR (bit 11) */
 265:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     uint16_t mask;  /**< Standard CAN Identifier mask with the same alignment as
 266:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                        ident */
 267:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     void *object;   /**< \ref CO_obj "CANopenNode Object" initialized in from
 268:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                        CO_CANrxBufferInit() */
 269:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     void (*pCANrx_callback)(
 270:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****         void *object, void *message); /**< Pointer to CANrx_callback()
 271:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                          initialized in CO_CANrxBufferInit() */
 272:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** } CO_CANrx_t;
 273:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** @} */
 274:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 275:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 276:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /**
 277:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @defgroup CO_CAN_Message_transmission Transmission of CAN messages
 278:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @{
 279:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 280:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Target specific definitions and description of CAN message transmission
 281:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 282:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * If \ref CO_obj "CANopenNode Object" needs transmitting CAN message, it must
 283:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * first configure its own CO_CANtx_t object with the CO_CANtxBufferInit()
 284:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * function. CAN message can then be sent with CO_CANsend() function. If at that
 285:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * moment CAN transmit buffer inside microcontroller's CAN module is free,
 286:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * message is copied directly to the CAN module. Otherwise CO_CANsend() function
 287:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * sets _bufferFull_ flag to true. Message will be then sent by CAN TX interrupt
 288:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * as soon as CAN module is freed. Until message is not copied to CAN module,
 289:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * its contents must not change. If there are multiple CO_CANtx_t objects with
 290:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * _bufferFull_ flag set to true, then CO_CANtx_t with lower index will be sent
 291:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * first.
 292:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  */
 293:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 294:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /**
 295:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Configuration object for CAN transmit message for specific \ref CO_obj
 296:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * "CANopenNode Object".
 297:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 298:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Must be defined in the **CO_driver_target.h** file.
 299:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 300:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Data fields of this structure are used exclusively by the driver. Usually it
 301:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * has the following data fields, but they may differ for different
 302:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * microcontrollers. Array of multiple CO_CANtx_t objects is included inside
 303:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * CO_CANmodule_t.
 304:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  */
 305:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** typedef struct {
 306:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     uint32_t ident;             /**< CAN identifier as aligned in CAN module */
 307:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     uint8_t DLC;                /**< Length of CAN message */
 308:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     uint8_t data[8];            /**< 8 data bytes */
 309:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     volatile bool_t bufferFull; /**< True if previous message is still in the
 310:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                      buffer */
 311:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     volatile bool_t syncFlag;   /**< Synchronous PDO messages has this flag set.
 312:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                   It prevents them to be sent outside the synchronous window */
 313:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** } CO_CANtx_t;
 314:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** @} */
 315:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 316:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 317:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /**
 318:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Complete CAN module object.
 319:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 320:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Must be defined in the **CO_driver_target.h** file.
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 10


 321:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 322:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Usually it has the following data fields, but they may differ for different
 323:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * microcontrollers.
 324:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  */
 325:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** typedef struct {
 326:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     void *CANptr;                      /**< From CO_CANmodule_init() */
 327:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CANrx_t *rxArray;               /**< From CO_CANmodule_init() */
 328:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     uint16_t rxSize;                   /**< From CO_CANmodule_init() */
 329:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CANtx_t *txArray;               /**< From CO_CANmodule_init() */
 330:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     uint16_t txSize;                   /**< From CO_CANmodule_init() */
 331:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     uint16_t CANerrorStatus;           /**< CAN error status bitfield,
 332:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                             see @ref CO_CAN_ERR_status_t */
 333:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     volatile bool_t CANnormal;         /**< CAN module is in normal mode */
 334:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     volatile bool_t useCANrxFilters;   /**< Value different than zero indicates,
 335:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****             that CAN module hardware filters are used for CAN reception. If
 336:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****             there is not enough hardware filters, they won't be used. In this
 337:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****             case will be *all* received CAN messages processed by software. */
 338:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     volatile bool_t bufferInhibitFlag; /**< If flag is true, then message in
 339:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****             transmit buffer is synchronous PDO message, which will be aborted,
 340:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****             if CO_clearPendingSyncPDOs() function will be called by application.
 341:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****             This may be necessary if Synchronous window time was expired. */
 342:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     volatile bool_t firstCANtxMessage; /**< Equal to 1, when the first
 343:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****             transmitted message (bootup message) is in CAN TX buffers */
 344:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     volatile uint16_t CANtxCount;      /**< Number of messages in transmit
 345:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****             buffer, which are waiting to be copied to the CAN module */
 346:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     uint32_t errOld;                   /**< Previous state of CAN errors */
 347:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** } CO_CANmodule_t;
 348:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 349:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 350:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /**
 351:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Data storage object for one entry.
 352:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 353:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Must be defined in the **CO_driver_target.h** file.
 354:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 355:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * For more information on Data storage see @ref CO_storage or **CO_storage.h**
 356:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * file. Structure members documented here are always required or required with
 357:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @ref CO_storage_eeprom. Target system may add own additional, hardware
 358:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * specific variables.
 359:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  */
 360:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** typedef struct {
 361:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     /** Address of data to store, always required. */
 362:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     void *addr;
 363:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     /** Length of data to store, always required. */
 364:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     size_t len;
 365:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     /** Sub index in OD objects 1010 and 1011, from 2 to 127. Writing
 366:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****      * 0x65766173 to 1010,subIndexOD will store data to non-volatile memory.
 367:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****      * Writing 0x64616F6C to 1011,subIndexOD will restore default data, always
 368:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****      * required. */
 369:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     uint8_t subIndexOD;
 370:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     /** Attribute from @ref CO_storage_attributes_t, always required. */
 371:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     uint8_t attr;
 372:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     /** Pointer to storage module, target system specific usage, required with
 373:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****      * @ref CO_storage_eeprom. */
 374:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     void *storageModule;
 375:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     /** CRC checksum of the data stored in eeprom, set on store, required with
 376:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****      * @ref CO_storage_eeprom. */
 377:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     uint16_t crc;
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 11


 378:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     /** Address of entry signature inside eeprom, set by init, required with
 379:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****      * @ref CO_storage_eeprom. */
 380:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     size_t eepromAddrSignature;
 381:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     /** Address of data inside eeprom, set by init, required with
 382:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****      * @ref CO_storage_eeprom. */
 383:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     size_t eepromAddr;
 384:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     /** Offset of next byte being updated by automatic storage, required with
 385:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****      * @ref CO_storage_eeprom. */
 386:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     size_t offset;
 387:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     /** Additional target specific parameters, optional. */
 388:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     void *additionalParameters;
 389:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** } CO_storage_entry_t;
 390:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 391:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 392:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /**
 393:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @defgroup CO_critical_sections Critical sections
 394:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @{
 395:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 396:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Protection of critical sections in multi-threaded operation.
 397:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 398:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * CANopenNode is designed to run in different threads, as described in
 399:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * [README.md](index.html). Threads are implemented differently in different
 400:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * systems. In microcontrollers threads are interrupts with different
 401:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * priorities, for example. It is necessary to protect sections, where different
 402:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * threads access to the same resource. In simple systems interrupts or
 403:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * scheduler may be temporary disabled between access to the shared resource.
 404:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Otherwise mutexes or semaphores can be used.
 405:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 406:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * #### Reentrant functions
 407:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Functions CO_CANsend() from C_driver.h, and CO_error() from CO_Emergency.h
 408:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * may be called from different threads. Critical sections must be protected.
 409:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Either by disabling scheduler or interrupts or by mutexes or semaphores.
 410:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Lock/unlock macro is called with pointer to CAN module, which may be used
 411:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * inside.
 412:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 413:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * #### Object Dictionary variables
 414:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * In general, there are two threads, which accesses OD variables: mainline
 415:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * (initialization, storage, SDO access) and timer (PDO access). CANopenNode
 416:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * uses locking mechanism, where SDO server (or other mainline code) prevents
 417:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * execution of the real-time thread at the moment it reads or writes OD
 418:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * variable. CO_LOCK_OD(CAN_MODULE) and CO_UNLOCK_OD(CAN_MODULE) macros
 419:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * are used to protect:
 420:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * - Whole real-time thread,
 421:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * - SDO server protects read/write access to OD variable, if specific OD
 422:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *   variable has ODA_TRPDO or ODA_TRSRDO from @ref OD_attributes_t set. If
 423:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *   those attributes are not set, OD variable is not locked by SDO server.
 424:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *   Locking of long OD variables, not accessible from real-time thread, may
 425:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *   block RT thread.
 426:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * - Any mainline code, which accesses PDO-mappable OD variable, must protect
 427:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *   read/write with locking macros. Use @ref OD_mappable() for check.
 428:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * - Other cases, where non-PDO-mappable OD variable is used inside real-time
 429:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *   thread by some other part of the user application must be considered with
 430:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *   special care.
 431:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 432:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * #### Synchronization functions for CAN receive
 433:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * After CAN message is received, it is pre-processed in CANrx_callback(), which
 434:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * copies some data into appropriate object and at the end sets **new_message**
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 12


 435:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * flag. This flag is then pooled in another thread, which further processes the
 436:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * message. The problem is, that compiler optimization may shuffle memory
 437:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * operations, so it is necessary to ensure, that **new_message** flag is surely
 438:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * set at the end. It is necessary to use [Memory
 439:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * barrier](https://en.wikipedia.org/wiki/Memory_barrier).
 440:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 441:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * If receive function runs inside IRQ, no further synchronization is needed.
 442:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Otherwise, some kind of synchronization has to be included. The following
 443:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * example uses GCC builtin memory barrier `__sync_synchronize()`. More
 444:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * information can be found
 445:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * [here](https://stackoverflow.com/questions/982129/what-does-sync-synchronize-do#982179).
 446:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  */
 447:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 448:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** Lock critical section in CO_CANsend() */
 449:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #define CO_LOCK_CAN_SEND(CAN_MODULE)
 450:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** Unlock critical section in CO_CANsend() */
 451:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #define CO_UNLOCK_CAN_SEND(CAN_MODULE)
 452:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** Lock critical section in CO_errorReport() or CO_errorReset() */
 453:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #define CO_LOCK_EMCY(CAN_MODULE)
 454:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** Unlock critical section in CO_errorReport() or CO_errorReset() */
 455:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #define CO_UNLOCK_EMCY(CAN_MODULE)
 456:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** Lock critical section when accessing Object Dictionary */
 457:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #define CO_LOCK_OD(CAN_MODULE)
 458:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** Unock critical section when accessing Object Dictionary */
 459:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #define CO_UNLOCK_OD(CAN_MODULE)
 460:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 461:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** Check if new message has arrived */
 462:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #define CO_FLAG_READ(rxNew) ((rxNew) != NULL)
 463:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** Set new message flag */
 464:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #define CO_FLAG_SET(rxNew) { __sync_synchronize(); rxNew = (void *)1L; }
 465:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** Clear new message flag */
 466:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #define CO_FLAG_CLEAR(rxNew) { __sync_synchronize(); rxNew = NULL; }
 467:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 468:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** @} */
 469:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #endif /* CO_DOXYGEN */
 470:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 471:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 472:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /**
 473:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Default CANopen identifiers.
 474:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 475:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Default CANopen identifiers for CANopen communication objects. Same as
 476:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * 11-bit addresses of CAN messages. These are default identifiers and
 477:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * can be changed in CANopen. Especially PDO identifiers are configured
 478:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * in PDO linking phase of the CANopen network configuration.
 479:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  */
 480:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** typedef enum {
 481:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CAN_ID_NMT_SERVICE = 0x000, /**< 0x000, Network management */
 482:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CAN_ID_GFC = 0x001,         /**< 0x001, Global fail-safe command */
 483:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CAN_ID_SYNC = 0x080,        /**< 0x080, Synchronous message */
 484:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CAN_ID_EMERGENCY = 0x080,   /**< 0x080, Emergency messages (+nodeID) */
 485:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CAN_ID_TIME = 0x100,        /**< 0x100, Time message */
 486:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CAN_ID_SRDO_1 = 0x0FF,      /**< 0x0FF, Default SRDO1 (+2*nodeID) */
 487:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CAN_ID_TPDO_1 = 0x180,      /**< 0x180, Default TPDO1 (+nodeID) */
 488:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CAN_ID_RPDO_1 = 0x200,      /**< 0x200, Default RPDO1 (+nodeID) */
 489:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CAN_ID_TPDO_2 = 0x280,      /**< 0x280, Default TPDO2 (+nodeID) */
 490:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CAN_ID_RPDO_2 = 0x300,      /**< 0x300, Default RPDO2 (+nodeID) */
 491:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CAN_ID_TPDO_3 = 0x380,      /**< 0x380, Default TPDO3 (+nodeID) */
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 13


 492:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CAN_ID_RPDO_3 = 0x400,      /**< 0x400, Default RPDO3 (+nodeID) */
 493:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CAN_ID_TPDO_4 = 0x480,      /**< 0x480, Default TPDO4 (+nodeID) */
 494:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CAN_ID_RPDO_4 = 0x500,      /**< 0x500, Default RPDO5 (+nodeID) */
 495:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CAN_ID_SDO_SRV = 0x580, /**< 0x580, SDO response from server (+nodeID) */
 496:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CAN_ID_SDO_CLI = 0x600, /**< 0x600, SDO request from client (+nodeID) */
 497:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CAN_ID_HEARTBEAT = 0x700,   /**< 0x700, Heartbeat message */
 498:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CAN_ID_LSS_SLV = 0x7E4,     /**< 0x7E4, LSS response from slave */
 499:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CAN_ID_LSS_MST = 0x7E5      /**< 0x7E5, LSS request from master */
 500:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** } CO_Default_CAN_ID_t;
 501:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 502:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 503:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /**
 504:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Restricted CAN-IDs
 505:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 506:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Macro for verifying 'Restricted CAN-IDs', as specified by standard CiA301.
 507:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * They shall not be used for SYNC, TIME, EMCY, PDO and SDO.
 508:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  */
 509:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #ifndef CO_IS_RESTRICTED_CAN_ID
 510:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #define CO_IS_RESTRICTED_CAN_ID(CAN_ID) ((CAN_ID) <= 0x7F \
 511:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****         || ((CAN_ID) >= 0x101 && (CAN_ID) <= 0x180) \
 512:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****         || ((CAN_ID) >= 0x581 && (CAN_ID) <= 0x5FF) \
 513:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****         || ((CAN_ID) >= 0x601 && (CAN_ID) <= 0x67F) \
 514:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****         || ((CAN_ID) >= 0x6E0 && (CAN_ID) <= 0x6FF) \
 515:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****         || (CAN_ID) >= 0x701)
 516:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** #endif
 517:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 518:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 519:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /**
 520:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * CAN error status bitmasks.
 521:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 522:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * CAN warning level is reached, if CAN transmit or receive error counter is
 523:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * more or equal to 96. CAN passive level is reached, if counters are more or
 524:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * equal to 128. Transmitter goes in error state 'bus off' if transmit error
 525:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * counter is more or equal to 256.
 526:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  */
 527:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** typedef enum {
 528:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CAN_ERRTX_WARNING = 0x0001,  /**< 0x0001, CAN transmitter warning */
 529:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CAN_ERRTX_PASSIVE = 0x0002,  /**< 0x0002, CAN transmitter passive */
 530:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CAN_ERRTX_BUS_OFF = 0x0004,  /**< 0x0004, CAN transmitter bus off */
 531:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CAN_ERRTX_OVERFLOW = 0x0008, /**< 0x0008, CAN transmitter overflow */
 532:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 533:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CAN_ERRTX_PDO_LATE = 0x0080, /**< 0x0080, TPDO is outside sync window */
 534:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 535:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CAN_ERRRX_WARNING = 0x0100,  /**< 0x0100, CAN receiver warning */
 536:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CAN_ERRRX_PASSIVE = 0x0200,  /**< 0x0200, CAN receiver passive */
 537:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CAN_ERRRX_OVERFLOW = 0x0800, /**< 0x0800, CAN receiver overflow */
 538:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 539:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_CAN_ERR_WARN_PASSIVE = 0x0303/**< 0x0303, combination */
 540:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** } CO_CAN_ERR_status_t;
 541:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 542:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 543:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /**
 544:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Return values of some CANopen functions. If function was executed
 545:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * successfully it returns 0 otherwise it returns <0.
 546:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  */
 547:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** typedef enum {
 548:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_ERROR_NO = 0,                /**< Operation completed successfully */
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 14


 549:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_ERROR_ILLEGAL_ARGUMENT = -1, /**< Error in function arguments */
 550:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_ERROR_OUT_OF_MEMORY = -2,    /**< Memory allocation failed */
 551:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_ERROR_TIMEOUT = -3,          /**< Function timeout */
 552:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_ERROR_ILLEGAL_BAUDRATE = -4, /**< Illegal baudrate passed to function
 553:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                          CO_CANmodule_init() */
 554:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_ERROR_RX_OVERFLOW = -5,      /**< Previous message was not processed
 555:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                          yet */
 556:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_ERROR_RX_PDO_OVERFLOW = -6,  /**< previous PDO was not processed yet */
 557:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_ERROR_RX_MSG_LENGTH = -7,    /**< Wrong receive message length */
 558:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_ERROR_RX_PDO_LENGTH = -8,    /**< Wrong receive PDO length */
 559:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_ERROR_TX_OVERFLOW = -9,      /**< Previous message is still waiting,
 560:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                          buffer full */
 561:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_ERROR_TX_PDO_WINDOW = -10,   /**< Synchronous TPDO is outside window */
 562:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_ERROR_TX_UNCONFIGURED = -11, /**< Transmit buffer was not configured
 563:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                          properly */
 564:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_ERROR_OD_PARAMETERS = -12,   /**< Error in Object Dictionary parameters*/
 565:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_ERROR_DATA_CORRUPT = -13,    /**< Stored data are corrupt */
 566:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_ERROR_CRC = -14,             /**< CRC does not match */
 567:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_ERROR_TX_BUSY = -15,         /**< Sending rejected because driver is
 568:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                          busy. Try again */
 569:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_ERROR_WRONG_NMT_STATE = -16, /**< Command can't be processed in current
 570:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                          state */
 571:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_ERROR_SYSCALL = -17,         /**< Syscall failed */
 572:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_ERROR_INVALID_STATE = -18,   /**< Driver not ready */
 573:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     CO_ERROR_NODE_ID_UNCONFIGURED_LSS = -19 /**< Node-id is in LSS unconfigured
 574:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                          state. If objects are handled properly,
 575:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                          this may not be an error. */
 576:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** } CO_ReturnError_t;
 577:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 578:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 579:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /**
 580:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Request CAN configuration (stopped) mode and *wait* until it is set.
 581:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 582:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param CANptr Pointer to CAN device
 583:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  */
 584:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** void CO_CANsetConfigurationMode(void *CANptr);
 585:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 586:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 587:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /**
 588:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Request CAN normal (operational) mode and *wait* until it is set.
 589:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 590:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param CANmodule CO_CANmodule_t object.
 591:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  */
 592:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** void CO_CANsetNormalMode(CO_CANmodule_t *CANmodule);
 593:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 594:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 595:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /**
 596:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Initialize CAN module object.
 597:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 598:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Function must be called in the communication reset section. CAN module must
 599:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * be in Configuration Mode before.
 600:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 601:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param CANmodule This object will be initialized.
 602:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param CANptr Pointer to CAN device.
 603:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param rxArray Array for handling received CAN messages
 604:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param rxSize Size of the above array. Must be equal to number of receiving
 605:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * CAN objects.
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 15


 606:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param txArray Array for handling transmitting CAN messages
 607:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param txSize Size of the above array. Must be equal to number of
 608:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * transmitting CAN objects.
 609:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param CANbitRate Valid values are (in kbps): 10, 20, 50, 125, 250, 500, 800,
 610:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * 1000. If value is illegal, bitrate defaults to 125.
 611:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 612:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Return #CO_ReturnError_t: CO_ERROR_NO or CO_ERROR_ILLEGAL_ARGUMENT.
 613:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  */
 614:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** CO_ReturnError_t CO_CANmodule_init(CO_CANmodule_t *CANmodule,
 615:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                    void *CANptr,
 616:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                    CO_CANrx_t rxArray[],
 617:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                    uint16_t rxSize,
 618:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                    CO_CANtx_t txArray[],
 619:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                    uint16_t txSize,
 620:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                    uint16_t CANbitRate);
 621:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 622:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 623:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /**
 624:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Switch off CANmodule. Call at program exit.
 625:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 626:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param CANmodule CAN module object.
 627:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  */
 628:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** void CO_CANmodule_disable(CO_CANmodule_t *CANmodule);
 629:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 630:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 631:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /**
 632:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Configure CAN message receive buffer.
 633:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 634:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Function configures specific CAN receive buffer. It sets CAN identifier
 635:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * and connects buffer with specific object. Function must be called for each
 636:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * member in _rxArray_ from CO_CANmodule_t.
 637:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 638:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param CANmodule This object.
 639:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param index Index of the specific buffer in _rxArray_.
 640:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param ident 11-bit standard CAN Identifier. If two or more CANrx buffers
 641:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * have the same _ident_, then buffer with lowest _index_ has precedence and
 642:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * other CANrx buffers will be ignored.
 643:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param mask 11-bit mask for identifier. Most usually set to 0x7FF.
 644:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Received message (rcvMsg) will be accepted if the following
 645:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * condition is true: (((rcvMsgId ^ ident) & mask) == 0).
 646:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param rtr If true, 'Remote Transmit Request' messages will be accepted.
 647:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param object CANopen object, to which buffer is connected. It will be used
 648:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * as an argument to CANrx_callback. Its type is (void), CANrx_callback will
 649:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * change its type back to the correct object type.
 650:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param CANrx_callback Pointer to function, which will be called, if received
 651:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * CAN message matches the identifier. It must be fast function.
 652:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 653:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Return #CO_ReturnError_t: CO_ERROR_NO CO_ERROR_ILLEGAL_ARGUMENT or
 654:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * CO_ERROR_OUT_OF_MEMORY (not enough masks for configuration).
 655:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  */
 656:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** CO_ReturnError_t CO_CANrxBufferInit(CO_CANmodule_t *CANmodule,
 657:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                     uint16_t index,
 658:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                     uint16_t ident,
 659:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                     uint16_t mask,
 660:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                     bool_t rtr,
 661:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                     void *object,
 662:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                     void (*CANrx_callback)(void *object,
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 16


 663:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                                            void *message));
 664:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 665:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 666:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /**
 667:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Configure CAN message transmit buffer.
 668:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 669:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Function configures specific CAN transmit buffer. Function must be called for
 670:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * each member in _txArray_ from CO_CANmodule_t.
 671:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 672:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param CANmodule This object.
 673:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param index Index of the specific buffer in _txArray_.
 674:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param ident 11-bit standard CAN Identifier.
 675:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param rtr If true, 'Remote Transmit Request' messages will be transmitted.
 676:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param noOfBytes Length of CAN message in bytes (0 to 8 bytes).
 677:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param syncFlag This flag bit is used for synchronous TPDO messages. If it is
 678:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * set, message will not be sent, if current time is outside synchronous window.
 679:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 680:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @return Pointer to CAN transmit message buffer. 8 bytes data array inside
 681:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * buffer should be written, before CO_CANsend() function is called.
 682:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Zero is returned in case of wrong arguments.
 683:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  */
 684:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** CO_CANtx_t *CO_CANtxBufferInit(CO_CANmodule_t *CANmodule,
 685:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                uint16_t index,
 686:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                uint16_t ident,
 687:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                bool_t rtr,
 688:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                uint8_t noOfBytes,
 689:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****                                bool_t syncFlag);
 690:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 691:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 692:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /**
 693:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Send CAN message.
 694:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 695:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param CANmodule This object.
 696:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param buffer Pointer to transmit buffer, returned by CO_CANtxBufferInit().
 697:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Data bytes must be written in buffer before function call.
 698:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 699:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @return #CO_ReturnError_t: CO_ERROR_NO, CO_ERROR_TX_OVERFLOW or
 700:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * CO_ERROR_TX_PDO_WINDOW (Synchronous TPDO is outside window).
 701:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  */
 702:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** CO_ReturnError_t CO_CANsend(CO_CANmodule_t *CANmodule, CO_CANtx_t *buffer);
 703:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 704:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 705:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /**
 706:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Clear all synchronous TPDOs from CAN module transmit buffers.
 707:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 708:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * CANopen allows synchronous PDO communication only inside time between SYNC
 709:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * message and SYNC Window. If time is outside this window, new synchronous PDOs
 710:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * must not be sent and all pending sync TPDOs, which may be on CAN TX buffers,
 711:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * may optionally be cleared.
 712:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 713:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * This function checks (and aborts transmission if necessary) CAN TX buffers
 714:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * when it is called. Function should be called by the stack in the moment,
 715:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * when SYNC time was just passed out of synchronous window.
 716:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 717:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param CANmodule This object.
 718:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  */
 719:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** void CO_CANclearPendingSyncPDOs(CO_CANmodule_t *CANmodule);
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 17


 720:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 721:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 722:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /**
 723:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Process can module - verify CAN errors
 724:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 725:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Function must be called cyclically. It should calculate CANerrorStatus
 726:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * bitfield for CAN errors defined in @ref CO_CAN_ERR_status_t.
 727:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 728:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param CANmodule This object.
 729:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  */
 730:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** void CO_CANmodule_process(CO_CANmodule_t *CANmodule);
 731:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 732:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** 
 733:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /**
 734:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * Get uint8_t value from memory buffer
 735:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 736:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @param buf Memory buffer to get value from.
 737:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  *
 738:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  * @return Value
 739:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****  */
 740:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** static inline uint8_t CO_getUint8(const void *buf) {
 741:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     uint8_t value; memmove(&value, buf, sizeof(value)); return value;
 742:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** }
 743:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** /** Get uint16_t value from memory buffer, see @ref CO_getUint8 */
 744:Middlewares/Third_Party/CANopenNode/301/CO_driver.h **** static inline uint16_t CO_getUint16(const void *buf) {
 745:Middlewares/Third_Party/CANopenNode/301/CO_driver.h ****     uint16_t value; memmove(&value, buf, sizeof(value)); return value;
 117              		.loc 2 745 5 view .LVU30
 118              		.loc 2 745 21 view .LVU31
 119              		.loc 2 745 58 view .LVU32
 120              		.loc 1 74 30 is_stmt 0 view .LVU33
 121 0016 0888     		ldrh	r0, [r1]	@ unaligned
 122              		.loc 1 74 58 view .LVU34
 123 0018 4FF47A7E 		mov	lr, #1000
 124 001c 0EFB00F0 		mul	r0, lr, r0
 125              		.loc 1 74 28 view .LVU35
 126 0020 A060     		str	r0, [r4, #8]
 127              	.LVL11:
  75:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     NMT->HBproducerTimer = 0;
 128              		.loc 1 75 5 is_stmt 1 view .LVU36
 129              		.loc 1 75 26 is_stmt 0 view .LVU37
 130 0022 0020     		movs	r0, #0
 131 0024 E060     		str	r0, [r4, #12]
  76:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
  77:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     /* write value to the original location in the Object Dictionary */
  78:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     return OD_writeOriginal(stream, buf, count, countWritten);
 132              		.loc 1 78 5 is_stmt 1 view .LVU38
 133              		.loc 1 78 12 is_stmt 0 view .LVU39
 134 0026 6046     		mov	r0, ip
 135 0028 FFF7FEFF 		bl	OD_writeOriginal
 136              	.LVL12:
  79:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** }
 137              		.loc 1 79 1 view .LVU40
 138 002c 10BD     		pop	{r4, pc}
 139              	.LVL13:
 140              	.L7:
 141              	.LCFI1:
 142              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 18


 143              		.cfi_restore 4
 144              		.cfi_restore 14
  68:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 145              		.loc 1 68 16 view .LVU41
 146 002e 0920     		movs	r0, #9
 147              	.LVL14:
  68:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 148              		.loc 1 68 16 view .LVU42
 149 0030 7047     		bx	lr
 150              	.LVL15:
 151              	.L8:
  68:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 152              		.loc 1 68 16 view .LVU43
 153 0032 0920     		movs	r0, #9
 154 0034 7047     		bx	lr
 155              	.L9:
 156 0036 0920     		movs	r0, #9
 157 0038 7047     		bx	lr
 158              	.L10:
 159 003a 0920     		movs	r0, #9
 160 003c 7047     		bx	lr
 161              	.L11:
 162 003e 0920     		movs	r0, #9
 163              		.loc 1 79 1 view .LVU44
 164 0040 7047     		bx	lr
 165              		.cfi_endproc
 166              	.LFE161:
 168              		.section	.text.CO_NMT_init,"ax",%progbits
 169              		.align	1
 170              		.global	CO_NMT_init
 171              		.syntax unified
 172              		.thumb
 173              		.thumb_func
 175              	CO_NMT_init:
 176              	.LVL16:
 177              	.LFB162:
  80:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
  81:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
  82:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** /******************************************************************************/
  83:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** CO_ReturnError_t CO_NMT_init(CO_NMT_t *NMT,
  84:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                              OD_entry_t *OD_1017_ProducerHbTime,
  85:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                              CO_EM_t *em,
  86:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                              uint8_t nodeId,
  87:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                              CO_NMT_control_t NMTcontrol,
  88:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                              uint16_t firstHBTime_ms,
  89:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                              CO_CANmodule_t *NMT_CANdevRx,
  90:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                              uint16_t NMT_rxIdx,
  91:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                              uint16_t CANidRxNMT,
  92:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** #if (CO_CONFIG_NMT) & CO_CONFIG_NMT_MASTER
  93:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                              CO_CANmodule_t *NMT_CANdevTx,
  94:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                              uint16_t NMT_txIdx,
  95:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                              uint16_t CANidTxNMT,
  96:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** #endif
  97:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                              CO_CANmodule_t *HB_CANdevTx,
  98:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                              uint16_t HB_txIdx,
  99:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                              uint16_t CANidTxHB,
 100:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                              uint32_t *errInfo)
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 19


 101:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** {
 178              		.loc 1 101 1 is_stmt 1 view -0
 179              		.cfi_startproc
 180              		@ args = 36, pretend = 0, frame = 8
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		.loc 1 101 1 is_stmt 0 view .LVU46
 183 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 184              	.LCFI2:
 185              		.cfi_def_cfa_offset 28
 186              		.cfi_offset 4, -28
 187              		.cfi_offset 5, -24
 188              		.cfi_offset 6, -20
 189              		.cfi_offset 7, -16
 190              		.cfi_offset 8, -12
 191              		.cfi_offset 9, -8
 192              		.cfi_offset 14, -4
 193 0004 87B0     		sub	sp, sp, #28
 194              	.LCFI3:
 195              		.cfi_def_cfa_offset 56
 196 0006 DDF84080 		ldr	r8, [sp, #64]
 197 000a DDF84C90 		ldr	r9, [sp, #76]
 102:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     CO_ReturnError_t ret = CO_ERROR_NO;
 198              		.loc 1 102 5 is_stmt 1 view .LVU47
 199              	.LVL17:
 103:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
 104:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     /* verify arguments */
 105:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     if (NMT == NULL || OD_1017_ProducerHbTime == NULL || em == NULL
 200              		.loc 1 105 5 view .LVU48
 201              		.loc 1 105 8 is_stmt 0 view .LVU49
 202 000e 0028     		cmp	r0, #0
 203 0010 6AD0     		beq	.L21
 204 0012 0D46     		mov	r5, r1
 205 0014 1646     		mov	r6, r2
 206 0016 1F46     		mov	r7, r3
 207 0018 0446     		mov	r4, r0
 208              		.loc 1 105 21 discriminator 1 view .LVU50
 209 001a 0029     		cmp	r1, #0
 210 001c 67D0     		beq	.L22
 211              		.loc 1 105 55 discriminator 2 view .LVU51
 212 001e 002A     		cmp	r2, #0
 213 0020 68D0     		beq	.L23
 106:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         || NMT_CANdevRx == NULL || HB_CANdevTx == NULL
 214              		.loc 1 106 9 view .LVU52
 215 0022 B8F1000F 		cmp	r8, #0
 216 0026 68D0     		beq	.L24
 217              		.loc 1 106 33 discriminator 1 view .LVU53
 218 0028 B9F1000F 		cmp	r9, #0
 219 002c 68D0     		beq	.L25
 107:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** #if (CO_CONFIG_NMT) & CO_CONFIG_NMT_MASTER
 108:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         || NMT_CANdevTx == NULL
 109:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** #endif
 110:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     ) {
 111:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         return CO_ERROR_ILLEGAL_ARGUMENT;
 112:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 113:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
 114:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     /* clear the object */
 115:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     memset(NMT, 0, sizeof(CO_NMT_t));
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 20


 220              		.loc 1 115 5 is_stmt 1 view .LVU54
 221 002e 2C22     		movs	r2, #44
 222              	.LVL18:
 223              		.loc 1 115 5 is_stmt 0 view .LVU55
 224 0030 0021     		movs	r1, #0
 225              	.LVL19:
 226              		.loc 1 115 5 view .LVU56
 227 0032 FFF7FEFF 		bl	memset
 228              	.LVL20:
 116:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
 117:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     /* Configure object variables */
 118:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     NMT->operatingState = CO_NMT_INITIALIZING;
 229              		.loc 1 118 5 is_stmt 1 view .LVU57
 119:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     NMT->operatingStatePrev = CO_NMT_INITIALIZING;
 230              		.loc 1 119 5 view .LVU58
 120:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     NMT->nodeId = nodeId;
 231              		.loc 1 120 5 view .LVU59
 232              		.loc 1 120 17 is_stmt 0 view .LVU60
 233 0036 E770     		strb	r7, [r4, #3]
 121:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     NMT->NMTcontrol = NMTcontrol;
 234              		.loc 1 121 5 is_stmt 1 view .LVU61
 235              		.loc 1 121 21 is_stmt 0 view .LVU62
 236 0038 BDF83830 		ldrh	r3, [sp, #56]
 237 003c A380     		strh	r3, [r4, #4]	@ movhi
 122:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     NMT->em = em;
 238              		.loc 1 122 5 is_stmt 1 view .LVU63
 239              		.loc 1 122 13 is_stmt 0 view .LVU64
 240 003e 2662     		str	r6, [r4, #32]
 123:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     NMT->HBproducerTimer = (int32_t)firstHBTime_ms * 1000;
 241              		.loc 1 123 5 is_stmt 1 view .LVU65
 242              		.loc 1 123 52 is_stmt 0 view .LVU66
 243 0040 BDF83C30 		ldrh	r3, [sp, #60]
 244 0044 4FF47A72 		mov	r2, #1000
 245 0048 02FB03F3 		mul	r3, r2, r3
 246              		.loc 1 123 26 view .LVU67
 247 004c E360     		str	r3, [r4, #12]
 124:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
 125:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     /* get and verify required "Producer heartbeat time" from Object Dict. */
 126:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     uint16_t HBprodTime_ms;
 248              		.loc 1 126 5 is_stmt 1 view .LVU68
 127:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     ODR_t odRet = OD_get_u16(OD_1017_ProducerHbTime, 0, &HBprodTime_ms, true);
 249              		.loc 1 127 5 view .LVU69
 250              	.LVL21:
 251              	.LBB20:
 252              	.LBI20:
 253              		.file 3 "Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h"
   1:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
   2:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * CANopen Object Dictionary interface
   3:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
   4:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @file        CO_ODinterface.h
   5:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @ingroup     CO_ODinterface
   6:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @author      Janez Paternoster
   7:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @copyright   2020 Janez Paternoster
   8:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
   9:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * This file is part of CANopenNode, an opensource CANopen Stack.
  10:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Project home page is <https://github.com/CANopenNode/CANopenNode>.
  11:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * For more information on CANopen see <http://www.can-cia.org/>.
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 21


  12:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
  13:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Licensed under the Apache License, Version 2.0 (the "License");
  14:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * you may not use this file except in compliance with the License.
  15:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * You may obtain a copy of the License at
  16:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
  17:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *     http://www.apache.org/licenses/LICENSE-2.0
  18:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
  19:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Unless required by applicable law or agreed to in writing, software
  20:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * distributed under the License is distributed on an "AS IS" BASIS,
  21:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * See the License for the specific language governing permissions and
  23:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * limitations under the License.
  24:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
  25:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
  26:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #ifndef CO_OD_INTERFACE_H
  27:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #define CO_OD_INTERFACE_H
  28:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
  29:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #include "301/CO_driver.h"
  30:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
  31:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #ifdef __cplusplus
  32:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** extern "C" {
  33:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #endif
  34:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
  35:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
  36:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @defgroup CO_ODinterface OD interface
  37:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * CANopen Object Dictionary interface.
  38:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
  39:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @ingroup CO_CANopen_301
  40:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @{
  41:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * See @ref doc/objectDictionary.md
  42:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
  43:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
  44:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #ifndef CO_OD_OWN_TYPES
  45:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Variable of type OD_size_t contains data length in bytes of OD variable */
  46:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef uint32_t OD_size_t;
  47:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Type (and size) of Object Dictionary attribute */
  48:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef uint8_t OD_attr_t;
  49:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #endif
  50:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
  51:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #ifndef OD_FLAGS_PDO_SIZE
  52:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Size of of flagsPDO variable inside @ref OD_extension_t, from 0 to 32. */
  53:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #define OD_FLAGS_PDO_SIZE 4
  54:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #endif
  55:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
  56:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #ifndef CO_PROGMEM
  57:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Modifier for OD objects. This is large amount of data and is specified in
  58:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Object Dictionary (OD.c file usually) */
  59:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #define CO_PROGMEM const
  60:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #endif
  61:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
  62:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
  63:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
  64:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Common DS301 object dictionary entries.
  65:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
  66:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef enum {
  67:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1000_DEV_TYPE           = 0x1000U,/**< Device type */
  68:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1001_ERR_REG            = 0x1001U,/**< Error register */
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 22


  69:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1002_MANUF_STATUS_REG   = 0x1002U,/**< Manufacturer status register */
  70:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1003_PREDEF_ERR_FIELD   = 0x1003U,/**< Predefined error field */
  71:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1004_RSV                = 0x1004U,/**< Reserved */
  72:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1005_COBID_SYNC         = 0x1005U,/**< Sync message cob-id */
  73:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1006_COMM_CYCL_PERIOD   = 0x1006U,/**< Communication cycle period */
  74:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1007_SYNC_WINDOW_LEN    = 0x1007U,/**< Sync windows length */
  75:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1008_MANUF_DEV_NAME     = 0x1008U,/**< Manufacturer device name */
  76:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1009_MANUF_HW_VERSION   = 0x1009U,/**< Manufacturer hardware version */
  77:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H100A_MANUF_SW_VERSION   = 0x100AU,/**< Manufacturer software version */
  78:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H100B_RSV                = 0x100BU,/**< Reserved */
  79:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H100C_GUARD_TIME         = 0x100CU,/**< Guard time */
  80:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H100D_LIFETIME_FACTOR    = 0x100DU,/**< Life time factor */
  81:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H100E_RSV                = 0x100EU,/**< Reserved */
  82:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H100F_RSV                = 0x100FU,/**< Reserved */
  83:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1010_STORE_PARAMETERS   = 0x1010U,/**< Store params in persistent mem.*/
  84:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1011_RESTORE_DEFAULT    = 0x1011U,/**< Restore default parameters */
  85:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1012_COBID_TIME         = 0x1012U,/**< Timestamp message cob-id */
  86:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1013_HIGH_RES_TIMESTAMP = 0x1013U,/**< High resolution timestamp */
  87:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1014_COBID_EMERGENCY    = 0x1014U,/**< Emergency message cob-id */
  88:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1015_INHIBIT_TIME_EMCY  = 0x1015U,/**< Inhibit time emergency message */
  89:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1016_CONSUMER_HB_TIME   = 0x1016U,/**< Consumer heartbeat time */
  90:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1017_PRODUCER_HB_TIME   = 0x1017U,/**< Producer heartbeat time */
  91:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1018_IDENTITY_OBJECT    = 0x1018U,/**< Identity object */
  92:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1019_SYNC_CNT_OVERFLOW  = 0x1019U,/**< Sync counter overflow value */
  93:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1020_VERIFY_CONFIG      = 0x1020U,/**< Verify configuration */
  94:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1021_STORE_EDS          = 0x1021U,/**< Store EDS */
  95:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1022_STORE_FORMAT       = 0x1022U,/**< Store format */
  96:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1023_OS_CMD             = 0x1023U,/**< OS command */
  97:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1024_OS_CMD_MODE        = 0x1024U,/**< OS command mode */
  98:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1025_OS_DBG_INTERFACE   = 0x1025U,/**< OS debug interface */
  99:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1026_OS_PROMPT          = 0x1026U,/**< OS prompt */
 100:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1027_MODULE_LIST        = 0x1027U,/**< Module list */
 101:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1028_EMCY_CONSUMER      = 0x1028U,/**< Emergency consumer object */
 102:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1029_ERR_BEHAVIOR       = 0x1029U,/**< Error behaviour */
 103:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1200_SDO_SERVER_1_PARAM = 0x1200U,/**< SDO server parameter */
 104:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1280_SDO_CLIENT_1_PARAM = 0x1280U,/**< SDO client parameter */
 105:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1300_GFC_PARAM          = 0x1300U,/**< Global fail-safe command param */
 106:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1301_SRDO_1_PARAM       = 0x1301U,/**< SRDO communication parameter */
 107:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1381_SRDO_1_MAPPING     = 0x1381U,/**< SRDO mapping parameter */
 108:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H13FE_SRDO_VALID         = 0x13FEU,/**< SRDO Configuration valid */
 109:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H13FF_SRDO_CHECKSUM      = 0x13FFU,/**< SRDO configuration checksum */
 110:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1400_RXPDO_1_PARAM      = 0x1400U,/**< RXPDO communication parameter */
 111:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1600_RXPDO_1_MAPPING    = 0x1600U,/**< RXPDO mapping parameters */
 112:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1800_TXPDO_1_PARAM      = 0x1800U,/**< TXPDO communication parameter */
 113:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_H1A00_TXPDO_1_MAPPING    = 0x1A00U,/**< TXPDO mapping parameters */
 114:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** } OD_ObjDicId_30x_t;
 115:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 116:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 117:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 118:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Attributes (bit masks) for OD sub-object.
 119:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 120:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef enum {
 121:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_SDO_R = 0x01, /**< SDO server may read from the variable */
 122:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_SDO_W = 0x02, /**< SDO server may write to the variable */
 123:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_SDO_RW = 0x03, /**< SDO server may read from or write to the variable */
 124:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_TPDO = 0x04, /**< Variable is mappable into TPDO (can be read) */
 125:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_RPDO = 0x08, /**< Variable is mappable into RPDO (can be written) */
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 23


 126:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_TRPDO = 0x0C, /**< Variable is mappable into TPDO or RPDO */
 127:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_TSRDO = 0x10, /**< Variable is mappable into transmitting SRDO */
 128:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_RSRDO = 0x20, /**< Variable is mappable into receiving SRDO */
 129:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_TRSRDO = 0x30, /**< Variable is mappable into tx or rx SRDO */
 130:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_MB = 0x40, /**< Variable is multi-byte ((u)int16_t to (u)int64_t) */
 131:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODA_STR = 0x80 /**< Shorter value, than specified variable size, may be
 132:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     written to the variable. SDO write will fill remaining memory with zeroes.
 133:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     Attribute is used for VISIBLE_STRING and UNICODE_STRING. */
 134:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** } OD_attributes_t;
 135:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 136:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 137:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 138:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Return codes from OD access functions.
 139:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 140:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @ref OD_getSDOabCode() can be used to retrieve corresponding SDO abort code.
 141:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 142:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef enum {
 143:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /* !!!! WARNING !!!!
 144:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * If changing these values, change also OD_getSDOabCode() function!
 145:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 146:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Read/write is only partial, make more calls */
 147:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_PARTIAL = -1,
 148:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x00000000 - Read/write successfully finished */
 149:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_OK = 0,
 150:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x05040005 - Out of memory */
 151:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_OUT_OF_MEM = 1,
 152:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06010000 - Unsupported access to an object */
 153:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_UNSUPP_ACCESS = 2,
 154:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06010001 - Attempt to read a write only object */
 155:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_WRITEONLY = 3,
 156:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06010002 - Attempt to write a read only object */
 157:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_READONLY = 4,
 158:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06020000 - Object does not exist in the object dict. */
 159:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_IDX_NOT_EXIST = 5,
 160:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06040041 - Object cannot be mapped to the PDO */
 161:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_NO_MAP = 6,
 162:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06040042 - PDO length exceeded */
 163:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_MAP_LEN = 7,
 164:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06040043 - General parameter incompatibility reasons */
 165:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_PAR_INCOMPAT = 8,
 166:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06040047 - General internal incompatibility in device */
 167:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_DEV_INCOMPAT = 9,
 168:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06060000 - Access failed due to hardware error */
 169:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_HW = 10,
 170:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06070010 - Data type does not match */
 171:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_TYPE_MISMATCH = 11,
 172:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06070012 - Data type does not match, length too high */
 173:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_DATA_LONG = 12,
 174:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06070013 - Data type does not match, length too short */
 175:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_DATA_SHORT = 13,
 176:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06090011 - Sub index does not exist */
 177:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_SUB_NOT_EXIST = 14,
 178:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06090030 - Invalid value for parameter (download only) */
 179:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_INVALID_VALUE = 15,
 180:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06090031 - Value range of parameter written too high */
 181:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_VALUE_HIGH = 16,
 182:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06090032 - Value range of parameter written too low */
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 24


 183:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_VALUE_LOW = 17,
 184:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x06090036 - Maximum value is less than minimum value */
 185:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_MAX_LESS_MIN = 18,
 186:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x060A0023 - Resource not available: SDO connection */
 187:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_NO_RESOURCE = 19,
 188:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x08000000 - General error */
 189:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_GENERAL = 20,
 190:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x08000020 - Data cannot be transferred or stored to app */
 191:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_DATA_TRANSF = 21,
 192:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x08000021 - Data can't be transferred (local control) */
 193:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_DATA_LOC_CTRL = 22,
 194:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x08000022 - Data can't be transf. (present device state) */
 195:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_DATA_DEV_STATE = 23,
 196:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x08000023 - Object dictionary not present */
 197:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_OD_MISSING = 23,
 198:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** SDO abort 0x08000024 - No data available */
 199:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_NO_DATA = 25,
 200:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Last element, number of responses */
 201:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_COUNT = 26
 202:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** } ODR_t;
 203:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 204:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 205:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 206:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * IO stream structure, used for read/write access to OD variable, part of
 207:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @ref OD_IO_t.
 208:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 209:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef struct {
 210:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Pointer to original data object, defined by Object Dictionary. Default
 211:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * read/write functions operate on it. If memory for data object is not
 212:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * specified by Object Dictionary, then dataOrig is NULL.
 213:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      */
 214:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     void *dataOrig;
 215:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Pointer to object, passed by @ref OD_extension_init(). Can be used
 216:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * inside read / write functions from IO extension.
 217:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      */
 218:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     void *object;
 219:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Data length in bytes or 0, if length is not specified */
 220:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_size_t dataLength;
 221:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** In case of large data, dataOffset indicates position of already
 222:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * transferred data */
 223:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_size_t dataOffset;
 224:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Attribute bit-field of the OD sub-object, see @ref OD_attributes_t */
 225:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_attr_t attribute;
 226:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Sub index of the OD sub-object, informative */
 227:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     uint8_t subIndex;
 228:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** } OD_stream_t;
 229:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 230:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 231:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 232:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Structure for input / output on the OD variable. It is initialized with
 233:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @ref OD_getSub() function. Access principle to OD variable is via read/write
 234:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * functions operating on stream, similar as standard read/write.
 235:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 236:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef struct {
 237:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Object Dictionary stream object, passed to read or write */
 238:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_stream_t stream;
 239:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /**
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 25


 240:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * Function pointer for reading value from specified variable from Object
 241:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * Dictionary. If OD variable is larger than buf, then this function must
 242:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * be called several times. After completed successful read function returns
 243:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * 'ODR_OK'. If read is partial, it returns 'ODR_PARTIAL'. In case of errors
 244:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * function returns code similar to SDO abort code.
 245:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 246:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * Read can be restarted with @ref OD_rwRestart() function.
 247:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 248:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * At the moment, when Object Dictionary is initialized, every variable has
 249:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * assigned the same "read" function. This default function simply copies
 250:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * data from Object Dictionary variable. Application can bind its own "read"
 251:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * function for specific object. In that case application is able to
 252:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * calculate data for reading from own internal state at the moment of
 253:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * "read" function call. Own "read" function on OD object can be initialized
 254:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * with @ref OD_extension_init() function.
 255:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 256:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * "read" function must always copy all own data to buf, except if "buf" is
 257:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * not large enough. ("*returnCode" must not return 'ODR_PARTIAL', if there
 258:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * is still space in "buf".)
 259:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 260:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @warning When accessing OD variables by calling the read() function, it
 261:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * may be necessary to use @ref CO_LOCK_OD() and @ref CO_UNLOCK_OD() macros.
 262:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * See @ref CO_critical_sections for more information.
 263:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 264:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @param stream Object Dictionary stream object.
 265:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @param buf Pointer to external buffer, where to data will be copied.
 266:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @param count Size of the external buffer in bytes.
 267:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @param [out] countRead If return value is "ODR_OK" or "ODR_PARTIAL",
 268:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * then number of bytes successfully read must be returned here.
 269:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 270:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @return Value from @ref ODR_t, "ODR_OK" in case of success.
 271:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      */
 272:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_t (*read)(OD_stream_t *stream, void *buf,
 273:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                   OD_size_t count, OD_size_t *countRead);
 274:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /**
 275:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * Function pointer for writing value into specified variable inside Object
 276:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * Dictionary. If OD variable is larger than buf, then this function must
 277:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * be called several times. After completed successful write function
 278:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * returns 'ODR_OK'. If write is partial, it returns 'ODR_PARTIAL'. In case
 279:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * of errors function returns code similar to SDO abort code.
 280:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 281:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * Write can be restarted with @ref OD_rwRestart() function.
 282:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 283:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * At the moment, when Object Dictionary is initialized, every variable has
 284:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * assigned the same "write" function, which simply copies data to Object
 285:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * Dictionary variable. Application can bind its own "write" function,
 286:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * similar as it can bind "read" function.
 287:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 288:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * "write" function must always copy all available data from buf. If OD
 289:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * variable expect more data, then "*returnCode" must return 'ODR_PARTIAL'.
 290:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 291:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @warning When accessing OD variables by calling the read() function, it
 292:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * may be necessary to use @ref CO_LOCK_OD() and @ref CO_UNLOCK_OD() macros.
 293:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * See @ref CO_critical_sections for more information.
 294:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 295:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @param stream Object Dictionary stream object.
 296:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @param buf Pointer to external buffer, from where data will be copied.
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 26


 297:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @param count Size of the external buffer in bytes.
 298:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @param [out] countWritten If return value is "ODR_OK" or "ODR_PARTIAL",
 299:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * then number of bytes successfully written must be returned here.
 300:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 301:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @return Value from @ref ODR_t, "ODR_OK" in case of success.
 302:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      */
 303:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_t (*write)(OD_stream_t *stream, const void *buf,
 304:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                    OD_size_t count, OD_size_t *countWritten);
 305:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** } OD_IO_t;
 306:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 307:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 308:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 309:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Extension of OD object, which can optionally be specified by application in
 310:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * initialization phase with @ref OD_extension_init() function.
 311:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 312:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef struct {
 313:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Object on which read and write will operate, part of @ref OD_stream_t */
 314:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     void *object;
 315:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Application specified read function pointer. If NULL, then read will be
 316:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * disabled. @ref OD_readOriginal can be used here to keep the original read
 317:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * function. For function description see @ref OD_IO_t. */
 318:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_t (*read)(OD_stream_t *stream, void *buf,
 319:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                   OD_size_t count, OD_size_t *countRead);
 320:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Application specified write function pointer. If NULL, then write will
 321:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * be disabled. @ref OD_writeOriginal can be used here to keep the original
 322:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * write function. For function description see @ref OD_IO_t. */
 323:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     ODR_t (*write)(OD_stream_t *stream, const void *buf,
 324:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                    OD_size_t count, OD_size_t *countWritten);
 325:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #if OD_FLAGS_PDO_SIZE > 0
 326:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /**PDO flags bit-field provides one bit for each OD variable, which exist
 327:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * inside OD object at specific sub index. If application clears that bit,
 328:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * and OD variable is mapped to an event driven TPDO, then TPDO will be
 329:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * sent.
 330:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      *
 331:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @ref OD_FLAGS_PDO_SIZE can have a value from 0 to 32 bytes, which
 332:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * corresponds to 0 to 256 available bits. If, for example,
 333:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * @ref OD_FLAGS_PDO_SIZE has value 4, then OD variables with sub index up
 334:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * to 31 will have the TPDO requesting functionality.
 335:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * See also @ref OD_requestTPDO and @ref OD_TPDOtransmitted. */
 336:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     uint8_t flagsPDO[OD_FLAGS_PDO_SIZE];
 337:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #endif
 338:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** } OD_extension_t;
 339:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 340:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 341:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 342:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Object Dictionary entry for one OD object.
 343:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 344:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * OD entries are collected inside OD_t as array (list). Each OD entry contains
 345:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * basic information about OD object (index and subEntriesCount), pointer to
 346:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * odObject with additional information about var, array or record entry and
 347:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * pointer to extension, configurable by application.
 348:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 349:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef struct {
 350:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Object Dictionary index */
 351:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     uint16_t index;
 352:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Number of all sub-entries, including sub-entry at sub-index 0 */
 353:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     uint8_t subEntriesCount;
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 27


 354:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Type of the odObject, indicated by @ref OD_objectTypes_t enumerator. */
 355:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     uint8_t odObjectType;
 356:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** OD object of type indicated by odObjectType, from which @ref OD_getSub()
 357:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****      * fetches the information */
 358:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     CO_PROGMEM void *odObject;
 359:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Extension to OD, specified by application */
 360:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_extension_t *extension;
 361:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** } OD_entry_t;
 362:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 363:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 364:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 365:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Object Dictionary
 366:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 367:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** typedef struct {
 368:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** Number of elements in the list, without last element, which is blank */
 369:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     uint16_t size;
 370:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     /** List OD entries (table of contents), ordered by index */
 371:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     OD_entry_t *list;
 372:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** } OD_t;
 373:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 374:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 375:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 376:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Read value from original OD location
 377:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 378:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * This function can be used inside read / write functions, specified by
 379:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @ref OD_extension_init(). It reads data directly from memory location
 380:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * specified by Object dictionary. If no IO extension is used on OD entry, then
 381:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * io->read returned by @ref OD_getSub() equals to this function. See
 382:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * also @ref OD_IO_t.
 383:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 384:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** ODR_t OD_readOriginal(OD_stream_t *stream, void *buf,
 385:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                       OD_size_t count, OD_size_t *countRead);
 386:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 387:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 388:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 389:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Write value to original OD location
 390:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 391:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * This function can be used inside read / write functions, specified by
 392:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @ref OD_extension_init(). It writes data directly to memory location
 393:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * specified by Object dictionary. If no IO extension is used on OD entry, then
 394:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * io->write returned by @ref OD_getSub() equals to this function. See
 395:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * also @ref OD_IO_t.
 396:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 397:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** ODR_t OD_writeOriginal(OD_stream_t *stream, const void *buf,
 398:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                        OD_size_t count, OD_size_t *countWritten);
 399:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 400:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 401:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 402:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Find OD entry in Object Dictionary
 403:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 404:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param od Object Dictionary
 405:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param index CANopen Object Dictionary index of object in Object Dictionary
 406:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 407:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return Pointer to OD entry or NULL if not found
 408:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 409:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** OD_entry_t *OD_find(OD_t *od, uint16_t index);
 410:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 28


 411:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 412:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 413:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Find sub-object with specified sub-index on OD entry returned by OD_find.
 414:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Function populates io structure with sub-object data.
 415:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 416:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @warning
 417:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Read and write functions may be called from different threads, so critical
 418:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * sections in custom functions must be observed, see @ref CO_critical_sections.
 419:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 420:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param entry OD entry returned by @ref OD_find().
 421:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param subIndex Sub-index of the variable from the OD object.
 422:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param [out] io Structure will be populated on success.
 423:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param odOrig If true, then potential IO extension on entry will be
 424:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * ignored and access to data entry in the original OD location will be returned
 425:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 426:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return Value from @ref ODR_t, "ODR_OK" in case of success.
 427:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 428:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** ODR_t OD_getSub(const OD_entry_t *entry, uint8_t subIndex,
 429:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                 OD_IO_t *io, bool_t odOrig);
 430:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 431:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 432:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 433:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Return index from OD entry
 434:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 435:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param entry OD entry returned by @ref OD_find().
 436:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 437:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return OD index
 438:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 439:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline uint16_t OD_getIndex(const OD_entry_t *entry) {
 440:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return (entry != NULL) ? entry->index : 0;
 441:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 442:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 443:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 444:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 445:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Check, if OD variable is mappable to PDO or SRDO.
 446:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 447:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * If OD variable is mappable, then it may be necessary to protect read/write
 448:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * access from mainline function. See @ref CO_critical_sections.
 449:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 450:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param stream Object Dictionary stream object.
 451:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 452:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return true, if OD variable is mappable.
 453:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 454:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline bool_t OD_mappable(OD_stream_t *stream) {
 455:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return (stream != NULL)
 456:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****          ? (stream->attribute & (ODA_TRPDO | ODA_TRSRDO)) != 0 : false;
 457:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 458:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 459:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 460:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 461:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Restart read or write operation on OD variable
 462:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 463:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * It is not necessary to call this function, if stream was initialized by
 464:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @ref OD_getSub(). It is also not necessary to call this function, if
 465:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * previous read or write was successfully finished.
 466:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 467:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param stream Object Dictionary stream object.
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 29


 468:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 469:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline void OD_rwRestart(OD_stream_t *stream) {
 470:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     if (stream != NULL) stream->dataOffset = 0;
 471:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 472:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 473:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 474:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 475:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Get TPDO request flags for OD entry.
 476:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 477:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * flagsPDO can be used for @ref OD_requestTPDO() or @ref OD_TPDOtransmitted().
 478:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 479:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param entry OD entry returned by @ref OD_find().
 480:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 481:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return pointer to flagsPDO
 482:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 483:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline uint8_t *OD_getFlagsPDO(OD_entry_t *entry) {
 484:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #if OD_FLAGS_PDO_SIZE > 0
 485:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     if (entry != NULL && entry->extension != NULL) {
 486:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****         return &entry->extension->flagsPDO[0];
 487:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     }
 488:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #endif
 489:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return 0;
 490:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 491:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 492:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 493:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 494:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Request TPDO, to which OD variable is mapped
 495:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 496:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Function clears the flagPDO bit, which corresponds to OD variable at specific
 497:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * OD index and subindex. For this functionality to work, @ref OD_extension_t
 498:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * must be enabled on OD variable. If OD variable is mapped to any TPDO with
 499:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * event driven transmission, then TPDO will be transmitted after this function
 500:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * call. If OD variable is mapped to more than one TPDO with event driven
 501:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * transmission, only the first matched TPDO will be transmitted.
 502:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 503:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * TPDO event driven transmission is enabled, if TPDO communication parameter,
 504:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * transmission type is set to 0, 254 or 255. For other transmission types
 505:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * (synchronous) flagPDO bit is ignored.
 506:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 507:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param flagsPDO TPDO request flags returned by @ref OD_getFlagsPDO.
 508:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param subIndex subIndex of the OD variable.
 509:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 510:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline void OD_requestTPDO(uint8_t *flagsPDO, uint8_t subIndex) {
 511:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #if OD_FLAGS_PDO_SIZE > 0
 512:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     if (flagsPDO != NULL && subIndex < (OD_FLAGS_PDO_SIZE * 8)) {
 513:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****         /* clear subIndex-th bit */
 514:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****         uint8_t mask = ~(1 << (subIndex & 0x07));
 515:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****         flagsPDO[subIndex >> 3] &= mask;
 516:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     }
 517:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #endif
 518:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 519:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 520:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 521:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 522:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Check if requested TPDO was transmitted
 523:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 524:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param flagsPDO TPDO request flags returned by @ref OD_getFlagsPDO.
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 30


 525:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param subIndex subIndex of the OD variable.
 526:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 527:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return Return true if event driven TPDO with mapping to OD variable,
 528:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * indicated by flagsPDO and subIndex, was transmitted since last
 529:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @ref OD_requestTPDO call. If there was no @ref OD_requestTPDO call yet and
 530:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * TPDO was transmitted by other event, function also returns true.
 531:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 532:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline bool_t OD_TPDOtransmitted(uint8_t *flagsPDO, uint8_t subIndex) {
 533:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #if OD_FLAGS_PDO_SIZE > 0
 534:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     if (flagsPDO != NULL && subIndex < (OD_FLAGS_PDO_SIZE * 8)) {
 535:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****         /* return true, if subIndex-th bit is set */
 536:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****         uint8_t mask = 1 << (subIndex & 0x07);
 537:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****         if ((flagsPDO[subIndex >> 3] & mask) != 0) {
 538:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****             return true;
 539:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****         }
 540:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     }
 541:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** #endif
 542:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return false;
 543:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 544:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 545:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 546:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 547:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Get SDO abort code from returnCode
 548:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 549:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param returnCode Returned from some OD access functions
 550:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 551:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return Corresponding @ref CO_SDO_abortCode_t
 552:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 553:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** uint32_t OD_getSDOabCode(ODR_t returnCode);
 554:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 555:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 556:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 557:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Extend OD object with own read/write functions and/or flagsPDO
 558:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 559:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * This function gives application very powerful tool: definition of own IO
 560:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * access on OD object. Structure and attributes are the same as defined in
 561:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * original OD object, but data are read directly from (or written directly to)
 562:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * application specified object via custom function calls.
 563:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 564:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Before this function specifies extension, OD variables are accessed from
 565:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * original OD location. After this function specifies extension OD variables
 566:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * are accessed from read/write functions specified by extension. (Except when
 567:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * "odOrig" argument to @ref OD_getSub() is set to true.)
 568:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 569:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * This function must also be used, when flagsPDO needs to be enabled for
 570:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * specific entry.
 571:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 572:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @warning
 573:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Object dictionary storage works only directly on OD variables. It does not
 574:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * access read function specified here. So, if extended OD objects needs to be
 575:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * preserved, then @ref OD_writeOriginal can be used inside custom write
 576:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * function.
 577:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 578:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @warning
 579:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Read and write functions may be called from different threads, so critical
 580:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * sections in custom functions must be observed, see @ref CO_critical_sections.
 581:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 31


 582:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param entry OD entry returned by @ref OD_find().
 583:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param extension Extension object, which must be initialized externally.
 584:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Extension object must exist permanently. If NULL, extension will be removed.
 585:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 586:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return "ODR_OK" on success, "ODR_IDX_NOT_EXIST" if OD object doesn't exist.
 587:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 588:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_extension_init(OD_entry_t *entry,
 589:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                       OD_extension_t *extension)
 590:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 591:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     if (entry == NULL) return ODR_IDX_NOT_EXIST;
 592:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     entry->extension = extension;
 593:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return ODR_OK;
 594:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 595:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 596:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 597:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 598:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @defgroup CO_ODgetSetters Getters and setters
 599:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @{
 600:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 601:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Getter and setter helper functions for accessing different types of Object
 602:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Dictionary variables.
 603:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 604:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /**
 605:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * Get variable from Object Dictionary
 606:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 607:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param entry OD entry returned by @ref OD_find().
 608:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param subIndex Sub-index of the variable from the OD object.
 609:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param [out] val Value will be written here.
 610:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param len Size of value to retrieve from OD.
 611:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @param odOrig If true, then potential IO extension on entry will be
 612:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * ignored and data in the original OD location will be returned.
 613:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  *
 614:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * @return Value from @ref ODR_t, "ODR_OK" in case of success. Error, if
 615:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * variable does not exist in object dictionary or it does not have the correct
 616:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  * length or other reason.
 617:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****  */
 618:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** ODR_t OD_get_value(const OD_entry_t *entry, uint8_t subIndex,
 619:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                    void *val, OD_size_t len, bool_t odOrig);
 620:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 621:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Get int8_t variable from Object Dictionary, see @ref OD_get_value */
 622:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_get_i8(const OD_entry_t *entry, uint8_t subIndex,
 623:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                               int8_t *val, bool_t odOrig)
 624:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 625:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 626:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 627:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 628:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Get int16_t variable from Object Dictionary, see @ref OD_get_value */
 629:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_get_i16(const OD_entry_t *entry, uint8_t subIndex,
 630:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                int16_t *val, bool_t odOrig)
 631:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 632:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 633:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 634:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 635:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Get int32_t variable from Object Dictionary, see @ref OD_get_value */
 636:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_get_i32(const OD_entry_t *entry, uint8_t subIndex,
 637:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                int32_t *val, bool_t odOrig)
 638:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 32


 639:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 640:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 641:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 642:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Get int64_t variable from Object Dictionary, see @ref OD_get_value */
 643:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_get_i64(const OD_entry_t *entry, uint8_t subIndex,
 644:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                int64_t *val, bool_t odOrig)
 645:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 646:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 647:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 648:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 649:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Get uint8_t variable from Object Dictionary, see @ref OD_get_value */
 650:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_get_u8(const OD_entry_t *entry, uint8_t subIndex,
 651:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                               uint8_t *val, bool_t odOrig)
 652:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 653:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 654:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 655:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** 
 656:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** /** Get uint16_t variable from Object Dictionary, see @ref OD_get_value */
 657:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** static inline ODR_t OD_get_u16(const OD_entry_t *entry, uint8_t subIndex,
 254              		.loc 3 657 21 view .LVU70
 255              	.LBB21:
 658:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                uint16_t *val, bool_t odOrig)
 659:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** {
 660:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return OD_get_value(entry, subIndex, val, sizeof(*val), odOrig);
 256              		.loc 3 660 5 view .LVU71
 257              		.loc 3 660 12 is_stmt 0 view .LVU72
 258 004e 0123     		movs	r3, #1
 259 0050 0093     		str	r3, [sp]
 260 0052 0223     		movs	r3, #2
 261 0054 0DF11602 		add	r2, sp, #22
 262              	.LVL22:
 263              		.loc 3 660 12 view .LVU73
 264 0058 0021     		movs	r1, #0
 265 005a 2846     		mov	r0, r5
 266 005c FFF7FEFF 		bl	OD_get_value
 267              	.LVL23:
 268              		.loc 3 660 12 view .LVU74
 269              	.LBE21:
 270              	.LBE20:
 128:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     if (odRet != ODR_OK) {
 271              		.loc 1 128 5 is_stmt 1 view .LVU75
 272              		.loc 1 128 8 is_stmt 0 view .LVU76
 273 0060 38BB     		cbnz	r0, .L28
 129:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         if (errInfo != NULL) *errInfo = OD_getIndex(OD_1017_ProducerHbTime);
 130:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         return CO_ERROR_OD_PARAMETERS;
 131:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 132:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     NMT->HBproducerTime_us = (uint32_t)HBprodTime_ms * 1000;
 274              		.loc 1 132 5 is_stmt 1 view .LVU77
 275              		.loc 1 132 30 is_stmt 0 view .LVU78
 276 0062 BDF81630 		ldrh	r3, [sp, #22]
 277              		.loc 1 132 54 view .LVU79
 278 0066 4FF47A72 		mov	r2, #1000
 279 006a 02FB03F3 		mul	r3, r2, r3
 280              		.loc 1 132 28 view .LVU80
 281 006e A360     		str	r3, [r4, #8]
 133:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
 134:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     NMT->OD_1017_extension.object = NMT;
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 33


 282              		.loc 1 134 5 is_stmt 1 view .LVU81
 283              		.loc 1 134 35 is_stmt 0 view .LVU82
 284 0070 2461     		str	r4, [r4, #16]
 135:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     NMT->OD_1017_extension.read = OD_readOriginal;
 285              		.loc 1 135 5 is_stmt 1 view .LVU83
 286              		.loc 1 135 33 is_stmt 0 view .LVU84
 287 0072 254B     		ldr	r3, .L30
 288 0074 6361     		str	r3, [r4, #20]
 136:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     NMT->OD_1017_extension.write = OD_write_1017;
 289              		.loc 1 136 5 is_stmt 1 view .LVU85
 290              		.loc 1 136 34 is_stmt 0 view .LVU86
 291 0076 254B     		ldr	r3, .L30+4
 292 0078 A361     		str	r3, [r4, #24]
 137:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     odRet = OD_extension_init(OD_1017_ProducerHbTime, &NMT->OD_1017_extension);
 293              		.loc 1 137 5 is_stmt 1 view .LVU87
 294              		.loc 1 137 13 is_stmt 0 view .LVU88
 295 007a 04F11003 		add	r3, r4, #16
 296              	.LVL24:
 297              	.LBB22:
 298              	.LBI22:
 588:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****                                       OD_extension_t *extension)
 299              		.loc 3 588 21 is_stmt 1 view .LVU89
 300              	.LBB23:
 591:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     entry->extension = extension;
 301              		.loc 3 591 5 view .LVU90
 592:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return ODR_OK;
 302              		.loc 3 592 5 view .LVU91
 592:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return ODR_OK;
 303              		.loc 3 592 22 is_stmt 0 view .LVU92
 304 007e AB60     		str	r3, [r5, #8]
 593:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 305              		.loc 3 593 5 is_stmt 1 view .LVU93
 306              	.LVL25:
 593:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 307              		.loc 3 593 5 is_stmt 0 view .LVU94
 308              	.LBE23:
 309              	.LBE22:
 138:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     if (odRet != ODR_OK) {
 310              		.loc 1 138 5 is_stmt 1 view .LVU95
 139:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         if (errInfo != NULL) *errInfo = OD_getIndex(OD_1017_ProducerHbTime);
 140:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         return CO_ERROR_OD_PARAMETERS;
 141:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 142:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
 143:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     if (NMT->HBproducerTimer > NMT->HBproducerTime_us) {
 311              		.loc 1 143 5 view .LVU96
 312              		.loc 1 143 12 is_stmt 0 view .LVU97
 313 0080 E268     		ldr	r2, [r4, #12]
 314              		.loc 1 143 35 view .LVU98
 315 0082 A368     		ldr	r3, [r4, #8]
 316              		.loc 1 143 8 view .LVU99
 317 0084 9A42     		cmp	r2, r3
 318 0086 00D9     		bls	.L20
 144:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         NMT->HBproducerTimer = NMT->HBproducerTime_us;
 319              		.loc 1 144 9 is_stmt 1 view .LVU100
 320              		.loc 1 144 30 is_stmt 0 view .LVU101
 321 0088 E360     		str	r3, [r4, #12]
 322              	.L20:
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 34


 145:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 146:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
 147:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     /* configure NMT CAN reception */
 148:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     ret = CO_CANrxBufferInit(
 323              		.loc 1 148 5 is_stmt 1 view .LVU102
 324              		.loc 1 148 11 is_stmt 0 view .LVU103
 325 008a 214B     		ldr	r3, .L30+8
 326 008c 0293     		str	r3, [sp, #8]
 327 008e 0194     		str	r4, [sp, #4]
 328 0090 0023     		movs	r3, #0
 329 0092 0093     		str	r3, [sp]
 330 0094 40F2FF73 		movw	r3, #2047
 331 0098 BDF84820 		ldrh	r2, [sp, #72]
 332 009c BDF84410 		ldrh	r1, [sp, #68]
 333 00a0 4046     		mov	r0, r8
 334 00a2 FFF7FEFF 		bl	CO_CANrxBufferInit
 335              	.LVL26:
 149:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             NMT_CANdevRx,       /* CAN device */
 150:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             NMT_rxIdx,          /* rx buffer index */
 151:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             CANidRxNMT,         /* CAN identifier */
 152:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             0x7FF,              /* mask */
 153:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             0,                  /* rtr */
 154:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             (void*)NMT,         /* object passed to receive function */
 155:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             CO_NMT_receive);    /* this function will process received message*/
 156:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     if (ret != CO_ERROR_NO) {
 336              		.loc 1 156 5 is_stmt 1 view .LVU104
 337              		.loc 1 156 8 is_stmt 0 view .LVU105
 338 00a6 0546     		mov	r5, r0
 339              	.LVL27:
 340              		.loc 1 156 8 view .LVU106
 341 00a8 58B1     		cbz	r0, .L29
 342              	.LVL28:
 343              	.L17:
 157:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         return ret;
 158:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 159:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
 160:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** #if (CO_CONFIG_NMT) & CO_CONFIG_NMT_MASTER
 161:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     /* configure NMT CAN transmission */
 162:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     NMT->NMT_CANdevTx = NMT_CANdevTx;
 163:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     NMT->NMT_TXbuff = CO_CANtxBufferInit(
 164:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             NMT_CANdevTx,       /* CAN device */
 165:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             NMT_txIdx,          /* index of specific buffer inside CAN module */
 166:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             CANidTxNMT,         /* CAN identifier */
 167:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             0,                  /* rtr */
 168:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             2,                  /* number of data bytes */
 169:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             0);                 /* synchronous message flag bit */
 170:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     if (NMT->NMT_TXbuff == NULL) {
 171:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         return CO_ERROR_ILLEGAL_ARGUMENT;
 172:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 173:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** #endif
 174:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
 175:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     /* configure HB CAN transmission */
 176:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     NMT->HB_CANdevTx = HB_CANdevTx;
 177:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     NMT->HB_TXbuff = CO_CANtxBufferInit(
 178:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             HB_CANdevTx,        /* CAN device */
 179:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             HB_txIdx,           /* index of specific buffer inside CAN module */
 180:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             CANidTxHB,          /* CAN identifier */
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 35


 181:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             0,                  /* rtr */
 182:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             1,                  /* number of data bytes */
 183:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             0);                 /* synchronous message flag bit */
 184:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     if (NMT->HB_TXbuff == NULL) {
 185:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         return CO_ERROR_ILLEGAL_ARGUMENT;
 186:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 187:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
 188:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     return ret;
 189:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** }
 344              		.loc 1 189 1 view .LVU107
 345 00aa 2846     		mov	r0, r5
 346 00ac 07B0     		add	sp, sp, #28
 347              	.LCFI4:
 348              		.cfi_remember_state
 349              		.cfi_def_cfa_offset 28
 350              		@ sp needed
 351 00ae BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 352              	.LVL29:
 353              	.L28:
 354              	.LCFI5:
 355              		.cfi_restore_state
 129:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         return CO_ERROR_OD_PARAMETERS;
 356              		.loc 1 129 9 is_stmt 1 view .LVU108
 129:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         return CO_ERROR_OD_PARAMETERS;
 357              		.loc 1 129 12 is_stmt 0 view .LVU109
 358 00b2 169B     		ldr	r3, [sp, #88]
 359 00b4 13B1     		cbz	r3, .L19
 129:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         return CO_ERROR_OD_PARAMETERS;
 360              		.loc 1 129 30 is_stmt 1 view .LVU110
 361              	.LVL30:
 362              	.LBB24:
 363              	.LBI24:
 439:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h ****     return (entry != NULL) ? entry->index : 0;
 364              		.loc 3 439 24 view .LVU111
 365              	.LBB25:
 440:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 366              		.loc 3 440 5 view .LVU112
 440:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 367              		.loc 3 440 43 is_stmt 0 view .LVU113
 368 00b6 2B88     		ldrh	r3, [r5]
 369              	.LVL31:
 440:Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h **** }
 370              		.loc 3 440 43 view .LVU114
 371              	.LBE25:
 372              	.LBE24:
 129:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         return CO_ERROR_OD_PARAMETERS;
 373              		.loc 1 129 39 view .LVU115
 374 00b8 169A     		ldr	r2, [sp, #88]
 375 00ba 1360     		str	r3, [r2]
 376              	.L19:
 130:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 377              		.loc 1 130 9 is_stmt 1 view .LVU116
 130:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 378              		.loc 1 130 16 is_stmt 0 view .LVU117
 379 00bc 6FF00B05 		mvn	r5, #11
 380              	.LVL32:
 130:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 36


 381              		.loc 1 130 16 view .LVU118
 382 00c0 F3E7     		b	.L17
 383              	.LVL33:
 384              	.L29:
 176:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     NMT->HB_TXbuff = CO_CANtxBufferInit(
 385              		.loc 1 176 5 is_stmt 1 view .LVU119
 176:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     NMT->HB_TXbuff = CO_CANtxBufferInit(
 386              		.loc 1 176 22 is_stmt 0 view .LVU120
 387 00c2 C4F82490 		str	r9, [r4, #36]
 177:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             HB_CANdevTx,        /* CAN device */
 388              		.loc 1 177 5 is_stmt 1 view .LVU121
 177:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             HB_CANdevTx,        /* CAN device */
 389              		.loc 1 177 22 is_stmt 0 view .LVU122
 390 00c6 0023     		movs	r3, #0
 391 00c8 0193     		str	r3, [sp, #4]
 392 00ca 0122     		movs	r2, #1
 393 00cc 0092     		str	r2, [sp]
 394 00ce BDF85420 		ldrh	r2, [sp, #84]
 395 00d2 BDF85010 		ldrh	r1, [sp, #80]
 396 00d6 4846     		mov	r0, r9
 397              	.LVL34:
 177:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             HB_CANdevTx,        /* CAN device */
 398              		.loc 1 177 22 view .LVU123
 399 00d8 FFF7FEFF 		bl	CO_CANtxBufferInit
 400              	.LVL35:
 177:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             HB_CANdevTx,        /* CAN device */
 401              		.loc 1 177 20 view .LVU124
 402 00dc A062     		str	r0, [r4, #40]
 184:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         return CO_ERROR_ILLEGAL_ARGUMENT;
 403              		.loc 1 184 5 is_stmt 1 view .LVU125
 184:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         return CO_ERROR_ILLEGAL_ARGUMENT;
 404              		.loc 1 184 8 is_stmt 0 view .LVU126
 405 00de 0028     		cmp	r0, #0
 406 00e0 E3D1     		bne	.L17
 185:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 407              		.loc 1 185 16 view .LVU127
 408 00e2 4FF0FF35 		mov	r5, #-1
 409 00e6 E0E7     		b	.L17
 410              	.LVL36:
 411              	.L21:
 111:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 412              		.loc 1 111 16 view .LVU128
 413 00e8 4FF0FF35 		mov	r5, #-1
 414 00ec DDE7     		b	.L17
 415              	.L22:
 111:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 416              		.loc 1 111 16 view .LVU129
 417 00ee 4FF0FF35 		mov	r5, #-1
 418 00f2 DAE7     		b	.L17
 419              	.L23:
 111:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 420              		.loc 1 111 16 view .LVU130
 421 00f4 4FF0FF35 		mov	r5, #-1
 422 00f8 D7E7     		b	.L17
 423              	.L24:
 111:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 424              		.loc 1 111 16 view .LVU131
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 37


 425 00fa 4FF0FF35 		mov	r5, #-1
 426 00fe D4E7     		b	.L17
 427              	.L25:
 111:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 428              		.loc 1 111 16 view .LVU132
 429 0100 4FF0FF35 		mov	r5, #-1
 430 0104 D1E7     		b	.L17
 431              	.L31:
 432 0106 00BF     		.align	2
 433              	.L30:
 434 0108 00000000 		.word	OD_readOriginal
 435 010c 00000000 		.word	OD_write_1017
 436 0110 00000000 		.word	CO_NMT_receive
 437              		.cfi_endproc
 438              	.LFE162:
 440              		.section	.text.CO_NMT_process,"ax",%progbits
 441              		.align	1
 442              		.global	CO_NMT_process
 443              		.syntax unified
 444              		.thumb
 445              		.thumb_func
 447              	CO_NMT_process:
 448              	.LVL37:
 449              	.LFB163:
 190:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
 191:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
 192:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** #if (CO_CONFIG_NMT) & CO_CONFIG_FLAG_CALLBACK_PRE
 193:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** void CO_NMT_initCallbackPre(CO_NMT_t *NMT,
 194:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                             void *object,
 195:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                             void (*pFunctSignal)(void *object))
 196:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** {
 197:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     if (NMT != NULL) {
 198:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         NMT->pFunctSignalPre = pFunctSignal;
 199:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         NMT->functSignalObjectPre = object;
 200:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 201:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** }
 202:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** #endif
 203:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
 204:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
 205:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** #if (CO_CONFIG_NMT) & CO_CONFIG_NMT_CALLBACK_CHANGE
 206:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** /******************************************************************************/
 207:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** void CO_NMT_initCallbackChanged(CO_NMT_t *NMT,
 208:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                                 void (*pFunctNMT)(CO_NMT_internalState_t state))
 209:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** {
 210:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     if (NMT != NULL) {
 211:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         NMT->pFunctNMT = pFunctNMT;
 212:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         if (NMT->pFunctNMT != NULL) {
 213:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             NMT->pFunctNMT(NMT->operatingState);
 214:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         }
 215:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 216:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** }
 217:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** #endif
 218:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
 219:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
 220:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** /******************************************************************************/
 221:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** CO_NMT_reset_cmd_t CO_NMT_process(CO_NMT_t *NMT,
 222:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                                   CO_NMT_internalState_t *NMTstate,
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 38


 223:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                                   uint32_t timeDifference_us,
 224:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                                   uint32_t *timerNext_us)
 225:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** {
 450              		.loc 1 225 1 is_stmt 1 view -0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 0, uses_anonymous_args = 0
 454              		.loc 1 225 1 is_stmt 0 view .LVU134
 455 0000 70B5     		push	{r4, r5, r6, lr}
 456              	.LCFI6:
 457              		.cfi_def_cfa_offset 16
 458              		.cfi_offset 4, -16
 459              		.cfi_offset 5, -12
 460              		.cfi_offset 6, -8
 461              		.cfi_offset 14, -4
 462 0002 0446     		mov	r4, r0
 463 0004 0E46     		mov	r6, r1
 226:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     (void)timerNext_us; /* may be unused */
 464              		.loc 1 226 5 is_stmt 1 view .LVU135
 227:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     CO_NMT_internalState_t NMTstateCpy = NMT->operatingState;
 465              		.loc 1 227 5 view .LVU136
 466              		.loc 1 227 28 is_stmt 0 view .LVU137
 467 0006 90F90050 		ldrsb	r5, [r0]
 468              	.LVL38:
 228:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     CO_NMT_reset_cmd_t resetCommand = CO_RESET_NOT;
 469              		.loc 1 228 5 is_stmt 1 view .LVU138
 229:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     bool_t NNTinit = NMTstateCpy == CO_NMT_INITIALIZING;
 470              		.loc 1 229 5 view .LVU139
 230:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
 231:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     NMT->HBproducerTimer = (NMT->HBproducerTimer > timeDifference_us )
 471              		.loc 1 231 5 view .LVU140
 472              		.loc 1 231 32 is_stmt 0 view .LVU141
 473 000a C368     		ldr	r3, [r0, #12]
 474              	.LVL39:
 232:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                          ? (NMT->HBproducerTimer - timeDifference_us) : 0;
 475              		.loc 1 232 71 view .LVU142
 476 000c 9342     		cmp	r3, r2
 477 000e 01D9     		bls	.L47
 478              		.loc 1 232 71 discriminator 1 view .LVU143
 479 0010 9B1A     		subs	r3, r3, r2
 480 0012 00E0     		b	.L33
 481              	.L47:
 482              		.loc 1 232 71 view .LVU144
 483 0014 0023     		movs	r3, #0
 484              	.L33:
 231:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                          ? (NMT->HBproducerTimer - timeDifference_us) : 0;
 485              		.loc 1 231 26 view .LVU145
 486 0016 E360     		str	r3, [r4, #12]
 233:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
 234:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     /* Send heartbeat producer message if:
 235:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****      * - First start, send bootup message or
 236:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****      * - HB producer enabled and: Timer expired or NMT->operatingState changed*/
 237:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     if (NNTinit || (NMT->HBproducerTime_us != 0
 487              		.loc 1 237 5 is_stmt 1 view .LVU146
 488              		.loc 1 237 8 is_stmt 0 view .LVU147
 489 0018 35B1     		cbz	r5, .L34
 490              		.loc 1 237 24 discriminator 1 view .LVU148
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 39


 491 001a A268     		ldr	r2, [r4, #8]
 492              	.LVL40:
 493              		.loc 1 237 17 discriminator 1 view .LVU149
 494 001c 9AB1     		cbz	r2, .L35
 238:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                     && (NMT->HBproducerTimer == 0
 495              		.loc 1 238 21 view .LVU150
 496 001e 1BB1     		cbz	r3, .L34
 239:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                         || NMTstateCpy != NMT->operatingStatePrev)
 497              		.loc 1 239 46 view .LVU151
 498 0020 94F90130 		ldrsb	r3, [r4, #1]
 499              		.loc 1 239 25 view .LVU152
 500 0024 AB42     		cmp	r3, r5
 501 0026 0ED0     		beq	.L35
 502              	.L34:
 240:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     )) {
 241:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         NMT->HB_TXbuff->data[0] = (uint8_t) NMTstateCpy;
 503              		.loc 1 241 9 is_stmt 1 view .LVU153
 504              		.loc 1 241 12 is_stmt 0 view .LVU154
 505 0028 A36A     		ldr	r3, [r4, #40]
 506              		.loc 1 241 33 view .LVU155
 507 002a 5D71     		strb	r5, [r3, #5]
 242:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         CO_CANsend(NMT->HB_CANdevTx, NMT->HB_TXbuff);
 508              		.loc 1 242 9 is_stmt 1 view .LVU156
 509 002c A16A     		ldr	r1, [r4, #40]
 510              	.LVL41:
 511              		.loc 1 242 9 is_stmt 0 view .LVU157
 512 002e 606A     		ldr	r0, [r4, #36]
 513              	.LVL42:
 514              		.loc 1 242 9 view .LVU158
 515 0030 FFF7FEFF 		bl	CO_CANsend
 516              	.LVL43:
 243:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
 244:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         if (NMTstateCpy == CO_NMT_INITIALIZING) {
 517              		.loc 1 244 9 is_stmt 1 view .LVU159
 518              		.loc 1 244 12 is_stmt 0 view .LVU160
 519 0034 2DB9     		cbnz	r5, .L36
 245:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             /* NMT slave self starting */
 246:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             NMTstateCpy = (NMT->NMTcontrol & CO_NMT_STARTUP_TO_OPERATIONAL) != 0
 520              		.loc 1 246 13 is_stmt 1 view .LVU161
 521              		.loc 1 246 31 is_stmt 0 view .LVU162
 522 0036 A388     		ldrh	r3, [r4, #4]
 247:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                           ? CO_NMT_OPERATIONAL : CO_NMT_PRE_OPERATIONAL;
 523              		.loc 1 247 48 view .LVU163
 524 0038 13F4807F 		tst	r3, #256
 525 003c 0FD0     		beq	.L48
 526 003e 0525     		movs	r5, #5
 527              	.LVL44:
 528              		.loc 1 247 48 view .LVU164
 529 0040 01E0     		b	.L35
 530              	.LVL45:
 531              	.L36:
 248:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         }
 249:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         else {
 250:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             /* Start timer from the beginning. If OS is slow, time sliding may
 251:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****              * occur. However, heartbeat is not for synchronization, it is for
 252:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****              * health report. In case of initializing, timer is set in the
 253:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****              * CO_NMT_init() function with pre-defined value. */
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 40


 254:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             NMT->HBproducerTimer = NMT->HBproducerTime_us;
 532              		.loc 1 254 13 is_stmt 1 view .LVU165
 533              		.loc 1 254 39 is_stmt 0 view .LVU166
 534 0042 A368     		ldr	r3, [r4, #8]
 535              		.loc 1 254 34 view .LVU167
 536 0044 E360     		str	r3, [r4, #12]
 537              	.LVL46:
 538              	.L35:
 255:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         }
 256:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 257:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     NMT->operatingStatePrev = NMTstateCpy;
 539              		.loc 1 257 5 is_stmt 1 view .LVU168
 540              		.loc 1 257 29 is_stmt 0 view .LVU169
 541 0046 6570     		strb	r5, [r4, #1]
 258:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
 259:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     /* process internal NMT commands, received from CO_NMT_receive() or
 260:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****      * CO_NMT_sendCommand() */
 261:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     if (NMT->internalCommand != CO_NMT_NO_COMMAND) {
 542              		.loc 1 261 5 is_stmt 1 view .LVU170
 543              		.loc 1 261 12 is_stmt 0 view .LVU171
 544 0048 A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 545              		.loc 1 261 8 view .LVU172
 546 004a 90B1     		cbz	r0, .L37
 262:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         switch (NMT->internalCommand) {
 547              		.loc 1 262 9 is_stmt 1 view .LVU173
 548 004c 8028     		cmp	r0, #128
 549 004e 23D0     		beq	.L49
 550 0050 07D9     		bls	.L65
 551 0052 8128     		cmp	r0, #129
 552 0054 28D0     		beq	.L52
 553 0056 8228     		cmp	r0, #130
 554 0058 28D1     		bne	.L53
 263:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             case CO_NMT_ENTER_OPERATIONAL:
 264:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                 NMTstateCpy = CO_NMT_OPERATIONAL;
 265:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                 break;
 266:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             case CO_NMT_ENTER_STOPPED:
 267:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                 NMTstateCpy = CO_NMT_STOPPED;
 268:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                 break;
 269:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             case CO_NMT_ENTER_PRE_OPERATIONAL:
 270:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                 NMTstateCpy = CO_NMT_PRE_OPERATIONAL;
 271:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                 break;
 272:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             case CO_NMT_RESET_NODE:
 273:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                 resetCommand = CO_RESET_APP;
 274:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                 break;
 275:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             case CO_NMT_RESET_COMMUNICATION:
 276:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                 resetCommand = CO_RESET_COMM;
 555              		.loc 1 276 30 is_stmt 0 view .LVU174
 556 005a 0120     		movs	r0, #1
 557 005c 07E0     		b	.L38
 558              	.LVL47:
 559              	.L48:
 247:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         }
 560              		.loc 1 247 48 view .LVU175
 561 005e 7F25     		movs	r5, #127
 562              	.LVL48:
 247:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         }
 563              		.loc 1 247 48 view .LVU176
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 41


 564 0060 F1E7     		b	.L35
 565              	.LVL49:
 566              	.L65:
 262:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         switch (NMT->internalCommand) {
 567              		.loc 1 262 9 view .LVU177
 568 0062 0128     		cmp	r0, #1
 569 0064 1BD0     		beq	.L50
 570 0066 0228     		cmp	r0, #2
 571 0068 1CD1     		bne	.L51
 228:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     bool_t NNTinit = NMTstateCpy == CO_NMT_INITIALIZING;
 572              		.loc 1 228 24 view .LVU178
 573 006a 0020     		movs	r0, #0
 267:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                 break;
 574              		.loc 1 267 29 view .LVU179
 575 006c 0425     		movs	r5, #4
 576              	.LVL50:
 577              	.L38:
 277:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                 break;
 278:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             default:
 279:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                 break;
 280:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         }
 281:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         NMT->internalCommand = CO_NMT_NO_COMMAND;
 578              		.loc 1 281 9 is_stmt 1 view .LVU180
 579              		.loc 1 281 30 is_stmt 0 view .LVU181
 580 006e 0023     		movs	r3, #0
 581 0070 A370     		strb	r3, [r4, #2]
 582              	.LVL51:
 583              	.L37:
 282:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 283:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
 284:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     /* verify NMT transitions based on error register */
 285:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     bool_t busOff_HB = (NMT->NMTcontrol & CO_NMT_ERR_ON_BUSOFF_HB) != 0
 584              		.loc 1 285 5 is_stmt 1 view .LVU182
 585              		.loc 1 285 28 is_stmt 0 view .LVU183
 586 0072 A388     		ldrh	r3, [r4, #4]
 286:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                     && (CO_isError(NMT->em, CO_EM_CAN_TX_BUS_OFF)
 587              		.loc 1 286 21 view .LVU184
 588 0074 13F4805F 		tst	r3, #4096
 589 0078 1AD0     		beq	.L54
 590              		.loc 1 286 25 discriminator 1 view .LVU185
 591 007a 226A     		ldr	r2, [r4, #32]
 592              	.LVL52:
 593              	.LBB26:
 594              	.LBI26:
 595              		.file 4 "Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h"
   1:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** /**
   2:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * CANopen Emergency protocol.
   3:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
   4:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @file        CO_Emergency.h
   5:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @ingroup     CO_Emergency
   6:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @author      Janez Paternoster
   7:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @copyright   2020 Janez Paternoster
   8:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
   9:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * This file is part of CANopenNode, an opensource CANopen Stack.
  10:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Project home page is <https://github.com/CANopenNode/CANopenNode>.
  11:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * For more information on CANopen see <http://www.can-cia.org/>.
  12:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 42


  13:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Licensed under the Apache License, Version 2.0 (the "License");
  14:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * you may not use this file except in compliance with the License.
  15:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * You may obtain a copy of the License at
  16:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
  17:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *     http://www.apache.org/licenses/LICENSE-2.0
  18:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
  19:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Unless required by applicable law or agreed to in writing, software
  20:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * distributed under the License is distributed on an "AS IS" BASIS,
  21:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  22:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * See the License for the specific language governing permissions and
  23:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * limitations under the License.
  24:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  */
  25:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
  26:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #ifndef CO_EMERGENCY_H
  27:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #define CO_EMERGENCY_H
  28:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
  29:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #include "301/CO_driver.h"
  30:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #include "301/CO_ODinterface.h"
  31:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
  32:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** /* default configuration, see CO_config.h */
  33:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #ifndef CO_CONFIG_EM
  34:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #define CO_CONFIG_EM (CO_CONFIG_EM_PRODUCER | \
  35:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                       CO_CONFIG_EM_HISTORY | \
  36:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                       CO_CONFIG_GLOBAL_FLAG_CALLBACK_PRE | \
  37:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                       CO_CONFIG_GLOBAL_FLAG_TIMERNEXT)
  38:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #endif
  39:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #ifndef CO_CONFIG_EM_ERR_STATUS_BITS_COUNT
  40:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #define CO_CONFIG_EM_ERR_STATUS_BITS_COUNT (10*8)
  41:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #endif
  42:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #ifndef CO_CONFIG_ERR_CONDITION_GENERIC
  43:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #define CO_CONFIG_ERR_CONDITION_GENERIC (em->errorStatusBits[5] != 0)
  44:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #endif
  45:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #ifndef CO_CONFIG_ERR_CONDITION_COMMUNICATION
  46:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #define CO_CONFIG_ERR_CONDITION_COMMUNICATION (em->errorStatusBits[2] \
  47:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                                             || em->errorStatusBits[3])
  48:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #endif
  49:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #ifndef CO_CONFIG_ERR_CONDITION_MANUFACTURER
  50:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #define CO_CONFIG_ERR_CONDITION_MANUFACTURER (em->errorStatusBits[8] \
  51:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                                            || em->errorStatusBits[9])
  52:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #endif
  53:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
  54:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #ifdef __cplusplus
  55:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** extern "C" {
  56:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #endif
  57:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
  58:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** /**
  59:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @defgroup CO_Emergency Emergency
  60:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * CANopen Emergency protocol.
  61:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
  62:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @ingroup CO_CANopen_301
  63:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @{
  64:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Error control and Emergency is used for control internal error state
  65:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * and for sending a CANopen Emergency message.
  66:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
  67:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * In case of error condition stack or application calls CO_errorReport()
  68:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * function with indication of the error. Specific error condition is reported
  69:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * (with CANopen Emergency message) only the first time after it occurs.
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 43


  70:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Internal state of specific error condition is indicated by internal bitfield
  71:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * variable, with space for maximum @ref CO_CONFIG_EM_ERR_STATUS_BITS_COUNT
  72:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * bits. Meaning for each bit is described by @ref CO_EM_errorStatusBits_t.
  73:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Specific error condition can be reset by CO_errorReset() function. In that
  74:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * case Emergency message is sent with CO_EM_NO_ERROR indication.
  75:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
  76:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Some error conditions are informative and some are critical. Critical error
  77:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * conditions set the corresponding bit in @ref CO_errorRegister_t. Critical
  78:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * error conditions for generic error are specified by
  79:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @ref CO_CONFIG_ERR_CONDITION_GENERIC macro. Similar macros are defined for
  80:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * other error bits in in @ref CO_errorRegister_t.
  81:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
  82:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * ### Emergency producer
  83:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * If @ref CO_CONFIG_EM has CO_CONFIG_EM_PRODUCER enabled, then CANopen
  84:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Emergency message will be sent on each change of any error condition.
  85:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Emergency message contents are:
  86:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
  87:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *   Byte | Description
  88:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *   -----|-----------------------------------------------------------
  89:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *   0..1 | @ref CO_EM_errorCode_t
  90:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *   2    | @ref CO_errorRegister_t
  91:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *   3    | Index of error condition (see @ref CO_EM_errorStatusBits_t).
  92:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *   4..7 | Additional informative argument to CO_errorReport() function.
  93:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
  94:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * ### Error history
  95:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * If @ref CO_CONFIG_EM has CO_CONFIG_EM_HISTORY enabled, then latest errors
  96:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * can be read from _Pre Defined Error Field_ (object dictionary, index 0x1003).
  97:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Contents corresponds to bytes 0..3 from the Emergency message.
  98:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
  99:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * ### Emergency consumer
 100:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * If @ref CO_CONFIG_EM has CO_CONFIG_EM_CONSUMER enabled, then callback can be
 101:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * registered by @ref CO_EM_initCallbackRx() function.
 102:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  */
 103:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 104:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 105:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** /**
 106:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * CANopen Error register.
 107:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
 108:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Mandatory for CANopen, resides in object dictionary, index 0x1001.
 109:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
 110:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Error register is calculated from internal bitfield variable, critical bits.
 111:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * See @ref CO_EM_errorStatusBits_t and @ref CO_STACK_CONFIG_EMERGENCY for error
 112:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * condition macros.
 113:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
 114:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Internal errors may prevent device to stay in NMT Operational state and
 115:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * changes may switch between the states. See @ref CO_NMT_control_t for details.
 116:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  */
 117:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** typedef enum {
 118:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_ERR_REG_GENERIC_ERR   = 0x01U, /**< bit 0, generic error */
 119:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_ERR_REG_CURRENT       = 0x02U, /**< bit 1, current */
 120:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_ERR_REG_VOLTAGE       = 0x04U, /**< bit 2, voltage */
 121:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_ERR_REG_TEMPERATURE   = 0x08U, /**< bit 3, temperature */
 122:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_ERR_REG_COMMUNICATION = 0x10U, /**< bit 4, communication error */
 123:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_ERR_REG_DEV_PROFILE   = 0x20U, /**< bit 5, device profile specific */
 124:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_ERR_REG_RESERVED      = 0x40U, /**< bit 6, reserved (always 0) */
 125:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_ERR_REG_MANUFACTURER  = 0x80U  /**< bit 7, manufacturer specific */
 126:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** } CO_errorRegister_t;
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 44


 127:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 128:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 129:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** /**
 130:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * CANopen Error code
 131:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
 132:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Standard error codes according to CiA DS-301 and DS-401.
 133:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  */
 134:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** typedef enum {
 135:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x00xx, error Reset or No Error */
 136:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_NO_ERROR = 0x0000U,
 137:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x10xx, Generic Error */
 138:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_GENERIC = 0x1000U,
 139:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x20xx, Current */
 140:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_CURRENT = 0x2000U,
 141:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x21xx, Current, device input side */
 142:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_CURRENT_INPUT = 0x2100U,
 143:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x22xx, Current inside the device */
 144:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_CURRENT_INSIDE = 0x2200U,
 145:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x23xx, Current, device output side */
 146:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_CURRENT_OUTPUT = 0x2300U,
 147:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x30xx, Voltage */
 148:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_VOLTAGE = 0x3000U,
 149:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x31xx, Mains Voltage */
 150:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_VOLTAGE_MAINS = 0x3100U,
 151:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x32xx, Voltage inside the device */
 152:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_VOLTAGE_INSIDE = 0x3200U,
 153:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x33xx, Output Voltage */
 154:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_VOLTAGE_OUTPUT = 0x3300U,
 155:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x40xx, Temperature */
 156:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_TEMPERATURE = 0x4000U,
 157:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x41xx, Ambient Temperature */
 158:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_TEMP_AMBIENT = 0x4100U,
 159:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x42xx, Device Temperature */
 160:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_TEMP_DEVICE = 0x4200U,
 161:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x50xx, Device Hardware */
 162:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_HARDWARE = 0x5000U,
 163:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x60xx, Device Software */
 164:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_SOFTWARE_DEVICE = 0x6000U,
 165:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x61xx, Internal Software */
 166:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_SOFTWARE_INTERNAL = 0x6100U,
 167:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x62xx, User Software */
 168:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_SOFTWARE_USER = 0x6200U,
 169:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x63xx, Data Set */
 170:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_DATA_SET = 0x6300U,
 171:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x70xx, Additional Modules */
 172:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_ADDITIONAL_MODUL = 0x7000U,
 173:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x80xx, Monitoring */
 174:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_MONITORING = 0x8000U,
 175:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x81xx, Communication */
 176:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_COMMUNICATION = 0x8100U,
 177:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x8110, CAN Overrun (Objects lost) */
 178:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_CAN_OVERRUN = 0x8110U,
 179:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x8120, CAN in Error Passive Mode */
 180:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_CAN_PASSIVE = 0x8120U,
 181:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x8130, Life Guard Error or Heartbeat Error */
 182:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_HEARTBEAT = 0x8130U,
 183:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x8140, recovered from bus off */
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 45


 184:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_BUS_OFF_RECOVERED = 0x8140U,
 185:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x8150, CAN-ID collision */
 186:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_CAN_ID_COLLISION = 0x8150U,
 187:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x82xx, Protocol Error */
 188:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_PROTOCOL_ERROR = 0x8200U,
 189:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x8210, PDO not processed due to length error */
 190:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_PDO_LENGTH = 0x8210U,
 191:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x8220, PDO length exceeded */
 192:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_PDO_LENGTH_EXC = 0x8220U,
 193:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x8230, DAM MPDO not processed, destination object not available */
 194:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_DAM_MPDO = 0x8230U,
 195:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x8240, Unexpected SYNC data length */
 196:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_SYNC_DATA_LENGTH = 0x8240U,
 197:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x8250, RPDO timeout */
 198:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_RPDO_TIMEOUT = 0x8250U,
 199:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x90xx, External Error */
 200:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_EXTERNAL_ERROR = 0x9000U,
 201:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0xF0xx, Additional Functions */
 202:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_ADDITIONAL_FUNC = 0xF000U,
 203:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0xFFxx, Device specific */
 204:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC_DEVICE_SPECIFIC = 0xFF00U,
 205:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 206:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x2310, DS401, Current at outputs too high (overload) */
 207:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC401_OUT_CUR_HI = 0x2310U,
 208:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x2320, DS401, Short circuit at outputs */
 209:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC401_OUT_SHORTED = 0x2320U,
 210:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x2330, DS401, Load dump at outputs */
 211:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC401_OUT_LOAD_DUMP = 0x2330U,
 212:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x3110, DS401, Input voltage too high */
 213:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC401_IN_VOLT_HI = 0x3110U,
 214:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x3120, DS401, Input voltage too low */
 215:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC401_IN_VOLT_LOW = 0x3120U,
 216:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x3210, DS401, Internal voltage too high */
 217:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC401_INTERN_VOLT_HI = 0x3210U,
 218:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x3220, DS401, Internal voltage too low */
 219:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC401_INTERN_VOLT_LO = 0x3220U,
 220:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x3310, DS401, Output voltage too high */
 221:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC401_OUT_VOLT_HIGH = 0x3310U,
 222:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x3320, DS401, Output voltage too low */
 223:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EMC401_OUT_VOLT_LOW = 0x3320U,
 224:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** } CO_EM_errorCode_t;
 225:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 226:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 227:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** /**
 228:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Error status bits
 229:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
 230:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Bits for internal indication of the error condition. Each error condition is
 231:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * specified by unique index from 0x00 up to 0xFF.
 232:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
 233:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * If specific error occurs in the stack or in the application, CO_errorReport()
 234:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * sets specific bit in the _errorStatusBit_ variable from @ref CO_EM_t. If bit
 235:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * was already set, function returns without any action. Otherwise it prepares
 236:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * emergency message.
 237:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
 238:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Maximum size (in bits) of the _errorStatusBit_ variable is specified by
 239:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @ref CO_CONFIG_EM_ERR_STATUS_BITS_COUNT (set to 10*8 bits by default). Stack
 240:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * uses first 6 bytes. Additional 4 bytes are pre-defined for manufacturer
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 46


 241:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * or device specific error indications, by default.
 242:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  */
 243:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** typedef enum {
 244:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x00, Error Reset or No Error */
 245:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_NO_ERROR                  = 0x00U,
 246:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x01, communication, info, CAN bus warning limit reached */
 247:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_CAN_BUS_WARNING           = 0x01U,
 248:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x02, communication, info, Wrong data length of the received CAN
 249:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****      * message */
 250:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_RXMSG_WRONG_LENGTH        = 0x02U,
 251:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x03, communication, info, Previous received CAN message wasn't
 252:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****      * processed yet */
 253:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_RXMSG_OVERFLOW            = 0x03U,
 254:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x04, communication, info, Wrong data length of received PDO */
 255:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_RPDO_WRONG_LENGTH         = 0x04U,
 256:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x05, communication, info, Previous received PDO wasn't processed yet */
 257:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_RPDO_OVERFLOW             = 0x05U,
 258:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x06, communication, info, CAN receive bus is passive */
 259:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_CAN_RX_BUS_PASSIVE        = 0x06U,
 260:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x07, communication, info, CAN transmit bus is passive */
 261:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_CAN_TX_BUS_PASSIVE        = 0x07U,
 262:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x08, communication, info, Wrong NMT command received */
 263:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_NMT_WRONG_COMMAND         = 0x08U,
 264:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x09, communication, info, TIME message timeout */
 265:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_TIME_TIMEOUT              = 0x09U,
 266:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x0A, communication, info, (unused) */
 267:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_0A_unused                 = 0x0AU,
 268:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x0B, communication, info, (unused) */
 269:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_0B_unused                 = 0x0BU,
 270:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x0C, communication, info, (unused) */
 271:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_0C_unused                 = 0x0CU,
 272:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x0D, communication, info, (unused) */
 273:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_0D_unused                 = 0x0DU,
 274:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x0E, communication, info, (unused) */
 275:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_0E_unused                 = 0x0EU,
 276:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x0F, communication, info, (unused) */
 277:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_0F_unused                 = 0x0FU,
 278:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 279:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x10, communication, critical, (unused) */
 280:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_10_unused                 = 0x10U,
 281:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x11, communication, critical, (unused) */
 282:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_11_unused                 = 0x11U,
 283:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x12, communication, critical, CAN transmit bus is off */
 284:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_CAN_TX_BUS_OFF            = 0x12U,
 285:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x13, communication, critical, CAN module receive buffer has
 286:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****      * overflowed */
 287:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_CAN_RXB_OVERFLOW          = 0x13U,
 288:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x14, communication, critical, CAN transmit buffer has overflowed */
 289:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_CAN_TX_OVERFLOW           = 0x14U,
 290:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x15, communication, critical, TPDO is outside SYNC window */
 291:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_TPDO_OUTSIDE_WINDOW       = 0x15U,
 292:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x16, communication, critical, (unused) */
 293:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_16_unused                 = 0x16U,
 294:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x17, communication, critical, RPDO message timeout */
 295:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_RPDO_TIME_OUT             = 0x17U,
 296:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x18, communication, critical, SYNC message timeout */
 297:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_SYNC_TIME_OUT             = 0x18U,
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 47


 298:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x19, communication, critical, Unexpected SYNC data length */
 299:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_SYNC_LENGTH               = 0x19U,
 300:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x1A, communication, critical, Error with PDO mapping */
 301:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_PDO_WRONG_MAPPING         = 0x1AU,
 302:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x1B, communication, critical, Heartbeat consumer timeout */
 303:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_HEARTBEAT_CONSUMER        = 0x1BU,
 304:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x1C, communication, critical, Heartbeat consumer detected remote node
 305:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****      * reset */
 306:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_HB_CONSUMER_REMOTE_RESET  = 0x1CU,
 307:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x1D, communication, critical, (unused) */
 308:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_1D_unused                 = 0x1DU,
 309:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x1E, communication, critical, (unused) */
 310:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_1E_unused                 = 0x1EU,
 311:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x1F, communication, critical, (unused) */
 312:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_1F_unused                 = 0x1FU,
 313:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 314:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x20, generic, info, Emergency buffer is full, Emergency message wasn't
 315:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****      * sent */
 316:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_EMERGENCY_BUFFER_FULL     = 0x20U,
 317:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x21, generic, info, (unused) */
 318:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_21_unused                 = 0x21U,
 319:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x22, generic, info, Microcontroller has just started */
 320:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_MICROCONTROLLER_RESET     = 0x22U,
 321:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x23, generic, info, (unused) */
 322:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_23_unused                 = 0x23U,
 323:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x24, generic, info, (unused) */
 324:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_24_unused                 = 0x24U,
 325:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x25, generic, info, (unused) */
 326:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_25_unused                 = 0x25U,
 327:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x26, generic, info, (unused) */
 328:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_26_unused                 = 0x26U,
 329:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x27, generic, info, Automatic store to non-volatile memory failed */
 330:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_NON_VOLATILE_AUTO_SAVE    = 0x27U,
 331:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 332:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x28, generic, critical, Wrong parameters to CO_errorReport() function*/
 333:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_WRONG_ERROR_REPORT        = 0x28U,
 334:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x29, generic, critical, Timer task has overflowed */
 335:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_ISR_TIMER_OVERFLOW        = 0x29U,
 336:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x2A, generic, critical, Unable to allocate memory for objects */
 337:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_MEMORY_ALLOCATION_ERROR   = 0x2AU,
 338:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x2B, generic, critical, Generic error, test usage */
 339:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_GENERIC_ERROR             = 0x2BU,
 340:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x2C, generic, critical, Software error */
 341:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_GENERIC_SOFTWARE_ERROR    = 0x2CU,
 342:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x2D, generic, critical, Object dictionary does not match the software*/
 343:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_INCONSISTENT_OBJECT_DICT  = 0x2DU,
 344:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x2E, generic, critical, Error in calculation of device parameters */
 345:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_CALCULATION_OF_PARAMETERS = 0x2EU,
 346:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x2F, generic, critical, Error with access to non volatile device memory
 347:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****      */
 348:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_NON_VOLATILE_MEMORY       = 0x2FU,
 349:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 350:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** 0x30+, manufacturer, info or critical, Error status buts, free to use by
 351:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****      * manufacturer. By default bits 0x30..0x3F are set as informational and
 352:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****      * bits 0x40..0x4F are set as critical. Manufacturer critical bits sets the
 353:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****      * error register, as specified by @ref CO_CONFIG_ERR_CONDITION_MANUFACTURER
 354:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****      */
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 48


 355:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_MANUFACTURER_START        = 0x30U,
 356:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** (@ref CO_CONFIG_EM_ERR_STATUS_BITS_COUNT - 1), largest value of the
 357:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****      * Error status bit. */
 358:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_MANUFACTURER_END          = CO_CONFIG_EM_ERR_STATUS_BITS_COUNT - 1
 359:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** } CO_EM_errorStatusBits_t;
 360:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 361:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 362:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 363:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #if ((CO_CONFIG_EM) & (CO_CONFIG_EM_PRODUCER | CO_CONFIG_EM_HISTORY)) \
 364:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     || defined CO_DOXYGEN
 365:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** /**
 366:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Fifo buffer for emergency producer and error history
 367:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  */
 368:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** typedef struct {
 369:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     uint32_t msg;
 370:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #if ((CO_CONFIG_EM) & CO_CONFIG_EM_PRODUCER) || defined CO_DOXYGEN
 371:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     uint32_t info;
 372:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #endif
 373:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** } CO_EM_fifo_t;
 374:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #endif
 375:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 376:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 377:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** /**
 378:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Emergency object.
 379:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  */
 380:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** typedef struct {
 381:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** Bitfield for the internal indication of the error condition. */
 382:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     uint8_t errorStatusBits[CO_CONFIG_EM_ERR_STATUS_BITS_COUNT / 8];
 383:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** Pointer to error register in object dictionary at 0x1001,00. */
 384:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     uint8_t *errorRegister;
 385:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** Old CAN error status bitfield */
 386:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     uint16_t CANerrorStatusOld;
 387:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** From CO_EM_init() */
 388:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_CANmodule_t *CANdevTx;
 389:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 390:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #if ((CO_CONFIG_EM) & (CO_CONFIG_EM_PRODUCER | CO_CONFIG_EM_HISTORY)) \
 391:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     || defined CO_DOXYGEN
 392:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** Internal circular FIFO buffer for storing pre-processed emergency
 393:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****      * messages. Messages are added by @ref CO_error() function. All messages
 394:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****      * are later post-processed by @ref CO_EM_process() function. In case of
 395:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****      * overflow, error is indicated but emergency message is not sent. Fifo is
 396:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****      * also used for error history, OD object 0x1003, "Pre-defined error field".
 397:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****      * Buffer is defined by @ref CO_EM_init(). */
 398:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_EM_fifo_t *fifo;
 399:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** Size of the above buffer, specified by @ref CO_EM_init(). */
 400:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     uint8_t fifoSize;
 401:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** Pointer for the fifo buffer, where next emergency message will be
 402:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****      * written by @ref CO_error() function. */
 403:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     uint8_t fifoWrPtr;
 404:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** Pointer for the fifo, where next emergency message has to be
 405:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****      * post-processed by @ref CO_EM_process() function. If equal to bufWrPtr,
 406:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****      * then all messages has been post-processed. */
 407:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     uint8_t fifoPpPtr;
 408:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** Indication of overflow - messages in buffer are not post-processed */
 409:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     uint8_t fifoOverflow;
 410:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** Count of emergency messages in fifo, used for OD object 0x1003 */
 411:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     uint8_t fifoCount;
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 49


 412:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #endif /* (CO_CONFIG_EM) & (CO_CONFIG_EM_PRODUCER | CO_CONFIG_EM_HISTORY) */
 413:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 414:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #if ((CO_CONFIG_EM) & CO_CONFIG_EM_PRODUCER) || defined CO_DOXYGEN
 415:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** True, if emergency producer is enabled, from Object dictionary */
 416:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     bool_t producerEnabled;
 417:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** Copy of CANopen node ID, from CO_EM_init() */
 418:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     uint8_t nodeId;
 419:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** CAN transmit buffer */
 420:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_CANtx_t *CANtxBuff;
 421:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** Extension for OD object */
 422:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     OD_extension_t OD_1014_extension;
 423:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  #if ((CO_CONFIG_EM) & CO_CONFIG_EM_PROD_CONFIGURABLE) || defined CO_DOXYGEN
 424:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** COB ID of emergency message, from Object dictionary */
 425:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     uint16_t producerCanId;
 426:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** From CO_EM_init() */
 427:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     uint16_t CANdevTxIdx;
 428:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  #endif
 429:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  #if ((CO_CONFIG_EM) & CO_CONFIG_EM_PROD_INHIBIT) || defined CO_DOXYGEN
 430:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****      /** Inhibit time for emergency message, from Object dictionary */
 431:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     uint32_t inhibitEmTime_us;
 432:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /**< Internal timer for inhibit time */
 433:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     uint32_t inhibitEmTimer;
 434:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** Extension for OD object */
 435:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     OD_extension_t OD_1015_extension;
 436:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  #endif
 437:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #endif /* (CO_CONFIG_EM) & CO_CONFIG_EM_PRODUCER */
 438:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 439:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #if ((CO_CONFIG_EM) & CO_CONFIG_EM_HISTORY) || defined CO_DOXYGEN
 440:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** Extension for OD object */
 441:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     OD_extension_t OD_1003_extension;
 442:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #endif
 443:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 444:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #if ((CO_CONFIG_EM) & CO_CONFIG_EM_STATUS_BITS) || defined CO_DOXYGEN
 445:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** Extension for OD object */
 446:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     OD_extension_t OD_statusBits_extension;
 447:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #endif
 448:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 449:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #if ((CO_CONFIG_EM) & CO_CONFIG_EM_CONSUMER) || defined CO_DOXYGEN
 450:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** From CO_EM_initCallbackRx() or NULL */
 451:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     void (*pFunctSignalRx)(const uint16_t ident,
 452:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                            const uint16_t errorCode,
 453:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                            const uint8_t errorRegister,
 454:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                            const uint8_t errorBit,
 455:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                            const uint32_t infoCode);
 456:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #endif
 457:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 458:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #if ((CO_CONFIG_EM) & CO_CONFIG_FLAG_CALLBACK_PRE) || defined CO_DOXYGEN
 459:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** From CO_EM_initCallbackPre() or NULL */
 460:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     void (*pFunctSignalPre)(void *object);
 461:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     /** From CO_EM_initCallbackPre() or NULL */
 462:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     void *functSignalObjectPre;
 463:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #endif
 464:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** } CO_EM_t;
 465:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 466:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 467:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** /**
 468:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Initialize Emergency object.
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 50


 469:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
 470:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Function must be called in the communication reset section.
 471:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
 472:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param em This object will be initialized.
 473:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param fifo Fifo buffer for emergency producer and error history. It must be
 474:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * defined externally. Its size must be capacity+1. See also @ref CO_EM_t, fifo.
 475:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param fifoSize Size of the above fifo buffer. It is usually equal to the
 476:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * length of the OD array 0x1003 + 1. If fifoSize is smaller than 2, then
 477:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * emergency producer and error history will not work and 'fifo' may be NULL.
 478:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param CANdevTx CAN device for Emergency transmission.
 479:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param OD_1001_errReg OD entry for 0x1001 - "Error register", entry is
 480:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * required, without IO extension.
 481:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param OD_1014_cobIdEm OD entry for 0x1014 - "COB-ID EMCY", entry is
 482:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * required, IO extension is required.
 483:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param CANdevTxIdx Index of transmit buffer in the above CAN device.
 484:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param OD_1015_InhTime OD entry for 0x1015 - "Inhibit time EMCY", entry is
 485:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * optional (can be NULL), IO extension is optional for runtime configuration.
 486:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param OD_1003_preDefErr OD entry for 0x1003 - "Pre-defined error field".
 487:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Emergency object has own memory buffer for this entry. Entry is optional,
 488:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * IO extension is required.
 489:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param OD_statusBits Custom OD entry for accessing errorStatusBits from
 490:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @ref CO_EM_t. Entry must have variable of size
 491:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * (CO_CONFIG_EM_ERR_STATUS_BITS_COUNT/8) bytes available for read/write access
 492:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * on subindex 0. Emergency object has own memory buffer for this entry. Entry
 493:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * is optional, IO extension is required.
 494:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param CANdevRx CAN device for Emergency consumer reception.
 495:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param CANdevRxIdx Index of receive buffer in the above CAN device.
 496:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param nodeId CANopen node ID of this device (for default emergency producer)
 497:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param [out] errInfo Additional information in case of error, may be NULL.
 498:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
 499:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @return @ref CO_ReturnError_t CO_ERROR_NO in case of success.
 500:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  */
 501:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** CO_ReturnError_t CO_EM_init(CO_EM_t *em,
 502:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                             CO_CANmodule_t *CANdevTx,
 503:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                             const OD_entry_t *OD_1001_errReg,
 504:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #if ((CO_CONFIG_EM) & (CO_CONFIG_EM_PRODUCER | CO_CONFIG_EM_HISTORY)) \
 505:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     || defined CO_DOXYGEN
 506:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                             CO_EM_fifo_t *fifo,
 507:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                             uint8_t fifoSize,
 508:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #endif
 509:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #if ((CO_CONFIG_EM) & CO_CONFIG_EM_PRODUCER) || defined CO_DOXYGEN
 510:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                             OD_entry_t *OD_1014_cobIdEm,
 511:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                             uint16_t CANdevTxIdx,
 512:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  #if ((CO_CONFIG_EM) & CO_CONFIG_EM_PROD_INHIBIT) || defined CO_DOXYGEN
 513:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                             OD_entry_t *OD_1015_InhTime,
 514:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  #endif
 515:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #endif
 516:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #if ((CO_CONFIG_EM) & CO_CONFIG_EM_HISTORY) || defined CO_DOXYGEN
 517:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                             OD_entry_t *OD_1003_preDefErr,
 518:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #endif
 519:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #if ((CO_CONFIG_EM) & CO_CONFIG_EM_STATUS_BITS) || defined CO_DOXYGEN
 520:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                             OD_entry_t *OD_statusBits,
 521:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #endif
 522:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #if ((CO_CONFIG_EM) & CO_CONFIG_EM_CONSUMER) || defined CO_DOXYGEN
 523:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                             CO_CANmodule_t *CANdevRx,
 524:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                             uint16_t CANdevRxIdx,
 525:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #endif
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 51


 526:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                             const uint8_t nodeId,
 527:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                             uint32_t *errInfo);
 528:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 529:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 530:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #if ((CO_CONFIG_EM) & CO_CONFIG_FLAG_CALLBACK_PRE) || defined CO_DOXYGEN
 531:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** /**
 532:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Initialize Emergency callback function.
 533:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
 534:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Function initializes optional callback function, which should immediately
 535:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * start processing of CO_EM_process() function.
 536:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Callback is called from CO_errorReport() or CO_errorReset() function. Those
 537:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * functions are fast and may be called from any thread. Callback should
 538:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * immediately start mainline thread, which calls CO_EM_process() function.
 539:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
 540:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param em This object.
 541:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param object Pointer to object, which will be passed to pFunctSignal(). Can
 542:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * be NULL
 543:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param pFunctSignal Pointer to the callback function. Not called if NULL.
 544:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  */
 545:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** void CO_EM_initCallbackPre(CO_EM_t *em,
 546:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                            void *object,
 547:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                            void (*pFunctSignal)(void *object));
 548:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #endif
 549:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 550:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 551:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #if ((CO_CONFIG_EM) & CO_CONFIG_EM_CONSUMER) || defined CO_DOXYGEN
 552:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** /**
 553:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Initialize Emergency received callback function.
 554:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
 555:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Function initializes optional callback function, which executes after
 556:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * error condition is received.
 557:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
 558:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * _ident_ argument from callback contains CAN-ID of the emergency message. If
 559:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * _ident_ == 0, then emergency message was sent from this device.
 560:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
 561:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @remark Depending on the CAN driver implementation, this function is called
 562:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * inside an ISR or inside a mainline. Must be thread safe.
 563:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
 564:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param em This object.
 565:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param pFunctSignalRx Pointer to the callback function. Not called if NULL.
 566:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  */
 567:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** void CO_EM_initCallbackRx(CO_EM_t *em,
 568:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                           void (*pFunctSignalRx)(const uint16_t ident,
 569:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                                                  const uint16_t errorCode,
 570:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                                                  const uint8_t errorRegister,
 571:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                                                  const uint8_t errorBit,
 572:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                                                  const uint32_t infoCode));
 573:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #endif
 574:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 575:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 576:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** /**
 577:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Process Error control and Emergency object.
 578:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
 579:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Function must be called cyclically. It verifies some communication errors,
 580:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * calculates OD object 0x1001 - "Error register" and sends emergency message
 581:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * if necessary.
 582:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 52


 583:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param em This object.
 584:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param NMTisPreOrOperational True if this node is NMT_PRE_OPERATIONAL or
 585:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * NMT_OPERATIONAL state.
 586:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param timeDifference_us Time difference from previous function call in
 587:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * [microseconds].
 588:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param [out] timerNext_us info to OS - see CO_process().
 589:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  */
 590:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** void CO_EM_process(CO_EM_t *em,
 591:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                    bool_t NMTisPreOrOperational,
 592:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                    uint32_t timeDifference_us,
 593:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****                    uint32_t *timerNext_us);
 594:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 595:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 596:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** /**
 597:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Set or reset error condition.
 598:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
 599:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Function can be called on any error condition inside CANopen stack or
 600:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * application. Function first checks change of error condition (setError is
 601:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * true and error bit wasn't set or setError is false and error bit was set
 602:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * before). If changed, then Emergency message is prepared and record in history
 603:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * is added. Emergency message is later sent by CO_EM_process() function.
 604:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
 605:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Function is short and thread safe.
 606:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
 607:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param em Emergency object.
 608:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param setError True if error occurred or false if error resolved.
 609:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param errorBit from @ref CO_EM_errorStatusBits_t.
 610:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param errorCode from @ref CO_EM_errorCode_t.
 611:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param infoCode 32 bit value is passed to bytes 4...7 of the Emergency
 612:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * message. It contains optional additional information.
 613:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  */
 614:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** void CO_error(CO_EM_t *em, bool_t setError, const uint8_t errorBit,
 615:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****               uint16_t errorCode, uint32_t infoCode);
 616:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 617:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 618:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** /**
 619:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Report error condition, for description of parameters see @ref CO_error.
 620:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  */
 621:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #define CO_errorReport(em, errorBit, errorCode, infoCode) \
 622:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_error(em, true, errorBit, errorCode, infoCode)
 623:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 624:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 625:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** /**
 626:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Reset error condition, for description of parameters see @ref CO_error.
 627:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  */
 628:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** #define CO_errorReset(em, errorBit, infoCode) \
 629:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     CO_error(em, false, errorBit, CO_EMC_NO_ERROR, infoCode)
 630:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 631:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 632:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** /**
 633:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Check specific error condition.
 634:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
 635:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Function returns true, if specific internal error is present.
 636:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
 637:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param em Emergency object.
 638:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param errorBit from @ref CO_EM_errorStatusBits_t.
 639:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 53


 640:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @return true if Error is present.
 641:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  */
 642:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** static inline bool_t CO_isError(CO_EM_t *em, const uint8_t errorBit) {
 596              		.loc 4 642 22 is_stmt 1 discriminator 1 view .LVU186
 597              	.LBB27:
 643:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     uint8_t index = errorBit >> 3;
 598              		.loc 4 643 5 discriminator 1 view .LVU187
 644:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     uint8_t bitmask = 1 << (errorBit & 0x7);
 599              		.loc 4 644 5 discriminator 1 view .LVU188
 645:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 646:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     return (em == NULL || index >= (CO_CONFIG_EM_ERR_STATUS_BITS_COUNT / 8)
 600              		.loc 4 646 5 discriminator 1 view .LVU189
 647:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****             || (em->errorStatusBits[index] & bitmask) != 0) ? true : false;
 601              		.loc 4 647 68 is_stmt 0 discriminator 1 view .LVU190
 602 007c 32B3     		cbz	r2, .L55
 603              		.loc 4 647 36 view .LVU191
 604 007e 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 605              		.loc 4 647 68 view .LVU192
 606 0080 11F0040F 		tst	r1, #4
 607 0084 24D1     		bne	.L56
 608              	.LVL53:
 609              		.loc 4 647 68 view .LVU193
 610              	.LBE27:
 611              	.LBE26:
 612              	.LBB28:
 613              	.LBI28:
 642:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     uint8_t index = errorBit >> 3;
 614              		.loc 4 642 22 is_stmt 1 view .LVU194
 615              	.LBB29:
 643:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     uint8_t bitmask = 1 << (errorBit & 0x7);
 616              		.loc 4 643 5 view .LVU195
 644:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 617              		.loc 4 644 5 view .LVU196
 646:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****             || (em->errorStatusBits[index] & bitmask) != 0) ? true : false;
 618              		.loc 4 646 5 view .LVU197
 619              		.loc 4 647 36 is_stmt 0 view .LVU198
 620 0086 D278     		ldrb	r2, [r2, #3]	@ zero_extendqisi2
 621              	.LVL54:
 622              		.loc 4 647 68 view .LVU199
 623 0088 12F0080F 		tst	r2, #8
 624 008c 22D1     		bne	.L57
 625              	.LVL55:
 626              		.loc 4 647 68 view .LVU200
 627              	.LBE29:
 628              	.LBE28:
 629              	.LBB30:
 630              	.LBI30:
 642:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     uint8_t index = errorBit >> 3;
 631              		.loc 4 642 22 is_stmt 1 view .LVU201
 632              	.LBB31:
 643:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     uint8_t bitmask = 1 << (errorBit & 0x7);
 633              		.loc 4 643 5 view .LVU202
 644:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 634              		.loc 4 644 5 view .LVU203
 646:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****             || (em->errorStatusBits[index] & bitmask) != 0) ? true : false;
 635              		.loc 4 646 5 view .LVU204
 636              		.loc 4 647 68 is_stmt 0 view .LVU205
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 54


 637 008e 12F0100F 		tst	r2, #16
 638 0092 21D1     		bne	.L58
 639              	.LBE31:
 640              	.LBE30:
 641              		.loc 1 286 21 view .LVU206
 642 0094 0022     		movs	r2, #0
 643 0096 0CE0     		b	.L40
 644              	.LVL56:
 645              	.L49:
 228:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     bool_t NNTinit = NMTstateCpy == CO_NMT_INITIALIZING;
 646              		.loc 1 228 24 view .LVU207
 647 0098 0020     		movs	r0, #0
 270:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                 break;
 648              		.loc 1 270 29 view .LVU208
 649 009a 7F25     		movs	r5, #127
 650              	.LVL57:
 270:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                 break;
 651              		.loc 1 270 29 view .LVU209
 652 009c E7E7     		b	.L38
 653              	.LVL58:
 654              	.L50:
 228:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     bool_t NNTinit = NMTstateCpy == CO_NMT_INITIALIZING;
 655              		.loc 1 228 24 view .LVU210
 656 009e 0020     		movs	r0, #0
 264:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                 break;
 657              		.loc 1 264 29 view .LVU211
 658 00a0 0525     		movs	r5, #5
 659              	.LVL59:
 264:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                 break;
 660              		.loc 1 264 29 view .LVU212
 661 00a2 E4E7     		b	.L38
 662              	.LVL60:
 663              	.L51:
 262:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             case CO_NMT_ENTER_OPERATIONAL:
 664              		.loc 1 262 9 view .LVU213
 665 00a4 0020     		movs	r0, #0
 666 00a6 E2E7     		b	.L38
 667              	.L52:
 273:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                 break;
 668              		.loc 1 273 30 view .LVU214
 669 00a8 0220     		movs	r0, #2
 670 00aa E0E7     		b	.L38
 671              	.L53:
 262:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             case CO_NMT_ENTER_OPERATIONAL:
 672              		.loc 1 262 9 view .LVU215
 673 00ac 0020     		movs	r0, #0
 674 00ae DEE7     		b	.L38
 675              	.LVL61:
 676              	.L54:
 677              		.loc 1 286 21 view .LVU216
 678 00b0 0022     		movs	r2, #0
 679              	.L40:
 285:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                     && (CO_isError(NMT->em, CO_EM_CAN_TX_BUS_OFF)
 680              		.loc 1 285 12 view .LVU217
 681 00b2 1146     		mov	r1, r2
 682              	.LVL62:
 287:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                         || CO_isError(NMT->em, CO_EM_HEARTBEAT_CONSUMER)
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 55


 288:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                         || CO_isError(NMT->em, CO_EM_HB_CONSUMER_REMOTE_RESET));
 289:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     bool_t errRegMasked = (NMT->NMTcontrol & CO_NMT_ERR_ON_ERR_REG) != 0
 683              		.loc 1 289 5 is_stmt 1 view .LVU218
 290:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                     && (CO_getErrorRegister(NMT->em) & NMT->NMTcontrol) != 0;
 684              		.loc 1 290 21 is_stmt 0 view .LVU219
 685 00b4 13F4005F 		tst	r3, #8192
 686 00b8 14D0     		beq	.L59
 687              		.loc 1 290 25 discriminator 1 view .LVU220
 688 00ba 226A     		ldr	r2, [r4, #32]
 689              	.LVL63:
 690              	.LBB32:
 691              	.LBI32:
 648:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** }
 649:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** 
 650:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** /**
 651:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * Get error register
 652:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
 653:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @param em Emergency object.
 654:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  *
 655:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  * @return Error register or 0 if doesn't exist.
 656:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****  */
 657:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h **** static inline uint8_t CO_getErrorRegister(CO_EM_t *em) {
 692              		.loc 4 657 23 is_stmt 1 discriminator 1 view .LVU221
 693              	.LBB33:
 658:Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h ****     return (em == NULL || em->errorRegister == NULL) ? 0 : *em->errorRegister;
 694              		.loc 4 658 5 discriminator 1 view .LVU222
 695              		.loc 4 658 58 is_stmt 0 discriminator 1 view .LVU223
 696 00bc 72B1     		cbz	r2, .L60
 697              		.loc 4 658 29 view .LVU224
 698 00be D268     		ldr	r2, [r2, #12]
 699              	.LVL64:
 700              		.loc 4 658 24 view .LVU225
 701 00c0 72B1     		cbz	r2, .L61
 702              		.loc 4 658 58 view .LVU226
 703 00c2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 704              	.L42:
 705              	.LVL65:
 706              		.loc 4 658 58 view .LVU227
 707              	.LBE33:
 708              	.LBE32:
 709              		.loc 1 290 21 view .LVU228
 710 00c4 1A40     		ands	r2, r3, r2
 711 00c6 0ED0     		beq	.L41
 712 00c8 0122     		movs	r2, #1
 713 00ca 0CE0     		b	.L41
 714              	.LVL66:
 715              	.L55:
 286:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                         || CO_isError(NMT->em, CO_EM_HEARTBEAT_CONSUMER)
 716              		.loc 1 286 21 view .LVU229
 717 00cc 0122     		movs	r2, #1
 718              	.LVL67:
 286:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                         || CO_isError(NMT->em, CO_EM_HEARTBEAT_CONSUMER)
 719              		.loc 1 286 21 view .LVU230
 720 00ce F0E7     		b	.L40
 721              	.LVL68:
 722              	.L56:
 286:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                         || CO_isError(NMT->em, CO_EM_HEARTBEAT_CONSUMER)
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 56


 723              		.loc 1 286 21 view .LVU231
 724 00d0 0122     		movs	r2, #1
 725              	.LVL69:
 286:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                         || CO_isError(NMT->em, CO_EM_HEARTBEAT_CONSUMER)
 726              		.loc 1 286 21 view .LVU232
 727 00d2 EEE7     		b	.L40
 728              	.LVL70:
 729              	.L57:
 286:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                         || CO_isError(NMT->em, CO_EM_HEARTBEAT_CONSUMER)
 730              		.loc 1 286 21 view .LVU233
 731 00d4 0122     		movs	r2, #1
 732 00d6 ECE7     		b	.L40
 733              	.LVL71:
 734              	.L58:
 286:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                         || CO_isError(NMT->em, CO_EM_HEARTBEAT_CONSUMER)
 735              		.loc 1 286 21 view .LVU234
 736 00d8 0122     		movs	r2, #1
 737 00da EAE7     		b	.L40
 738              	.LVL72:
 739              	.L60:
 740              	.LBB35:
 741              	.LBB34:
 742              		.loc 4 658 58 view .LVU235
 743 00dc 0022     		movs	r2, #0
 744              	.LVL73:
 745              		.loc 4 658 58 view .LVU236
 746 00de F1E7     		b	.L42
 747              	.L61:
 748 00e0 0022     		movs	r2, #0
 749 00e2 EFE7     		b	.L42
 750              	.LVL74:
 751              	.L59:
 752              		.loc 4 658 58 view .LVU237
 753              	.LBE34:
 754              	.LBE35:
 755              		.loc 1 290 21 view .LVU238
 756 00e4 0022     		movs	r2, #0
 757              	.L41:
 758              	.LVL75:
 291:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
 292:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     if (NMTstateCpy == CO_NMT_OPERATIONAL && (busOff_HB || errRegMasked)) {
 759              		.loc 1 292 5 is_stmt 1 view .LVU239
 760              		.loc 1 292 8 is_stmt 0 view .LVU240
 761 00e6 052D     		cmp	r5, #5
 762 00e8 06D0     		beq	.L66
 763              	.L43:
 293:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         NMTstateCpy = (NMT->NMTcontrol & CO_NMT_ERR_TO_STOPPED) != 0
 294:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                     ? CO_NMT_STOPPED : CO_NMT_PRE_OPERATIONAL;
 295:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 296:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     else if ((NMT->NMTcontrol & CO_NMT_ERR_FREE_TO_OPERATIONAL) != 0
 764              		.loc 1 296 10 is_stmt 1 view .LVU241
 765              		.loc 1 296 13 is_stmt 0 view .LVU242
 766 00ea 13F4004F 		tst	r3, #32768
 767 00ee 0BD1     		bne	.L67
 768              	.LVL76:
 769              	.L45:
 297:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         && NMTstateCpy == CO_NMT_PRE_OPERATIONAL && !busOff_HB && !errRegMasked
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 57


 298:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     ) {
 299:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         NMTstateCpy = CO_NMT_OPERATIONAL;
 300:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 301:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
 302:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** #if (CO_CONFIG_NMT) & CO_CONFIG_NMT_CALLBACK_CHANGE
 303:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     /* Notify operating state change */
 304:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     if (NMT->operatingStatePrev != NMTstateCpy || NNTinit) {
 305:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         if (NMT->pFunctNMT != NULL) {
 306:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             NMT->pFunctNMT(NMTstateCpy);
 307:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         }
 308:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 309:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** #endif
 310:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
 311:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** #if (CO_CONFIG_NMT) & CO_CONFIG_FLAG_TIMERNEXT
 312:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     /* Calculate, when next Heartbeat needs to be send */
 313:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     if (NMT->HBproducerTime_us != 0 && timerNext_us != NULL) {
 314:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         if (NMT->operatingStatePrev != NMTstateCpy) {
 315:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             *timerNext_us = 0;
 316:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         }
 317:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         else if (*timerNext_us > NMT->HBproducerTimer) {
 318:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****             *timerNext_us = NMT->HBproducerTimer;
 319:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         }
 320:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 321:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** #endif
 322:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
 323:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     NMT->operatingState = NMTstateCpy;
 770              		.loc 1 323 5 is_stmt 1 view .LVU243
 771              		.loc 1 323 25 is_stmt 0 view .LVU244
 772 00f0 2570     		strb	r5, [r4]
 324:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     if (NMTstate != NULL) *NMTstate = NMTstateCpy;
 773              		.loc 1 324 5 is_stmt 1 view .LVU245
 774              		.loc 1 324 8 is_stmt 0 view .LVU246
 775 00f2 06B1     		cbz	r6, .L46
 776              		.loc 1 324 27 is_stmt 1 discriminator 1 view .LVU247
 777              		.loc 1 324 37 is_stmt 0 discriminator 1 view .LVU248
 778 00f4 3570     		strb	r5, [r6]
 779              	.L46:
 325:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** 
 326:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     return resetCommand;
 780              		.loc 1 326 5 is_stmt 1 view .LVU249
 327:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c **** }
 781              		.loc 1 327 1 is_stmt 0 view .LVU250
 782 00f6 70BD     		pop	{r4, r5, r6, pc}
 783              	.LVL77:
 784              	.L66:
 292:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         NMTstateCpy = (NMT->NMTcontrol & CO_NMT_ERR_TO_STOPPED) != 0
 785              		.loc 1 292 43 discriminator 1 view .LVU251
 786 00f8 09B9     		cbnz	r1, .L44
 292:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****         NMTstateCpy = (NMT->NMTcontrol & CO_NMT_ERR_TO_STOPPED) != 0
 787              		.loc 1 292 57 discriminator 2 view .LVU252
 788 00fa 002A     		cmp	r2, #0
 789 00fc F5D0     		beq	.L43
 790              	.L44:
 293:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****                     ? CO_NMT_STOPPED : CO_NMT_PRE_OPERATIONAL;
 791              		.loc 1 293 9 is_stmt 1 view .LVU253
 294:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 792              		.loc 1 294 38 is_stmt 0 view .LVU254
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 58


 793 00fe 13F4804F 		tst	r3, #16384
 794 0102 09D0     		beq	.L62
 795 0104 0425     		movs	r5, #4
 796              	.LVL78:
 294:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 797              		.loc 1 294 38 view .LVU255
 798 0106 F3E7     		b	.L45
 799              	.LVL79:
 800              	.L67:
 297:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     ) {
 801              		.loc 1 297 9 view .LVU256
 802 0108 7F2D     		cmp	r5, #127
 803 010a F1D1     		bne	.L45
 297:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     ) {
 804              		.loc 1 297 50 discriminator 1 view .LVU257
 805 010c 0029     		cmp	r1, #0
 806 010e EFD1     		bne	.L45
 297:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     ) {
 807              		.loc 1 297 64 discriminator 2 view .LVU258
 808 0110 002A     		cmp	r2, #0
 809 0112 EDD1     		bne	.L45
 299:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 810              		.loc 1 299 21 view .LVU259
 811 0114 0525     		movs	r5, #5
 812              	.LVL80:
 299:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 813              		.loc 1 299 21 view .LVU260
 814 0116 EBE7     		b	.L45
 815              	.LVL81:
 816              	.L62:
 294:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 817              		.loc 1 294 38 view .LVU261
 818 0118 7F25     		movs	r5, #127
 819              	.LVL82:
 294:Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.c ****     }
 820              		.loc 1 294 38 view .LVU262
 821 011a E9E7     		b	.L45
 822              		.cfi_endproc
 823              	.LFE163:
 825              		.text
 826              	.Letext0:
 827              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 828              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 829              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 830              		.file 8 "Middlewares/Third_Party/CANopenNode_STM32/CO_driver_target.h"
 831              		.file 9 "Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.h"
 832              		.file 10 "<built-in>"
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccMbI05b.s 			page 59


DEFINED SYMBOLS
                            *ABS*:00000000 CO_NMT_Heartbeat.c
C:\Users\walker\AppData\Local\Temp\ccMbI05b.s:20     .text.CO_NMT_receive:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccMbI05b.s:25     .text.CO_NMT_receive:00000000 CO_NMT_receive
C:\Users\walker\AppData\Local\Temp\ccMbI05b.s:77     .text.OD_write_1017:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccMbI05b.s:82     .text.OD_write_1017:00000000 OD_write_1017
C:\Users\walker\AppData\Local\Temp\ccMbI05b.s:169    .text.CO_NMT_init:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccMbI05b.s:175    .text.CO_NMT_init:00000000 CO_NMT_init
C:\Users\walker\AppData\Local\Temp\ccMbI05b.s:434    .text.CO_NMT_init:00000108 $d
C:\Users\walker\AppData\Local\Temp\ccMbI05b.s:441    .text.CO_NMT_process:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccMbI05b.s:447    .text.CO_NMT_process:00000000 CO_NMT_process

UNDEFINED SYMBOLS
OD_writeOriginal
memset
OD_get_value
CO_CANrxBufferInit
CO_CANtxBufferInit
OD_readOriginal
CO_CANsend
