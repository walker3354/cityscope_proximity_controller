ARM GAS  C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f3xx_it.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NMI_Handler,"ax",%progbits
  20              		.align	1
  21              		.global	NMI_Handler
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	NMI_Handler:
  27              	.LFB123:
  28              		.file 1 "Core/Src/stm32f3xx_it.c"
   1:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f3xx_it.c **** /**
   3:Core/Src/stm32f3xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32f3xx_it.c ****   * @file    stm32f3xx_it.c
   5:Core/Src/stm32f3xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32f3xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32f3xx_it.c ****   * @attention
   8:Core/Src/stm32f3xx_it.c ****   *
   9:Core/Src/stm32f3xx_it.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/stm32f3xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32f3xx_it.c ****   *
  12:Core/Src/stm32f3xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32f3xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32f3xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32f3xx_it.c ****   *
  16:Core/Src/stm32f3xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32f3xx_it.c ****   */
  18:Core/Src/stm32f3xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32f3xx_it.c **** 
  20:Core/Src/stm32f3xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32f3xx_it.c **** #include "main.h"
  22:Core/Src/stm32f3xx_it.c **** #include "stm32f3xx_it.h"
  23:Core/Src/stm32f3xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32f3xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32f3xx_it.c **** 
  27:Core/Src/stm32f3xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32f3xx_it.c **** 
  30:Core/Src/stm32f3xx_it.c **** /* USER CODE END TD */
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s 			page 2


  31:Core/Src/stm32f3xx_it.c **** 
  32:Core/Src/stm32f3xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32f3xx_it.c **** 
  35:Core/Src/stm32f3xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32f3xx_it.c **** 
  37:Core/Src/stm32f3xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32f3xx_it.c **** 
  40:Core/Src/stm32f3xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32f3xx_it.c **** 
  42:Core/Src/stm32f3xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32f3xx_it.c **** 
  45:Core/Src/stm32f3xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32f3xx_it.c **** 
  47:Core/Src/stm32f3xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32f3xx_it.c **** 
  50:Core/Src/stm32f3xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32f3xx_it.c **** 
  52:Core/Src/stm32f3xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32f3xx_it.c **** 
  55:Core/Src/stm32f3xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32f3xx_it.c **** 
  57:Core/Src/stm32f3xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32f3xx_it.c **** extern CAN_HandleTypeDef hcan;
  59:Core/Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim2;
  60:Core/Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim17;
  61:Core/Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim1;
  62:Core/Src/stm32f3xx_it.c **** 
  63:Core/Src/stm32f3xx_it.c **** /* USER CODE BEGIN EV */
  64:Core/Src/stm32f3xx_it.c **** 
  65:Core/Src/stm32f3xx_it.c **** /* USER CODE END EV */
  66:Core/Src/stm32f3xx_it.c **** 
  67:Core/Src/stm32f3xx_it.c **** /******************************************************************************/
  68:Core/Src/stm32f3xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */
  69:Core/Src/stm32f3xx_it.c **** /******************************************************************************/
  70:Core/Src/stm32f3xx_it.c **** /**
  71:Core/Src/stm32f3xx_it.c ****   * @brief This function handles Non maskable interrupt.
  72:Core/Src/stm32f3xx_it.c ****   */
  73:Core/Src/stm32f3xx_it.c **** void NMI_Handler(void)
  74:Core/Src/stm32f3xx_it.c **** {
  29              		.loc 1 74 1 view -0
  30              		.cfi_startproc
  31              		@ Volatile: function does not return.
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.L2:
  75:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  76:Core/Src/stm32f3xx_it.c **** 
  77:Core/Src/stm32f3xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  78:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  79:Core/Src/stm32f3xx_it.c ****   while (1)
  36              		.loc 1 79 3 discriminator 1 view .LVU1
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s 			page 3


  80:Core/Src/stm32f3xx_it.c ****   {
  81:Core/Src/stm32f3xx_it.c ****   }
  37              		.loc 1 81 3 discriminator 1 view .LVU2
  79:Core/Src/stm32f3xx_it.c ****   {
  38              		.loc 1 79 9 discriminator 1 view .LVU3
  39 0000 FEE7     		b	.L2
  40              		.cfi_endproc
  41              	.LFE123:
  43              		.section	.text.HardFault_Handler,"ax",%progbits
  44              		.align	1
  45              		.global	HardFault_Handler
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	HardFault_Handler:
  51              	.LFB124:
  82:Core/Src/stm32f3xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  83:Core/Src/stm32f3xx_it.c **** }
  84:Core/Src/stm32f3xx_it.c **** 
  85:Core/Src/stm32f3xx_it.c **** /**
  86:Core/Src/stm32f3xx_it.c ****   * @brief This function handles Hard fault interrupt.
  87:Core/Src/stm32f3xx_it.c ****   */
  88:Core/Src/stm32f3xx_it.c **** void HardFault_Handler(void)
  89:Core/Src/stm32f3xx_it.c **** {
  52              		.loc 1 89 1 view -0
  53              		.cfi_startproc
  54              		@ Volatile: function does not return.
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.L4:
  90:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  91:Core/Src/stm32f3xx_it.c **** 
  92:Core/Src/stm32f3xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  93:Core/Src/stm32f3xx_it.c ****   while (1)
  59              		.loc 1 93 3 discriminator 1 view .LVU5
  94:Core/Src/stm32f3xx_it.c ****   {
  95:Core/Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  96:Core/Src/stm32f3xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  97:Core/Src/stm32f3xx_it.c ****   }
  60              		.loc 1 97 3 discriminator 1 view .LVU6
  93:Core/Src/stm32f3xx_it.c ****   {
  61              		.loc 1 93 9 discriminator 1 view .LVU7
  62 0000 FEE7     		b	.L4
  63              		.cfi_endproc
  64              	.LFE124:
  66              		.section	.text.MemManage_Handler,"ax",%progbits
  67              		.align	1
  68              		.global	MemManage_Handler
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  73              	MemManage_Handler:
  74              	.LFB125:
  98:Core/Src/stm32f3xx_it.c **** }
  99:Core/Src/stm32f3xx_it.c **** 
 100:Core/Src/stm32f3xx_it.c **** /**
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s 			page 4


 101:Core/Src/stm32f3xx_it.c ****   * @brief This function handles Memory management fault.
 102:Core/Src/stm32f3xx_it.c ****   */
 103:Core/Src/stm32f3xx_it.c **** void MemManage_Handler(void)
 104:Core/Src/stm32f3xx_it.c **** {
  75              		.loc 1 104 1 view -0
  76              		.cfi_startproc
  77              		@ Volatile: function does not return.
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		@ link register save eliminated.
  81              	.L6:
 105:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 106:Core/Src/stm32f3xx_it.c **** 
 107:Core/Src/stm32f3xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 108:Core/Src/stm32f3xx_it.c ****   while (1)
  82              		.loc 1 108 3 discriminator 1 view .LVU9
 109:Core/Src/stm32f3xx_it.c ****   {
 110:Core/Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 111:Core/Src/stm32f3xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 112:Core/Src/stm32f3xx_it.c ****   }
  83              		.loc 1 112 3 discriminator 1 view .LVU10
 108:Core/Src/stm32f3xx_it.c ****   {
  84              		.loc 1 108 9 discriminator 1 view .LVU11
  85 0000 FEE7     		b	.L6
  86              		.cfi_endproc
  87              	.LFE125:
  89              		.section	.text.BusFault_Handler,"ax",%progbits
  90              		.align	1
  91              		.global	BusFault_Handler
  92              		.syntax unified
  93              		.thumb
  94              		.thumb_func
  96              	BusFault_Handler:
  97              	.LFB126:
 113:Core/Src/stm32f3xx_it.c **** }
 114:Core/Src/stm32f3xx_it.c **** 
 115:Core/Src/stm32f3xx_it.c **** /**
 116:Core/Src/stm32f3xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 117:Core/Src/stm32f3xx_it.c ****   */
 118:Core/Src/stm32f3xx_it.c **** void BusFault_Handler(void)
 119:Core/Src/stm32f3xx_it.c **** {
  98              		.loc 1 119 1 view -0
  99              		.cfi_startproc
 100              		@ Volatile: function does not return.
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104              	.L8:
 120:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 121:Core/Src/stm32f3xx_it.c **** 
 122:Core/Src/stm32f3xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 123:Core/Src/stm32f3xx_it.c ****   while (1)
 105              		.loc 1 123 3 discriminator 1 view .LVU13
 124:Core/Src/stm32f3xx_it.c ****   {
 125:Core/Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 126:Core/Src/stm32f3xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 127:Core/Src/stm32f3xx_it.c ****   }
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s 			page 5


 106              		.loc 1 127 3 discriminator 1 view .LVU14
 123:Core/Src/stm32f3xx_it.c ****   {
 107              		.loc 1 123 9 discriminator 1 view .LVU15
 108 0000 FEE7     		b	.L8
 109              		.cfi_endproc
 110              	.LFE126:
 112              		.section	.text.UsageFault_Handler,"ax",%progbits
 113              		.align	1
 114              		.global	UsageFault_Handler
 115              		.syntax unified
 116              		.thumb
 117              		.thumb_func
 119              	UsageFault_Handler:
 120              	.LFB127:
 128:Core/Src/stm32f3xx_it.c **** }
 129:Core/Src/stm32f3xx_it.c **** 
 130:Core/Src/stm32f3xx_it.c **** /**
 131:Core/Src/stm32f3xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 132:Core/Src/stm32f3xx_it.c ****   */
 133:Core/Src/stm32f3xx_it.c **** void UsageFault_Handler(void)
 134:Core/Src/stm32f3xx_it.c **** {
 121              		.loc 1 134 1 view -0
 122              		.cfi_startproc
 123              		@ Volatile: function does not return.
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              		@ link register save eliminated.
 127              	.L10:
 135:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 136:Core/Src/stm32f3xx_it.c **** 
 137:Core/Src/stm32f3xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 138:Core/Src/stm32f3xx_it.c ****   while (1)
 128              		.loc 1 138 3 discriminator 1 view .LVU17
 139:Core/Src/stm32f3xx_it.c ****   {
 140:Core/Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 141:Core/Src/stm32f3xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 142:Core/Src/stm32f3xx_it.c ****   }
 129              		.loc 1 142 3 discriminator 1 view .LVU18
 138:Core/Src/stm32f3xx_it.c ****   {
 130              		.loc 1 138 9 discriminator 1 view .LVU19
 131 0000 FEE7     		b	.L10
 132              		.cfi_endproc
 133              	.LFE127:
 135              		.section	.text.DebugMon_Handler,"ax",%progbits
 136              		.align	1
 137              		.global	DebugMon_Handler
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	DebugMon_Handler:
 143              	.LFB128:
 143:Core/Src/stm32f3xx_it.c **** }
 144:Core/Src/stm32f3xx_it.c **** 
 145:Core/Src/stm32f3xx_it.c **** /**
 146:Core/Src/stm32f3xx_it.c ****   * @brief This function handles Debug monitor.
 147:Core/Src/stm32f3xx_it.c ****   */
 148:Core/Src/stm32f3xx_it.c **** void DebugMon_Handler(void)
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s 			page 6


 149:Core/Src/stm32f3xx_it.c **** {
 144              		.loc 1 149 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 150:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 151:Core/Src/stm32f3xx_it.c **** 
 152:Core/Src/stm32f3xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 153:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 154:Core/Src/stm32f3xx_it.c **** 
 155:Core/Src/stm32f3xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 156:Core/Src/stm32f3xx_it.c **** }
 149              		.loc 1 156 1 view .LVU21
 150 0000 7047     		bx	lr
 151              		.cfi_endproc
 152              	.LFE128:
 154              		.section	.text.CAN_TX_IRQHandler,"ax",%progbits
 155              		.align	1
 156              		.global	CAN_TX_IRQHandler
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	CAN_TX_IRQHandler:
 162              	.LFB129:
 157:Core/Src/stm32f3xx_it.c **** 
 158:Core/Src/stm32f3xx_it.c **** /******************************************************************************/
 159:Core/Src/stm32f3xx_it.c **** /* STM32F3xx Peripheral Interrupt Handlers                                    */
 160:Core/Src/stm32f3xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 161:Core/Src/stm32f3xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 162:Core/Src/stm32f3xx_it.c **** /* please refer to the startup file (startup_stm32f3xx.s).                    */
 163:Core/Src/stm32f3xx_it.c **** /******************************************************************************/
 164:Core/Src/stm32f3xx_it.c **** 
 165:Core/Src/stm32f3xx_it.c **** /**
 166:Core/Src/stm32f3xx_it.c ****   * @brief This function handles CAN TX interrupt.
 167:Core/Src/stm32f3xx_it.c ****   */
 168:Core/Src/stm32f3xx_it.c **** void CAN_TX_IRQHandler(void)
 169:Core/Src/stm32f3xx_it.c **** {
 163              		.loc 1 169 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167 0000 08B5     		push	{r3, lr}
 168              	.LCFI0:
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 3, -8
 171              		.cfi_offset 14, -4
 170:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN CAN_TX_IRQn 0 */
 171:Core/Src/stm32f3xx_it.c **** 
 172:Core/Src/stm32f3xx_it.c ****   /* USER CODE END CAN_TX_IRQn 0 */
 173:Core/Src/stm32f3xx_it.c ****   HAL_CAN_IRQHandler(&hcan);
 172              		.loc 1 173 3 view .LVU23
 173 0002 0248     		ldr	r0, .L14
 174 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 175              	.LVL0:
 174:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN CAN_TX_IRQn 1 */
 175:Core/Src/stm32f3xx_it.c **** 
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s 			page 7


 176:Core/Src/stm32f3xx_it.c ****   /* USER CODE END CAN_TX_IRQn 1 */
 177:Core/Src/stm32f3xx_it.c **** }
 176              		.loc 1 177 1 is_stmt 0 view .LVU24
 177 0008 08BD     		pop	{r3, pc}
 178              	.L15:
 179 000a 00BF     		.align	2
 180              	.L14:
 181 000c 00000000 		.word	hcan
 182              		.cfi_endproc
 183              	.LFE129:
 185              		.section	.text.CAN_RX0_IRQHandler,"ax",%progbits
 186              		.align	1
 187              		.global	CAN_RX0_IRQHandler
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 192              	CAN_RX0_IRQHandler:
 193              	.LFB130:
 178:Core/Src/stm32f3xx_it.c **** 
 179:Core/Src/stm32f3xx_it.c **** /**
 180:Core/Src/stm32f3xx_it.c ****   * @brief This function handles CAN RX0 interrupt.
 181:Core/Src/stm32f3xx_it.c ****   */
 182:Core/Src/stm32f3xx_it.c **** void CAN_RX0_IRQHandler(void)
 183:Core/Src/stm32f3xx_it.c **** {
 194              		.loc 1 183 1 is_stmt 1 view -0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 0
 197              		@ frame_needed = 0, uses_anonymous_args = 0
 198 0000 08B5     		push	{r3, lr}
 199              	.LCFI1:
 200              		.cfi_def_cfa_offset 8
 201              		.cfi_offset 3, -8
 202              		.cfi_offset 14, -4
 184:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN CAN_RX0_IRQn 0 */
 185:Core/Src/stm32f3xx_it.c **** 
 186:Core/Src/stm32f3xx_it.c ****   /* USER CODE END CAN_RX0_IRQn 0 */
 187:Core/Src/stm32f3xx_it.c ****   HAL_CAN_IRQHandler(&hcan);
 203              		.loc 1 187 3 view .LVU26
 204 0002 0248     		ldr	r0, .L18
 205 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 206              	.LVL1:
 188:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN CAN_RX0_IRQn 1 */
 189:Core/Src/stm32f3xx_it.c **** 
 190:Core/Src/stm32f3xx_it.c ****   /* USER CODE END CAN_RX0_IRQn 1 */
 191:Core/Src/stm32f3xx_it.c **** }
 207              		.loc 1 191 1 is_stmt 0 view .LVU27
 208 0008 08BD     		pop	{r3, pc}
 209              	.L19:
 210 000a 00BF     		.align	2
 211              	.L18:
 212 000c 00000000 		.word	hcan
 213              		.cfi_endproc
 214              	.LFE130:
 216              		.section	.text.CAN_RX1_IRQHandler,"ax",%progbits
 217              		.align	1
 218              		.global	CAN_RX1_IRQHandler
 219              		.syntax unified
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s 			page 8


 220              		.thumb
 221              		.thumb_func
 223              	CAN_RX1_IRQHandler:
 224              	.LFB131:
 192:Core/Src/stm32f3xx_it.c **** 
 193:Core/Src/stm32f3xx_it.c **** /**
 194:Core/Src/stm32f3xx_it.c ****   * @brief This function handles CAN RX1 interrupt.
 195:Core/Src/stm32f3xx_it.c ****   */
 196:Core/Src/stm32f3xx_it.c **** void CAN_RX1_IRQHandler(void)
 197:Core/Src/stm32f3xx_it.c **** {
 225              		.loc 1 197 1 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229 0000 08B5     		push	{r3, lr}
 230              	.LCFI2:
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 3, -8
 233              		.cfi_offset 14, -4
 198:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN CAN_RX1_IRQn 0 */
 199:Core/Src/stm32f3xx_it.c **** 
 200:Core/Src/stm32f3xx_it.c ****   /* USER CODE END CAN_RX1_IRQn 0 */
 201:Core/Src/stm32f3xx_it.c ****   HAL_CAN_IRQHandler(&hcan);
 234              		.loc 1 201 3 view .LVU29
 235 0002 0248     		ldr	r0, .L22
 236 0004 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 237              	.LVL2:
 202:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN CAN_RX1_IRQn 1 */
 203:Core/Src/stm32f3xx_it.c **** 
 204:Core/Src/stm32f3xx_it.c ****   /* USER CODE END CAN_RX1_IRQn 1 */
 205:Core/Src/stm32f3xx_it.c **** }
 238              		.loc 1 205 1 is_stmt 0 view .LVU30
 239 0008 08BD     		pop	{r3, pc}
 240              	.L23:
 241 000a 00BF     		.align	2
 242              	.L22:
 243 000c 00000000 		.word	hcan
 244              		.cfi_endproc
 245              	.LFE131:
 247              		.section	.text.TIM1_UP_TIM16_IRQHandler,"ax",%progbits
 248              		.align	1
 249              		.global	TIM1_UP_TIM16_IRQHandler
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 254              	TIM1_UP_TIM16_IRQHandler:
 255              	.LFB132:
 206:Core/Src/stm32f3xx_it.c **** 
 207:Core/Src/stm32f3xx_it.c **** /**
 208:Core/Src/stm32f3xx_it.c ****   * @brief This function handles TIM1 update and TIM16 interrupts.
 209:Core/Src/stm32f3xx_it.c ****   */
 210:Core/Src/stm32f3xx_it.c **** void TIM1_UP_TIM16_IRQHandler(void)
 211:Core/Src/stm32f3xx_it.c **** {
 256              		.loc 1 211 1 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s 			page 9


 260 0000 08B5     		push	{r3, lr}
 261              	.LCFI3:
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 3, -8
 264              		.cfi_offset 14, -4
 212:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 0 */
 213:Core/Src/stm32f3xx_it.c **** 
 214:Core/Src/stm32f3xx_it.c ****   /* USER CODE END TIM1_UP_TIM16_IRQn 0 */
 215:Core/Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 265              		.loc 1 215 3 view .LVU32
 266 0002 0248     		ldr	r0, .L26
 267 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 268              	.LVL3:
 216:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 1 */
 217:Core/Src/stm32f3xx_it.c **** 
 218:Core/Src/stm32f3xx_it.c ****   /* USER CODE END TIM1_UP_TIM16_IRQn 1 */
 219:Core/Src/stm32f3xx_it.c **** }
 269              		.loc 1 219 1 is_stmt 0 view .LVU33
 270 0008 08BD     		pop	{r3, pc}
 271              	.L27:
 272 000a 00BF     		.align	2
 273              	.L26:
 274 000c 00000000 		.word	htim1
 275              		.cfi_endproc
 276              	.LFE132:
 278              		.section	.text.TIM1_TRG_COM_TIM17_IRQHandler,"ax",%progbits
 279              		.align	1
 280              		.global	TIM1_TRG_COM_TIM17_IRQHandler
 281              		.syntax unified
 282              		.thumb
 283              		.thumb_func
 285              	TIM1_TRG_COM_TIM17_IRQHandler:
 286              	.LFB133:
 220:Core/Src/stm32f3xx_it.c **** 
 221:Core/Src/stm32f3xx_it.c **** /**
 222:Core/Src/stm32f3xx_it.c ****   * @brief This function handles TIM1 trigger and commutation and TIM17 interrupts.
 223:Core/Src/stm32f3xx_it.c ****   */
 224:Core/Src/stm32f3xx_it.c **** void TIM1_TRG_COM_TIM17_IRQHandler(void)
 225:Core/Src/stm32f3xx_it.c **** {
 287              		.loc 1 225 1 is_stmt 1 view -0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291 0000 08B5     		push	{r3, lr}
 292              	.LCFI4:
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 3, -8
 295              		.cfi_offset 14, -4
 226:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM1_TRG_COM_TIM17_IRQn 0 */
 227:Core/Src/stm32f3xx_it.c **** 
 228:Core/Src/stm32f3xx_it.c ****   /* USER CODE END TIM1_TRG_COM_TIM17_IRQn 0 */
 229:Core/Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim17);
 296              		.loc 1 229 3 view .LVU35
 297 0002 0248     		ldr	r0, .L30
 298 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 299              	.LVL4:
 230:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM1_TRG_COM_TIM17_IRQn 1 */
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s 			page 10


 231:Core/Src/stm32f3xx_it.c **** 
 232:Core/Src/stm32f3xx_it.c ****   /* USER CODE END TIM1_TRG_COM_TIM17_IRQn 1 */
 233:Core/Src/stm32f3xx_it.c **** }
 300              		.loc 1 233 1 is_stmt 0 view .LVU36
 301 0008 08BD     		pop	{r3, pc}
 302              	.L31:
 303 000a 00BF     		.align	2
 304              	.L30:
 305 000c 00000000 		.word	htim17
 306              		.cfi_endproc
 307              	.LFE133:
 309              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 310              		.align	1
 311              		.global	TIM2_IRQHandler
 312              		.syntax unified
 313              		.thumb
 314              		.thumb_func
 316              	TIM2_IRQHandler:
 317              	.LFB134:
 234:Core/Src/stm32f3xx_it.c **** 
 235:Core/Src/stm32f3xx_it.c **** /**
 236:Core/Src/stm32f3xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 237:Core/Src/stm32f3xx_it.c ****   */
 238:Core/Src/stm32f3xx_it.c **** void TIM2_IRQHandler(void)
 239:Core/Src/stm32f3xx_it.c **** {
 318              		.loc 1 239 1 is_stmt 1 view -0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322 0000 08B5     		push	{r3, lr}
 323              	.LCFI5:
 324              		.cfi_def_cfa_offset 8
 325              		.cfi_offset 3, -8
 326              		.cfi_offset 14, -4
 240:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 241:Core/Src/stm32f3xx_it.c **** 
 242:Core/Src/stm32f3xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 243:Core/Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 327              		.loc 1 243 3 view .LVU38
 328 0002 0248     		ldr	r0, .L34
 329 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 330              	.LVL5:
 244:Core/Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 245:Core/Src/stm32f3xx_it.c **** 
 246:Core/Src/stm32f3xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 247:Core/Src/stm32f3xx_it.c **** }
 331              		.loc 1 247 1 is_stmt 0 view .LVU39
 332 0008 08BD     		pop	{r3, pc}
 333              	.L35:
 334 000a 00BF     		.align	2
 335              	.L34:
 336 000c 00000000 		.word	htim2
 337              		.cfi_endproc
 338              	.LFE134:
 340              		.text
 341              	.Letext0:
 342              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s 			page 11


 343              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 344              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 345              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 346              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 347              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 348              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 349              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f3xx_it.c
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:20     .text.NMI_Handler:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:26     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:44     .text.HardFault_Handler:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:50     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:67     .text.MemManage_Handler:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:73     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:90     .text.BusFault_Handler:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:96     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:113    .text.UsageFault_Handler:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:119    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:136    .text.DebugMon_Handler:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:142    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:155    .text.CAN_TX_IRQHandler:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:161    .text.CAN_TX_IRQHandler:00000000 CAN_TX_IRQHandler
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:181    .text.CAN_TX_IRQHandler:0000000c $d
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:186    .text.CAN_RX0_IRQHandler:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:192    .text.CAN_RX0_IRQHandler:00000000 CAN_RX0_IRQHandler
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:212    .text.CAN_RX0_IRQHandler:0000000c $d
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:217    .text.CAN_RX1_IRQHandler:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:223    .text.CAN_RX1_IRQHandler:00000000 CAN_RX1_IRQHandler
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:243    .text.CAN_RX1_IRQHandler:0000000c $d
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:248    .text.TIM1_UP_TIM16_IRQHandler:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:254    .text.TIM1_UP_TIM16_IRQHandler:00000000 TIM1_UP_TIM16_IRQHandler
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:274    .text.TIM1_UP_TIM16_IRQHandler:0000000c $d
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:279    .text.TIM1_TRG_COM_TIM17_IRQHandler:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:285    .text.TIM1_TRG_COM_TIM17_IRQHandler:00000000 TIM1_TRG_COM_TIM17_IRQHandler
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:305    .text.TIM1_TRG_COM_TIM17_IRQHandler:0000000c $d
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:310    .text.TIM2_IRQHandler:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:316    .text.TIM2_IRQHandler:00000000 TIM2_IRQHandler
C:\Users\walker\AppData\Local\Temp\ccGEIpgs.s:336    .text.TIM2_IRQHandler:0000000c $d

UNDEFINED SYMBOLS
HAL_CAN_IRQHandler
hcan
HAL_TIM_IRQHandler
htim1
htim17
htim2
