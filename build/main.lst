ARM GAS  C:\Users\walker\AppData\Local\Temp\ccNApADw.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.get_NodeID,"ax",%progbits
  20              		.align	1
  21              		.global	get_NodeID
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	get_NodeID:
  27              	.LFB170:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "can.h"
  23:Core/Src/main.c **** #include "tim.h"
  24:Core/Src/main.c **** #include "gpio.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** #include "CO_app_STM32.h"
  29:Core/Src/main.c **** /* USER CODE END Includes */
  30:Core/Src/main.c **** 
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccNApADw.s 			page 2


  31:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  32:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PD */
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/main.c **** void SystemClock_Config(void);
  53:Core/Src/main.c **** void MX_FREERTOS_Init(void);
  54:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  55:Core/Src/main.c **** uint32_t get_NodeID(void);
  56:Core/Src/main.c **** uint32_t NodeID[1];
  57:Core/Src/main.c **** /* USER CODE END PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  60:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /**
  65:Core/Src/main.c ****  * @brief  The application entry point.
  66:Core/Src/main.c ****  * @retval int
  67:Core/Src/main.c ****  */
  68:Core/Src/main.c **** int main(void)
  69:Core/Src/main.c **** {
  70:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* USER CODE END 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  77:Core/Src/main.c ****   HAL_Init();
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE END Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* Configure the system clock */
  84:Core/Src/main.c ****   SystemClock_Config();
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  87:Core/Src/main.c **** 
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccNApADw.s 			page 3


  88:Core/Src/main.c ****   /* USER CODE END SysInit */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* Initialize all configured peripherals */
  91:Core/Src/main.c ****   MX_GPIO_Init();
  92:Core/Src/main.c ****   MX_CAN_Init();
  93:Core/Src/main.c ****   MX_TIM2_Init();
  94:Core/Src/main.c ****   MX_TIM3_Init();
  95:Core/Src/main.c ****   MX_TIM17_Init();
  96:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  97:Core/Src/main.c ****   HCSR04_Init(&htim2);
  98:Core/Src/main.c ****   Flash_Read_Data(0x0800FFFC, NodeID, 1);
  99:Core/Src/main.c ****   HAL_FLASH_Lock();
 100:Core/Src/main.c ****   /* USER CODE END 2 */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* Init scheduler */
 103:Core/Src/main.c ****   osKernelInitialize(); /* Call init function for freertos objects (in freertos.c) */
 104:Core/Src/main.c ****   MX_FREERTOS_Init();
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* Start scheduler */
 107:Core/Src/main.c ****   osKernelStart();
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 110:Core/Src/main.c ****   /* Infinite loop */
 111:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 112:Core/Src/main.c ****   while (1)
 113:Core/Src/main.c ****   {
 114:Core/Src/main.c ****     /* USER CODE END WHILE */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 117:Core/Src/main.c ****   }
 118:Core/Src/main.c ****   /* USER CODE END 3 */
 119:Core/Src/main.c **** }
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** /**
 122:Core/Src/main.c ****  * @brief System Clock Configuration
 123:Core/Src/main.c ****  * @retval None
 124:Core/Src/main.c ****  */
 125:Core/Src/main.c **** void SystemClock_Config(void)
 126:Core/Src/main.c **** {
 127:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 128:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 131:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 132:Core/Src/main.c ****    */
 133:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 135:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 139:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 140:Core/Src/main.c ****   {
 141:Core/Src/main.c ****     Error_Handler();
 142:Core/Src/main.c ****   }
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccNApADw.s 			page 4


 145:Core/Src/main.c ****    */
 146:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 147:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 148:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 150:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 153:Core/Src/main.c ****   {
 154:Core/Src/main.c ****     Error_Handler();
 155:Core/Src/main.c ****   }
 156:Core/Src/main.c **** }
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 159:Core/Src/main.c **** uint32_t get_NodeID(void)
 160:Core/Src/main.c **** {
  29              		.loc 1 160 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 161:Core/Src/main.c ****   return NodeID[0];
  34              		.loc 1 161 3 view .LVU1
 162:Core/Src/main.c **** }
  35              		.loc 1 162 1 is_stmt 0 view .LVU2
  36 0000 014B     		ldr	r3, .L2
  37 0002 1868     		ldr	r0, [r3]
  38 0004 7047     		bx	lr
  39              	.L3:
  40 0006 00BF     		.align	2
  41              	.L2:
  42 0008 00000000 		.word	.LANCHOR0
  43              		.cfi_endproc
  44              	.LFE170:
  46              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
  47              		.align	1
  48              		.global	HAL_TIM_PeriodElapsedCallback
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  53              	HAL_TIM_PeriodElapsedCallback:
  54              	.LVL0:
  55              	.LFB171:
 163:Core/Src/main.c **** /* USER CODE END 4 */
 164:Core/Src/main.c **** 
 165:Core/Src/main.c **** /**
 166:Core/Src/main.c ****  * @brief  Period elapsed callback in non blocking mode
 167:Core/Src/main.c ****  * @note   This function is called  when TIM1 interrupt took place, inside
 168:Core/Src/main.c ****  * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 169:Core/Src/main.c ****  * a global variable "uwTick" used as application time base.
 170:Core/Src/main.c ****  * @param  htim : TIM handle
 171:Core/Src/main.c ****  * @retval None
 172:Core/Src/main.c ****  */
 173:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 174:Core/Src/main.c **** {
  56              		.loc 1 174 1 is_stmt 1 view -0
  57              		.cfi_startproc
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccNApADw.s 			page 5


  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		.loc 1 174 1 is_stmt 0 view .LVU4
  61 0000 10B5     		push	{r4, lr}
  62              	.LCFI0:
  63              		.cfi_def_cfa_offset 8
  64              		.cfi_offset 4, -8
  65              		.cfi_offset 14, -4
  66 0002 0446     		mov	r4, r0
 175:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 178:Core/Src/main.c ****   if (htim->Instance == TIM1)
  67              		.loc 1 178 3 is_stmt 1 view .LVU5
  68              		.loc 1 178 11 is_stmt 0 view .LVU6
  69 0004 0268     		ldr	r2, [r0]
  70              		.loc 1 178 6 view .LVU7
  71 0006 074B     		ldr	r3, .L10
  72 0008 9A42     		cmp	r2, r3
  73 000a 05D0     		beq	.L8
  74              	.LVL1:
  75              	.L5:
 179:Core/Src/main.c ****   {
 180:Core/Src/main.c ****     HAL_IncTick();
 181:Core/Src/main.c ****   }
 182:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 183:Core/Src/main.c ****   if (htim == canopenNodeSTM32->timerHandle)
  76              		.loc 1 183 3 is_stmt 1 view .LVU8
  77              		.loc 1 183 31 is_stmt 0 view .LVU9
  78 000c 064B     		ldr	r3, .L10+4
  79 000e 1B68     		ldr	r3, [r3]
  80 0010 5B68     		ldr	r3, [r3, #4]
  81              		.loc 1 183 6 view .LVU10
  82 0012 A342     		cmp	r3, r4
  83 0014 03D0     		beq	.L9
  84              	.L4:
 184:Core/Src/main.c ****   {
 185:Core/Src/main.c ****     canopen_app_interrupt();
 186:Core/Src/main.c ****   }
 187:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 188:Core/Src/main.c **** }
  85              		.loc 1 188 1 view .LVU11
  86 0016 10BD     		pop	{r4, pc}
  87              	.LVL2:
  88              	.L8:
 180:Core/Src/main.c ****   }
  89              		.loc 1 180 5 is_stmt 1 view .LVU12
  90 0018 FFF7FEFF 		bl	HAL_IncTick
  91              	.LVL3:
 180:Core/Src/main.c ****   }
  92              		.loc 1 180 5 is_stmt 0 view .LVU13
  93 001c F6E7     		b	.L5
  94              	.L9:
 185:Core/Src/main.c ****   }
  95              		.loc 1 185 5 is_stmt 1 view .LVU14
  96 001e FFF7FEFF 		bl	canopen_app_interrupt
  97              	.LVL4:
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccNApADw.s 			page 6


  98              		.loc 1 188 1 is_stmt 0 view .LVU15
  99 0022 F8E7     		b	.L4
 100              	.L11:
 101              		.align	2
 102              	.L10:
 103 0024 002C0140 		.word	1073818624
 104 0028 00000000 		.word	canopenNodeSTM32
 105              		.cfi_endproc
 106              	.LFE171:
 108              		.section	.text.Error_Handler,"ax",%progbits
 109              		.align	1
 110              		.global	Error_Handler
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 115              	Error_Handler:
 116              	.LFB172:
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** /**
 191:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 192:Core/Src/main.c ****  * @retval None
 193:Core/Src/main.c ****  */
 194:Core/Src/main.c **** void Error_Handler(void)
 195:Core/Src/main.c **** {
 117              		.loc 1 195 1 is_stmt 1 view -0
 118              		.cfi_startproc
 119              		@ Volatile: function does not return.
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 196:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 197:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 198:Core/Src/main.c ****   __disable_irq();
 123              		.loc 1 198 3 view .LVU17
 124              	.LBB4:
 125              	.LBI4:
 126              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccNApADw.s 			page 7


  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccNApADw.s 			page 8


  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccNApADw.s 			page 9


 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 127              		.loc 2 140 27 view .LVU18
 128              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 129              		.loc 2 142 3 view .LVU19
 130              		.syntax unified
 131              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 132 0000 72B6     		cpsid i
 133              	@ 0 "" 2
 134              		.thumb
 135              		.syntax unified
 136              	.L13:
 137              	.LBE5:
 138              	.LBE4:
 199:Core/Src/main.c ****   while (1)
 139              		.loc 1 199 3 discriminator 1 view .LVU20
 200:Core/Src/main.c ****   {
 201:Core/Src/main.c ****   }
 140              		.loc 1 201 3 discriminator 1 view .LVU21
 199:Core/Src/main.c ****   while (1)
 141              		.loc 1 199 9 discriminator 1 view .LVU22
 142 0002 FEE7     		b	.L13
 143              		.cfi_endproc
 144              	.LFE172:
 146              		.section	.text.SystemClock_Config,"ax",%progbits
 147              		.align	1
 148              		.global	SystemClock_Config
 149              		.syntax unified
 150              		.thumb
 151              		.thumb_func
 153              	SystemClock_Config:
 154              	.LFB169:
 126:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 155              		.loc 1 126 1 view -0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 64
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159 0000 00B5     		push	{lr}
 160              	.LCFI1:
 161              		.cfi_def_cfa_offset 4
 162              		.cfi_offset 14, -4
 163 0002 91B0     		sub	sp, sp, #68
 164              	.LCFI2:
 165              		.cfi_def_cfa_offset 72
 127:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 166              		.loc 1 127 3 view .LVU24
 127:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 167              		.loc 1 127 22 is_stmt 0 view .LVU25
 168 0004 2822     		movs	r2, #40
 169 0006 0021     		movs	r1, #0
 170 0008 06A8     		add	r0, sp, #24
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccNApADw.s 			page 10


 171 000a FFF7FEFF 		bl	memset
 172              	.LVL5:
 128:Core/Src/main.c **** 
 173              		.loc 1 128 3 is_stmt 1 view .LVU26
 128:Core/Src/main.c **** 
 174              		.loc 1 128 22 is_stmt 0 view .LVU27
 175 000e 0023     		movs	r3, #0
 176 0010 0193     		str	r3, [sp, #4]
 177 0012 0293     		str	r3, [sp, #8]
 178 0014 0393     		str	r3, [sp, #12]
 179 0016 0493     		str	r3, [sp, #16]
 180 0018 0593     		str	r3, [sp, #20]
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 181              		.loc 1 133 3 is_stmt 1 view .LVU28
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 182              		.loc 1 133 36 is_stmt 0 view .LVU29
 183 001a 0223     		movs	r3, #2
 184 001c 0693     		str	r3, [sp, #24]
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 185              		.loc 1 134 3 is_stmt 1 view .LVU30
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 186              		.loc 1 134 30 is_stmt 0 view .LVU31
 187 001e 0122     		movs	r2, #1
 188 0020 0A92     		str	r2, [sp, #40]
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 189              		.loc 1 135 3 is_stmt 1 view .LVU32
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 190              		.loc 1 135 41 is_stmt 0 view .LVU33
 191 0022 1022     		movs	r2, #16
 192 0024 0B92     		str	r2, [sp, #44]
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 193              		.loc 1 136 3 is_stmt 1 view .LVU34
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 194              		.loc 1 136 34 is_stmt 0 view .LVU35
 195 0026 0D93     		str	r3, [sp, #52]
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 196              		.loc 1 137 3 is_stmt 1 view .LVU36
 138:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 197              		.loc 1 138 3 view .LVU37
 138:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 198              		.loc 1 138 32 is_stmt 0 view .LVU38
 199 0028 4FF46013 		mov	r3, #3670016
 200 002c 0F93     		str	r3, [sp, #60]
 139:Core/Src/main.c ****   {
 201              		.loc 1 139 3 is_stmt 1 view .LVU39
 139:Core/Src/main.c ****   {
 202              		.loc 1 139 7 is_stmt 0 view .LVU40
 203 002e 06A8     		add	r0, sp, #24
 204 0030 FFF7FEFF 		bl	HAL_RCC_OscConfig
 205              	.LVL6:
 139:Core/Src/main.c ****   {
 206              		.loc 1 139 6 view .LVU41
 207 0034 80B9     		cbnz	r0, .L18
 146:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 208              		.loc 1 146 3 is_stmt 1 view .LVU42
 146:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 209              		.loc 1 146 31 is_stmt 0 view .LVU43
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccNApADw.s 			page 11


 210 0036 0F23     		movs	r3, #15
 211 0038 0193     		str	r3, [sp, #4]
 147:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 212              		.loc 1 147 3 is_stmt 1 view .LVU44
 147:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 213              		.loc 1 147 34 is_stmt 0 view .LVU45
 214 003a 0221     		movs	r1, #2
 215 003c 0291     		str	r1, [sp, #8]
 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 216              		.loc 1 148 3 is_stmt 1 view .LVU46
 148:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 217              		.loc 1 148 35 is_stmt 0 view .LVU47
 218 003e 0023     		movs	r3, #0
 219 0040 0393     		str	r3, [sp, #12]
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 220              		.loc 1 149 3 is_stmt 1 view .LVU48
 149:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 221              		.loc 1 149 36 is_stmt 0 view .LVU49
 222 0042 4FF48062 		mov	r2, #1024
 223 0046 0492     		str	r2, [sp, #16]
 150:Core/Src/main.c **** 
 224              		.loc 1 150 3 is_stmt 1 view .LVU50
 150:Core/Src/main.c **** 
 225              		.loc 1 150 36 is_stmt 0 view .LVU51
 226 0048 0593     		str	r3, [sp, #20]
 152:Core/Src/main.c ****   {
 227              		.loc 1 152 3 is_stmt 1 view .LVU52
 152:Core/Src/main.c ****   {
 228              		.loc 1 152 7 is_stmt 0 view .LVU53
 229 004a 01A8     		add	r0, sp, #4
 230 004c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 231              	.LVL7:
 152:Core/Src/main.c ****   {
 232              		.loc 1 152 6 view .LVU54
 233 0050 20B9     		cbnz	r0, .L19
 156:Core/Src/main.c **** 
 234              		.loc 1 156 1 view .LVU55
 235 0052 11B0     		add	sp, sp, #68
 236              	.LCFI3:
 237              		.cfi_remember_state
 238              		.cfi_def_cfa_offset 4
 239              		@ sp needed
 240 0054 5DF804FB 		ldr	pc, [sp], #4
 241              	.L18:
 242              	.LCFI4:
 243              		.cfi_restore_state
 141:Core/Src/main.c ****   }
 244              		.loc 1 141 5 is_stmt 1 view .LVU56
 245 0058 FFF7FEFF 		bl	Error_Handler
 246              	.LVL8:
 247              	.L19:
 154:Core/Src/main.c ****   }
 248              		.loc 1 154 5 view .LVU57
 249 005c FFF7FEFF 		bl	Error_Handler
 250              	.LVL9:
 251              		.cfi_endproc
 252              	.LFE169:
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccNApADw.s 			page 12


 254              		.section	.text.main,"ax",%progbits
 255              		.align	1
 256              		.global	main
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 261              	main:
 262              	.LFB168:
  69:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 263              		.loc 1 69 1 view -0
 264              		.cfi_startproc
 265              		@ Volatile: function does not return.
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268 0000 08B5     		push	{r3, lr}
 269              	.LCFI5:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 3, -8
 272              		.cfi_offset 14, -4
  77:Core/Src/main.c **** 
 273              		.loc 1 77 3 view .LVU59
 274 0002 FFF7FEFF 		bl	HAL_Init
 275              	.LVL10:
  84:Core/Src/main.c **** 
 276              		.loc 1 84 3 view .LVU60
 277 0006 FFF7FEFF 		bl	SystemClock_Config
 278              	.LVL11:
  91:Core/Src/main.c ****   MX_CAN_Init();
 279              		.loc 1 91 3 view .LVU61
 280 000a FFF7FEFF 		bl	MX_GPIO_Init
 281              	.LVL12:
  92:Core/Src/main.c ****   MX_TIM2_Init();
 282              		.loc 1 92 3 view .LVU62
 283 000e FFF7FEFF 		bl	MX_CAN_Init
 284              	.LVL13:
  93:Core/Src/main.c ****   MX_TIM3_Init();
 285              		.loc 1 93 3 view .LVU63
 286 0012 FFF7FEFF 		bl	MX_TIM2_Init
 287              	.LVL14:
  94:Core/Src/main.c ****   MX_TIM17_Init();
 288              		.loc 1 94 3 view .LVU64
 289 0016 FFF7FEFF 		bl	MX_TIM3_Init
 290              	.LVL15:
  95:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 291              		.loc 1 95 3 view .LVU65
 292 001a FFF7FEFF 		bl	MX_TIM17_Init
 293              	.LVL16:
  97:Core/Src/main.c ****   Flash_Read_Data(0x0800FFFC, NodeID, 1);
 294              		.loc 1 97 3 view .LVU66
 295 001e 0848     		ldr	r0, .L23
 296 0020 FFF7FEFF 		bl	HCSR04_Init
 297              	.LVL17:
  98:Core/Src/main.c ****   HAL_FLASH_Lock();
 298              		.loc 1 98 3 view .LVU67
 299 0024 0122     		movs	r2, #1
 300 0026 0749     		ldr	r1, .L23+4
 301 0028 0748     		ldr	r0, .L23+8
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccNApADw.s 			page 13


 302 002a FFF7FEFF 		bl	Flash_Read_Data
 303              	.LVL18:
  99:Core/Src/main.c ****   /* USER CODE END 2 */
 304              		.loc 1 99 3 view .LVU68
 305 002e FFF7FEFF 		bl	HAL_FLASH_Lock
 306              	.LVL19:
 103:Core/Src/main.c ****   MX_FREERTOS_Init();
 307              		.loc 1 103 3 view .LVU69
 308 0032 FFF7FEFF 		bl	osKernelInitialize
 309              	.LVL20:
 104:Core/Src/main.c **** 
 310              		.loc 1 104 3 view .LVU70
 311 0036 FFF7FEFF 		bl	MX_FREERTOS_Init
 312              	.LVL21:
 107:Core/Src/main.c **** 
 313              		.loc 1 107 3 view .LVU71
 314 003a FFF7FEFF 		bl	osKernelStart
 315              	.LVL22:
 316              	.L21:
 112:Core/Src/main.c ****   {
 317              		.loc 1 112 3 discriminator 1 view .LVU72
 117:Core/Src/main.c ****   /* USER CODE END 3 */
 318              		.loc 1 117 3 discriminator 1 view .LVU73
 112:Core/Src/main.c ****   {
 319              		.loc 1 112 9 discriminator 1 view .LVU74
 320 003e FEE7     		b	.L21
 321              	.L24:
 322              		.align	2
 323              	.L23:
 324 0040 00000000 		.word	htim2
 325 0044 00000000 		.word	.LANCHOR0
 326 0048 FCFF0008 		.word	134283260
 327              		.cfi_endproc
 328              	.LFE168:
 330              		.global	NodeID
 331              		.section	.bss.NodeID,"aw",%nobits
 332              		.align	2
 333              		.set	.LANCHOR0,. + 0
 336              	NodeID:
 337 0000 00000000 		.space	4
 338              		.text
 339              	.Letext0:
 340              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 341              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 342              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 343              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 344              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 345              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 346              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 347              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 348              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 349              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 350              		.file 13 "Middlewares/Third_Party/CANopenNode_STM32/CO_driver_target.h"
 351              		.file 14 "Middlewares/Third_Party/CANopenNode/301/CO_ODinterface.h"
 352              		.file 15 "Middlewares/Third_Party/CANopenNode/301/CO_Emergency.h"
 353              		.file 16 "Middlewares/Third_Party/CANopenNode/301/CO_NMT_Heartbeat.h"
 354              		.file 17 "Middlewares/Third_Party/CANopenNode/301/CO_HBconsumer.h"
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccNApADw.s 			page 14


 355              		.file 18 "Middlewares/Third_Party/CANopenNode/301/CO_SDOserver.h"
 356              		.file 19 "Middlewares/Third_Party/CANopenNode/301/CO_SYNC.h"
 357              		.file 20 "Middlewares/Third_Party/CANopenNode/301/CO_PDO.h"
 358              		.file 21 "Middlewares/Third_Party/CANopenNode/301/CO_TIME.h"
 359              		.file 22 "Middlewares/Third_Party/CANopenNode/303/CO_LEDs.h"
 360              		.file 23 "Middlewares/Third_Party/CANopenNode/305/CO_LSS.h"
 361              		.file 24 "Middlewares/Third_Party/CANopenNode/305/CO_LSSslave.h"
 362              		.file 25 "Middlewares/Third_Party/CANopenNode/CANopen.h"
 363              		.file 26 "Middlewares/Third_Party/CANopenNode_STM32/CO_app_STM32.h"
 364              		.file 27 "Core/Inc/tim.h"
 365              		.file 28 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 366              		.file 29 "Core/Inc/gpio.h"
 367              		.file 30 "Core/Inc/can.h"
 368              		.file 31 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_flash.h"
 369              		.file 32 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 370              		.file 33 "<built-in>"
ARM GAS  C:\Users\walker\AppData\Local\Temp\ccNApADw.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\walker\AppData\Local\Temp\ccNApADw.s:20     .text.get_NodeID:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccNApADw.s:26     .text.get_NodeID:00000000 get_NodeID
C:\Users\walker\AppData\Local\Temp\ccNApADw.s:42     .text.get_NodeID:00000008 $d
C:\Users\walker\AppData\Local\Temp\ccNApADw.s:47     .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccNApADw.s:53     .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\walker\AppData\Local\Temp\ccNApADw.s:103    .text.HAL_TIM_PeriodElapsedCallback:00000024 $d
C:\Users\walker\AppData\Local\Temp\ccNApADw.s:109    .text.Error_Handler:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccNApADw.s:115    .text.Error_Handler:00000000 Error_Handler
C:\Users\walker\AppData\Local\Temp\ccNApADw.s:147    .text.SystemClock_Config:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccNApADw.s:153    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\walker\AppData\Local\Temp\ccNApADw.s:255    .text.main:00000000 $t
C:\Users\walker\AppData\Local\Temp\ccNApADw.s:261    .text.main:00000000 main
C:\Users\walker\AppData\Local\Temp\ccNApADw.s:324    .text.main:00000040 $d
C:\Users\walker\AppData\Local\Temp\ccNApADw.s:336    .bss.NodeID:00000000 NodeID
C:\Users\walker\AppData\Local\Temp\ccNApADw.s:332    .bss.NodeID:00000000 $d

UNDEFINED SYMBOLS
HAL_IncTick
canopen_app_interrupt
canopenNodeSTM32
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_CAN_Init
MX_TIM2_Init
MX_TIM3_Init
MX_TIM17_Init
HCSR04_Init
Flash_Read_Data
HAL_FLASH_Lock
osKernelInitialize
MX_FREERTOS_Init
osKernelStart
htim2
